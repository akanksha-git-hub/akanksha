declare const CreateAuthentication: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMERCID";
                readonly amount: "2.00";
                readonly currency: "356";
                readonly bankid: "456";
                readonly itemcode: "DIRECT";
                readonly authentication_type: "3ds2";
                readonly "3ds_parameter": "merchant";
                readonly orderid: "TEST0000009005";
                readonly additional_info: {
                    readonly additional_info1: "Details1";
                    readonly additional_info2: "Details2";
                    readonly additional_info3: "Details3";
                    readonly additional_info4: "Details4";
                    readonly additional_info5: "Details5";
                    readonly additional_info6: "Details6";
                    readonly additional_info7: "Details7";
                    readonly additional_info8: "Details8";
                    readonly additional_info9: "Details9";
                    readonly additional_info10: "Details10";
                };
                readonly ru: "https://www.merchanturl.com/response.jsp";
                readonly payment_method_type: "card";
                readonly device: {
                    readonly init_channel: "internet";
                    readonly ip: "124.124.1.1";
                    readonly mac: "11-AC-58-21-1B-AA";
                    readonly imei: "990000112233445";
                    readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                    readonly accept_header: "text/html";
                    readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                    readonly browser_tz: "-330";
                    readonly browser_color_depth: "32";
                    readonly browser_java_enabled: "false";
                    readonly browser_screen_height: "601";
                    readonly browser_screen_width: "657";
                    readonly browser_language: "en-US";
                    readonly browser_javascript_enabled: "true";
                };
                readonly card: {
                    readonly number: "4242420000001234";
                    readonly expiry_month: "12";
                    readonly expiry_year: "2029";
                    readonly cvv: "123";
                    readonly holder_name: "John Doe";
                };
                readonly txn_process_type: "y3ds";
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly amount: {
                readonly title: "amount";
                readonly "x-stoplight": {
                    readonly id: "s5xd8bwxp2orm";
                };
                readonly type: "string";
                readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                readonly description: "Transaction amount in two decimals, eg. 299.28";
                readonly examples: readonly ["299.28"];
            };
            readonly orderid: {
                readonly title: "orderid";
                readonly "x-stoplight": {
                    readonly id: "lmwrwf7xn6wq8";
                };
                readonly type: "string";
                readonly description: "Unique ID generated by the merchant for each request";
                readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                readonly examples: readonly ["TEST0000009005"];
            };
            readonly currency: {
                readonly title: "currency";
                readonly "x-stoplight": {
                    readonly id: "1ehjh4f7vidz7";
                };
                readonly type: "string";
                readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                readonly examples: readonly ["356"];
            };
            readonly bankid: {
                readonly title: "bankid";
                readonly "x-stoplight": {
                    readonly id: "gf7ntync4cj73";
                };
                readonly type: "string";
                readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly examples: readonly ["1HM"];
            };
            readonly itemcode: {
                readonly title: "item code";
                readonly "x-stoplight": {
                    readonly id: "tz16mo44yvoae";
                };
                readonly type: "string";
                readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                readonly pattern: "^[A-Za-z0-9]{1,20}$";
                readonly examples: readonly ["DIRECT"];
            };
            readonly authentication_type: {
                readonly title: "authentication_type";
                readonly "x-stoplight": {
                    readonly id: "c33ke2q5rl7ql";
                };
                readonly type: "string";
                readonly description: "Represents the type of authentication initiated in the request, will be fixed value - 3ds2";
                readonly enum: readonly ["3ds2"];
                readonly examples: readonly ["3ds2"];
            };
            readonly "3ds_parameter": {
                readonly title: "3ds_parameter";
                readonly "x-stoplight": {
                    readonly id: "9cf00xo1tntr9";
                };
                readonly type: "string";
                readonly enum: readonly ["merchant"];
                readonly description: "Value that determines which entity will capture the device attributes, possible values are merchant";
                readonly examples: readonly ["merchant"];
            };
            readonly ru: {
                readonly title: "return URL";
                readonly "x-stoplight": {
                    readonly id: "2nnmkccdq26ck";
                };
                readonly type: "string";
                readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                readonly examples: readonly ["https://www.merchant.com"];
            };
            readonly payment_method_type: {
                readonly title: "payment_method_type";
                readonly "x-stoplight": {
                    readonly id: "kklghqguq1r3q";
                };
                readonly type: "string";
                readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.";
                readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                readonly examples: readonly ["card"];
            };
            readonly txn_process_type: {
                readonly title: "txn_process_type";
                readonly "x-stoplight": {
                    readonly id: "lyz1n731cb596";
                };
                readonly type: "string";
                readonly description: "Indicates transaction processing type, will be the following values:\nAFA payment\n•\tcard - 3ds or y3ds or 3ds_redirect\n•\tupi – collect, qr or intent\n•\tnetbanking – nb\n•\teft - offline\nRecurring payment\n•\tcard, upi, bankaccount – si";
                readonly enum: readonly ["y3ds", "3ds", "collect", "intent", "qr", "nb", "eft", "si"];
                readonly examples: readonly ["y3ds"];
            };
            readonly device: {
                readonly type: "object";
                readonly "x-stoplight": {
                    readonly id: "1dup8vlut7f5l";
                };
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly device: {
                            readonly init_channel: "internet";
                            readonly ip: "124.124.1.1";
                            readonly mac: "11-AC-58-21-1B-AA";
                            readonly imei: "990000112233445";
                            readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                            readonly accept_header: "text/html";
                            readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                            readonly browser_tz: "-330";
                            readonly browser_color_depth: "32";
                            readonly browser_java_enabled: "false";
                            readonly browser_screen_height: "601";
                            readonly browser_screen_width: "657";
                            readonly browser_language: "en-US";
                            readonly browser_javascript_enabled: "true";
                        };
                    };
                };
                readonly title: "Device";
                readonly description: "";
                readonly properties: {
                    readonly init_channel: {
                        readonly type: "string";
                        readonly description: "Initiating channel,accepted values are internet,app or kiosk";
                        readonly enum: readonly ["internet", "app", "kiosk"];
                        readonly examples: readonly ["internet"];
                    };
                    readonly ip: {
                        readonly type: "string";
                        readonly description: "Actual end customer IP address is required to be passed";
                        readonly maxLength: 15;
                        readonly examples: readonly ["124.124.1.1"];
                    };
                    readonly user_agent: {
                        readonly type: "string";
                        readonly description: "Exact content of the HTTP user-agent header\n\nNote: If the total length of the User-Agent sent by the browser exceeds 2048 characters, truncate the excess portion";
                        readonly pattern: "=^[A-Za-z0-9\\\\_\\\\:\\\\-\\\\,\\\\;\\\\/\\\\)\\\\(\\\\.\\\\s\\\\+\\\\[\\\\]\\\\=@]{10,255}$";
                        readonly examples: readonly ["Mozilla/5.0(WindowsNT10.0;WOW64;rv: 51.0)Gecko/20100101Firefox/51.0"];
                    };
                    readonly accept_header: {
                        readonly type: "string";
                        readonly description: "Customer browser accept header values";
                        readonly maxLength: 255;
                        readonly pattern: "^[0-9A-Za-z\\\\.\\\\+\\\\-\\\\/\\\\=\\\\*\\\\,\\\\;]{10,255}$";
                        readonly examples: readonly ["application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"];
                    };
                    readonly browser_language: {
                        readonly type: "string";
                        readonly description: "Value representing the browser language, returned from navigator.language property, for eg. en-US";
                        readonly maxLength: 5;
                        readonly pattern: "^[A-Za-z\\\\-]{2,5}$";
                        readonly examples: readonly ["en-US"];
                    };
                    readonly browser_javascript_enabled: {
                        readonly type: "string";
                        readonly enum: readonly ["true", "false"];
                        readonly description: "Boolean (true or false) that represents the ability of the cardholder browser to execute JavaScript.\nNote – if true, additional attributes of browser_tz, browser_color_depth, browser_java_enabled, browser_screen_height, browser_screen_width are mandatory";
                        readonly examples: readonly ["true"];
                    };
                    readonly browser_tz: {
                        readonly type: "string";
                        readonly description: "Time-zone offset in minutes between UTC and the Cardholder browser local time.\n\nNote that the offset is positive if the local time zone is behind UTC and negative if it is ahead. For eg. if UTC -5 hours then browser_tz = 300 and if UTC +5 hours then browser_tz = -300’";
                        readonly pattern: "^[0-9\\\\+\\\\-]{2,6}$";
                        readonly maxLength: 6;
                        readonly examples: readonly ["-330"];
                    };
                    readonly browser_color_depth: {
                        readonly type: "string";
                        readonly description: "Value representing the bit depth of the colour palette for displaying images, in bits per pixel.\n\nObtained from Cardholder browser using the screen.Color.Depth property. In case the actual vaue does not exist in the allowed values, use the closest lower value,for eg. 32";
                        readonly maxLength: 5;
                        readonly pattern: "^[0-9]{2,5}$";
                        readonly examples: readonly ["652"];
                    };
                    readonly browser_java_enabled: {
                        readonly type: "string";
                        readonly description: "Boolean (true or false) that represents the ability of the cardholder browser to execute Java. Value is returned from the navigator.javaEnabled property";
                        readonly enum: readonly ["true", "false"];
                        readonly examples: readonly ["false"];
                    };
                    readonly browser_screen_height: {
                        readonly type: "string";
                        readonly description: "Total height of the Cardholder’s screen in pixels. Value is returned from the screen.height property for eg. 601";
                        readonly pattern: "^[0-9]{2,5}$";
                        readonly maxLength: 5;
                        readonly examples: readonly ["452"];
                    };
                    readonly browser_screen_width: {
                        readonly type: "string";
                        readonly description: "Total width of the cardholder’s screen in pixels. Value is returned from the screen.width property, for eg. 657";
                        readonly pattern: "^[0-9]{2,5}$";
                        readonly maxLength: 5;
                        readonly examples: readonly ["702"];
                    };
                };
                readonly required: readonly ["init_channel", "ip", "user_agent", "accept_header", "browser_language", "browser_javascript_enabled"];
            };
            readonly card: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "1xxgnveu0ix3k";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly number: "4242420000001234";
                                readonly expiry_month: "12";
                                readonly expiry_year: "2029";
                                readonly holder_name: "John Doe";
                                readonly cvv: "123";
                                readonly tokenize: "true";
                                readonly coft_consent: "true";
                            };
                        };
                    };
                    readonly title: "Pay using card number - pan";
                    readonly properties: {
                        readonly number: {
                            readonly type: "string";
                            readonly pattern: "^[0-9]{16}$";
                            readonly description: "Card number";
                            readonly examples: readonly ["4242420000001234"];
                        };
                        readonly expiry_month: {
                            readonly type: "string";
                            readonly description: "Card expiry month in MM format";
                            readonly examples: readonly ["02"];
                        };
                        readonly expiry_year: {
                            readonly type: "string";
                            readonly description: "Card expiry year in YYYY format";
                            readonly examples: readonly ["2029"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly tokenize: {
                            readonly type: "string";
                            readonly enum: readonly ["true"];
                            readonly description: "If the card is required to be tokenized then, the value is true";
                        };
                        readonly coft_consent: {
                            readonly type: "string";
                            readonly enum: readonly ["true"];
                            readonly description: "Fixed value as true, confirming the card holder consent to tokenize the card";
                        };
                    };
                    readonly required: readonly ["number", "expiry_month", "expiry_year", "cvv"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "ze1cvmk9lawl5";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly network_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using network token";
                    readonly properties: {
                        readonly network_token: {
                            readonly type: "object";
                            readonly required: readonly ["token_value", "token_cryptogram", "token_expiry_month", "token_expiry_year"];
                            readonly properties: {
                                readonly token_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly token_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\/\\\\!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)\\\\{\\\\}_\\\\+\\\\=\\\\|:”;’,\\\\.~`\\\\-\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly token_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly token_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["network_token", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "605rgi2ucynyf";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly issuer_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using issuer token";
                    readonly properties: {
                        readonly issuer_token: {
                            readonly type: "object";
                            readonly required: readonly ["token_value", "token_cryptogram", "token_expiry_month", "token_expiry_year"];
                            readonly properties: {
                                readonly token_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly token_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\\\\\/\\\\\\\\!@#\\\\\\\\$%\\\\\\\\^&\\\\\\\\*\\\\\\\\(\\\\\\\\)\\\\\\\\{\\\\\\\\}_\\\\\\\\+\\\\\\\\=\\\\\\\\|:”;’,\\\\\\\\.~`\\\\\\\\-\\\\\\\\\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly token_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly token_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value ";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["issuer_token", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "dbr5tekgwo4lq";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly cardaccountid: "CA0AAEF9000000000123";
                                readonly cvv: "123";
                                readonly card_end: "0055";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using card account id";
                    readonly properties: {
                        readonly cardaccountid: {
                            readonly type: "string";
                            readonly description: "Unique ID created by BillDesk for the combination of card number, mercid and customer_refid";
                            readonly examples: readonly ["CA0AAEF9000000000123"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value ";
                            readonly examples: readonly ["123"];
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                            readonly description: "Cardholder name";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["cardaccountid", "cvv", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "77jgo8f9g4srj";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly network_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using alt id token";
                    readonly properties: {
                        readonly altid_token: {
                            readonly type: "object";
                            readonly required: readonly ["altid_value", "altid_cryptogram", "altid_expiry_month", "altid_expiry_year"];
                            readonly properties: {
                                readonly altid_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly altid_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\/\\\\!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)\\\\{\\\\}_\\\\+\\\\=\\\\|:”;’,\\\\.~`\\\\-\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly altid_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly altid_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                                readonly altid_trid: {
                                    readonly type: "string";
                                    readonly description: "conditional: required only for AMEX - validate once";
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["altid_token", "cvv", "holder_name"];
                }];
            };
            readonly mandate: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly mercid: "BDMERCID";
                        readonly customer_refid: "CUST614514520010012";
                        readonly subscription_refid: "SUB614514510012";
                        readonly subscription_desc: "Unlimited Plan";
                        readonly start_date: "2023-02-08";
                        readonly end_date: "2050-12-22";
                        readonly amount: "774.00";
                        readonly currency: "356";
                        readonly frequency: "adho";
                        readonly amount_type: "max";
                    };
                };
                readonly properties: {
                    readonly mercid: {
                        readonly type: "string";
                        readonly description: "Unique identifier as defined by BillDesk for each merchant";
                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                        readonly examples: readonly ["BDMERCID"];
                    };
                    readonly customer_refid: {
                        readonly type: "string";
                        readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer";
                        readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                        readonly examples: readonly ["CUSTREF00A00011"];
                    };
                    readonly subscription_refid: {
                        readonly type: "string";
                        readonly description: "Unique reference assigned by merchant for the subscription";
                        readonly pattern: "^[A-Za-z0-9_-]{1,128}$";
                        readonly examples: readonly ["SUBREF00A00011"];
                    };
                    readonly subscription_desc: {
                        readonly type: "string";
                        readonly description: "Customer friendly description for the subscription, this narration is generally displayed to the customer at the issuer channel";
                    };
                    readonly start_date: {
                        readonly title: "start_date";
                        readonly "x-stoplight": {
                            readonly id: "v7tyy2tfnut1w";
                        };
                        readonly type: "string";
                        readonly description: "Subscription start date in yyyy-mm-dd format\nNote: Should be greater than or equal to current date (IST timezone). \nNote for UPI : Should be equal to mandate creation date for UPI. In UPI, an subsequent charge is created on a successful mandate. This includes the first charge as well along with mandate creation. Since first charge is done immediately, it is important that the mandate “start_date” should be today’s date \n";
                        readonly format: "date";
                        readonly examples: readonly ["2021-05-08"];
                    };
                    readonly end_date: {
                        readonly title: "end_date";
                        readonly "x-stoplight": {
                            readonly id: "uz968g6golwjt";
                        };
                        readonly type: "string";
                        readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                        readonly format: "date";
                        readonly examples: readonly ["2059-12-31"];
                    };
                    readonly amount: {
                        readonly type: "string";
                        readonly description: "Subscription amount in two decimals, eg. 2400.00";
                        readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                        readonly examples: readonly ["200.28"];
                    };
                    readonly currency: {
                        readonly type: "string";
                        readonly description: "ISO currency code for the amount, with a value 356 for INR";
                        readonly examples: readonly ["356"];
                    };
                    readonly frequency: {
                        readonly type: "string";
                        readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n\n•\tweek - weekly\n•\tmnth - monthly\n•\tbimn – bi-monthly\n•\tqurt - quarterly\n•\tbian – bi-annually\n•\tyear - yearly\n•\tadho – adhoc\n\n";
                        readonly enum: readonly ["mnth", "week", "bimn", "qurt", "bian", "year", "adho"];
                        readonly examples: readonly ["adho"];
                    };
                    readonly amount_type: {
                        readonly title: "amount_type";
                        readonly "x-stoplight": {
                            readonly id: "o7dqaslkupvxa";
                        };
                        readonly type: "string";
                        readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n";
                        readonly enum: readonly ["maximum", "fixed"];
                    };
                    readonly recurrence_rule: {
                        readonly title: "recurrence_rule";
                        readonly "x-stoplight": {
                            readonly id: "mzu48wk4tb3i8";
                        };
                        readonly type: "string";
                        readonly description: "Note: Required only where payment_method_type = upi. Default value : 'after'\n";
                        readonly enum: readonly ["after"];
                    };
                    readonly debit_day: {
                        readonly title: "debit_day";
                        readonly "x-stoplight": {
                            readonly id: "ppp2ede7qx3fc";
                        };
                        readonly type: "string";
                        readonly description: "Required only where payment_method_type = upi. Default value \"1\" to be passed\n";
                        readonly pattern: "^\\\\d{1,2}$";
                        readonly enum: readonly ["1"];
                        readonly examples: readonly ["1"];
                    };
                };
                readonly required: readonly ["mercid", "customer_refid", "subscription_refid", "subscription_desc", "start_date", "end_date", "amount", "currency", "frequency", "amount_type"];
            };
            readonly additional_info: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly additional_info: {
                            readonly additional_info1: "Details1";
                            readonly additional_info2: "Details2";
                            readonly additional_info3: "Details3";
                            readonly additional_info4: "Details4";
                            readonly additional_info5: "Details5";
                            readonly additional_info6: "Details6";
                            readonly additional_info7: "Details7";
                            readonly additional_info8: "Details8";
                            readonly additional_info9: "Details9";
                            readonly additional_info10: "Details10";
                        };
                    };
                };
                readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                readonly properties: {
                    readonly additional_info1: {
                        readonly type: "string";
                        readonly examples: readonly ["Details1"];
                    };
                    readonly additional_info2: {
                        readonly type: "string";
                        readonly examples: readonly ["Details2"];
                    };
                    readonly additional_info3: {
                        readonly type: "string";
                        readonly examples: readonly ["Details3"];
                    };
                    readonly additional_info4: {
                        readonly type: "string";
                        readonly examples: readonly ["Details4"];
                    };
                    readonly additional_info5: {
                        readonly type: "string";
                        readonly examples: readonly ["Details5"];
                    };
                    readonly additional_info6: {
                        readonly type: "string";
                        readonly examples: readonly ["Details6"];
                    };
                    readonly additional_info7: {
                        readonly type: "string";
                        readonly examples: readonly ["Details7"];
                    };
                };
            };
        };
        readonly required: readonly ["mercid", "amount", "orderid", "currency", "bankid", "itemcode", "authentication_type", "3ds_parameter", "ru", "payment_method_type", "txn_process_type", "device", "card"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Accept", "Content-Type"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly links: readonly [{
                        readonly href: "https://www.issuerurl.com/page";
                        readonly rel: "redirect";
                        readonly method: "post";
                        readonly parameters: {
                            readonly valid_till: "2023-02-16T11:43:28+05:30";
                            readonly creq: "5a7e8901aa256b4f5012355dc4b12f7bb474be6d7f09232639220163cfb1eb7e36ac8594c92379254.70675f706172616d5f656e6333";
                        };
                    }];
                    readonly itemcode: "DIRECT";
                    readonly objectid: "authentication";
                    readonly authenticationid: "X4560643061923";
                    readonly authentication_date: "2023-02-15T11:43:28+05:30";
                    readonly amount: "2.00";
                    readonly currency: "356";
                    readonly mercid: "BDMERCID";
                    readonly bankid: "456";
                    readonly payment_method_type: "card";
                    readonly authentication_type: "3ds2";
                    readonly authentication_status: "pending";
                    readonly orderid: "TEST0000009005";
                    readonly next_step: "3ds2_challenge";
                    readonly authentication_error_code: "AUP0000";
                    readonly authentication_error_type: "pending";
                    readonly authentication_error_desc: "Authentication Pending";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "Details3";
                        readonly additional_info4: "Details4";
                        readonly additional_info5: "Details5";
                        readonly additional_info6: "Details6";
                        readonly additional_info7: "Details7";
                        readonly additional_info8: "Details8";
                        readonly additional_info9: "Details9";
                        readonly additional_info10: "Details10";
                    };
                    readonly card: {
                        readonly masked_value: "xxxxxxxxxxxx1234";
                        readonly type: "CREDIT";
                        readonly card_end: "1234";
                        readonly network: "MASTER";
                        readonly issuer: "HDFC Bank";
                    };
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly authenticationid: {
                    readonly title: "authenticationid";
                    readonly "x-stoplight": {
                        readonly id: "c1hskskz8e2iq";
                    };
                    readonly type: "string";
                    readonly description: "Unique authenticationid created by BillDesk";
                    readonly pattern: "^[a-zA-Z0-9]{14,35}$";
                    readonly examples: readonly ["A1HM0000389872"];
                };
                readonly links: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "7t5udyb6ilh37";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly links: readonly [{
                                readonly href: "https://wwww.issuerurl.com/somepage";
                                readonly rel: "redirect";
                                readonly method: "post";
                                readonly parameters: {
                                    readonly creq: "eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZWVEU1NlcnZlclRyYW5zSUQiOiIzYjFlYmQ5NC04NTZhLTRlYjEtYTJlMS00MWZkNTdjZGFkZjAiLCJhY3NUcmFuc0lEIjoiOGMzMzk3NTItMjNmMS00NmZlLThmNzEtMzAwZjAyMzY0NjcxIiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjA1In0=";
                                };
                            }];
                        };
                    };
                    readonly description: "Associated links with the object, and contains the issuer URL that will be provided in the redirect authentication workflow";
                    readonly title: "links";
                    readonly properties: {
                        readonly links: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly type: "string";
                                        readonly description: "Issuer response URL";
                                    };
                                    readonly rel: {
                                        readonly type: "string";
                                        readonly description: "Fixed value as redirect";
                                    };
                                    readonly method: {
                                        readonly type: "string";
                                        readonly enum: readonly ["POST"];
                                        readonly description: "`POST`";
                                    };
                                    readonly parameters: {
                                        readonly description: "Parameters that are used to redirect the customer to the issuer URL";
                                        readonly type: "object";
                                        readonly "x-examples": {
                                            readonly "Example 1": {
                                                readonly tranid: "973712065583009734440001099962";
                                                readonly AccuCardholderId: "90926094409";
                                                readonly AccuReturnURL: "https://www.merchanturl.com/response.jsp";
                                                readonly session: "U4440001099962";
                                                readonly AccuGuid: "15e66a3b-956e-42f8-84d4-859e3e8c9fed";
                                                readonly TermUrl: "https://www.merchanturl.com/response.jsp";
                                                readonly AccuRequestId: "YjIxM2ZiZGUyMGY2MmNjZWE5YWQ1NGE5OGNiZDUyZjkyYThlMDFiYjFkMTY1Yjc0ZTI4NTgxNDA1MGRiNzE0Ng==";
                                                readonly cardend: "4938";
                                            };
                                        };
                                        readonly title: "parameters";
                                        readonly properties: {
                                            readonly creq: {
                                                readonly type: "string";
                                                readonly description: "Challenge request message or payment message for 3ds2.0 protocol authentication";
                                            };
                                            readonly bdcreq: {
                                                readonly type: "string";
                                                readonly description: "Challenge request message or payment message for \n3ds2.0 protocol authentication (Threeds method url flow)";
                                            };
                                            readonly tranid: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuCardholderId: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuReturnURL: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly session: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuGuid: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly TermUrl: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuRequestId: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly cardend: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                readonly authentication_date: {
                    readonly title: "authentication_date";
                    readonly "x-stoplight": {
                        readonly id: "uz8duh7gras5w";
                    };
                    readonly type: "string";
                    readonly description: "Authentication date and time in YYYY-MM-DDThh:mm:ssTZD format";
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly bankid: {
                    readonly title: "bankid";
                    readonly "x-stoplight": {
                        readonly id: "gf7ntync4cj73";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly examples: readonly ["1HM"];
                };
                readonly payment_method_type: {
                    readonly title: "payment_method_type";
                    readonly "x-stoplight": {
                        readonly id: "kklghqguq1r3q";
                    };
                    readonly type: "string";
                    readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.\n\n`card` `netbanking` `upi` `eft` `cardless` `bankaccount`";
                    readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                };
                readonly authentication_type: {
                    readonly title: "authentication_type";
                    readonly "x-stoplight": {
                        readonly id: "c33ke2q5rl7ql";
                    };
                    readonly type: "string";
                    readonly description: "Represents the type of authentication initiated in the request, will be fixed value - 3ds2\n\n`3ds2`";
                    readonly enum: readonly ["3ds2"];
                    readonly examples: readonly ["3ds2"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly next_step: {
                    readonly title: "next_step";
                    readonly "x-stoplight": {
                        readonly id: "ayox9qr52qx6o";
                    };
                    readonly type: "string";
                    readonly description: "Refers to the action to be taken by the merchant, for eg. redirect or capture_otp\n\n`redirect` `capture_otp` `3ds2_challenge` `3ds2_frictionless`";
                    readonly enum: readonly ["redirect", "capture_otp", "3ds2_challenge", "3ds2_frictionless"];
                };
                readonly authentication_status: {
                    readonly title: "authentication_status";
                    readonly "x-stoplight": {
                        readonly id: "h2j1d7gkgfr54";
                    };
                    readonly type: "string";
                    readonly description: "Represents the status of the request – with possible values as \n•\tpending\n•\tsuccess\n•\tfailure\n\n`pending` `success` `failure`";
                    readonly enum: readonly ["pending", "success", "failure"];
                };
                readonly authentication_error_code: {
                    readonly title: "error_code";
                    readonly "x-stoplight": {
                        readonly id: "2grhtze0qf6ob";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error code for the response";
                };
                readonly authentication_error_type: {
                    readonly title: "error_type";
                    readonly "x-stoplight": {
                        readonly id: "snpogojwqc0aq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error type for the response";
                };
                readonly authentication_error_desc: {
                    readonly title: "error_desc";
                    readonly "x-stoplight": {
                        readonly id: "uyor3loffwtew";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error description for the response";
                };
                readonly card: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "n1nmwdiqy5hrc";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly type: "DEBIT";
                                readonly card_end: "1234";
                                readonly network: "VISA";
                                readonly issuer: "ABC Bank";
                            };
                        };
                    };
                    readonly properties: {
                        readonly type: {
                            readonly title: "card_type";
                            readonly "x-stoplight": {
                                readonly id: "r4tyk0ee6k6u5";
                            };
                            readonly type: "string";
                            readonly description: "Card product type, takes the following values - debit, credit or prepaid";
                            readonly examples: readonly ["debit, credit, prepaid"];
                        };
                        readonly masked_value: {
                            readonly title: "masked_value";
                            readonly "x-stoplight": {
                                readonly id: "r3wddilt5cyy4";
                            };
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \nNote: For an EMI transaction via network token, this attribute value is required for loan booking";
                            readonly examples: readonly ["xxxxxxxxxxxx1001"];
                        };
                        readonly network: {
                            readonly title: "card_network";
                            readonly "x-stoplight": {
                                readonly id: "fmhnjhdrk4ngb";
                            };
                            readonly type: "string";
                            readonly description: "Card network, for eg. visa";
                            readonly examples: readonly ["VISA, MASTER"];
                        };
                        readonly issuer: {
                            readonly title: "card_issuer";
                            readonly "x-stoplight": {
                                readonly id: "tm5adiwnqv7q0";
                            };
                            readonly type: "string";
                            readonly description: "Card issuer";
                        };
                    };
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
                readonly threeds_transaction_id: {
                    readonly title: "threeds_transaction_id";
                    readonly "x-stoplight": {
                        readonly id: "c54txyf8e8aqp";
                    };
                    readonly type: "string";
                    readonly description: "Threeds server transaction id";
                    readonly format: "uuid";
                    readonly examples: readonly ["4184a9f8-b0f3-47d2-91ec-bc9939080e32"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateMandateToken: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMONITOR";
                readonly customer_refid: "cust980823jkdyr9d912";
                readonly subscription_refid: "Sub98nmf0uh9f912";
                readonly subscription_desc: "9800000d1112";
                readonly currency: "356";
                readonly frequency: "year";
                readonly amount_type: "max";
                readonly amount: "2.00";
                readonly start_date: "2023-12-29";
                readonly end_date: "2029-12-04";
                readonly recurrence_rule: "after";
                readonly debit_day: "6";
                readonly customer: {
                    readonly first_name: "John";
                    readonly last_name: "Doe";
                    readonly mobile: "9800000000";
                    readonly mobile_alt: "9800000000";
                    readonly email: "john.doe@somedomain.com";
                    readonly email_alt: "john.doe@somedomain.com";
                };
                readonly additional_info: {
                    readonly additional_info1: "Details1";
                    readonly additional_info2: "Details2";
                    readonly additional_info3: "123456789";
                };
                readonly device: {
                    readonly init_channel: "internet";
                    readonly ip: "192.168.1.1";
                    readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                    readonly accept_header: "text/html";
                    readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                    readonly browser_tz: "-330";
                    readonly browser_color_depth: "32";
                    readonly browser_java_enabled: "false";
                    readonly browser_screen_height: "601";
                    readonly browser_screen_width: "657";
                    readonly browser_language: "en-US";
                    readonly browser_javascript_enabled: "true";
                };
                readonly ru: "https://www.billdesk.com/web/";
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly customer_refid: {
                readonly title: "customer_refid";
                readonly "x-stoplight": {
                    readonly id: "mpmq18zbl4x12";
                };
                readonly type: "string";
                readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer\nRequired for mandate and tokenization";
                readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                readonly examples: readonly ["CSREF00001"];
            };
            readonly subscription_refid: {
                readonly title: "subscription_refid";
                readonly "x-stoplight": {
                    readonly id: "0c9vc4zqx4a8c";
                };
                readonly type: "string";
                readonly description: "Unique reference assigned by merchant for a subscription";
                readonly examples: readonly ["SUBREF101"];
            };
            readonly subscription_desc: {
                readonly title: "subscription_desc";
                readonly "x-stoplight": {
                    readonly id: "lwkkeas7tgojy";
                };
                readonly type: "string";
                readonly description: "Customer friendly description for the subscription, this narration is generally displayed to the customer at the issuer channel";
                readonly examples: readonly ["Unlimited Plan"];
            };
            readonly currency: {
                readonly title: "currency";
                readonly "x-stoplight": {
                    readonly id: "1ehjh4f7vidz7";
                };
                readonly type: "string";
                readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                readonly examples: readonly ["356"];
            };
            readonly frequency: {
                readonly title: "frequency";
                readonly "x-stoplight": {
                    readonly id: "xrmygt1ddb1b6";
                };
                readonly type: "string";
                readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n•week - weekly \n•mnth - monthly\n•bimn – bi-monthly\n•qurt - quarterly\n•bian – bi-annually\n•year - yearly\n•adho – adhoc\n";
                readonly enum: readonly ["week", "mnth", "bimn", "qurt", "bian", "year", "adho"];
                readonly examples: readonly ["year"];
            };
            readonly amount_type: {
                readonly title: "amount_type";
                readonly "x-stoplight": {
                    readonly id: "o7dqaslkupvxa";
                };
                readonly type: "string";
                readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n";
                readonly enum: readonly ["maximum", "fixed"];
                readonly examples: readonly ["max"];
            };
            readonly amount: {
                readonly title: "amount";
                readonly "x-stoplight": {
                    readonly id: "s5xd8bwxp2orm";
                };
                readonly type: "string";
                readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                readonly description: "Transaction amount in two decimals, eg. 299.28";
                readonly examples: readonly ["299.28"];
            };
            readonly start_date: {
                readonly title: "start_date";
                readonly "x-stoplight": {
                    readonly id: "v7tyy2tfnut1w";
                };
                readonly type: "string";
                readonly description: "Subscription start date in yyyy-mm-dd format\nNote: Should be greater than or equal to current date (IST timezone). \nNote for UPI : Should be equal to mandate creation date for UPI. In UPI, an subsequent charge is created on a successful mandate. This includes the first charge as well along with mandate creation. Since first charge is done immediately, it is important that the mandate “start_date” should be today’s date \n";
                readonly format: "date";
                readonly examples: readonly ["2021-05-08"];
            };
            readonly end_date: {
                readonly title: "end_date";
                readonly "x-stoplight": {
                    readonly id: "uz968g6golwjt";
                };
                readonly type: "string";
                readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                readonly format: "date";
                readonly examples: readonly ["2059-12-31"];
            };
            readonly recurrence_rule: {
                readonly title: "recurrence_rule";
                readonly "x-stoplight": {
                    readonly id: "mzu48wk4tb3i8";
                };
                readonly type: "string";
                readonly description: "Note: Required only where payment_method_type = upi. Default value : 'after'\n";
                readonly enum: readonly ["after"];
                readonly examples: readonly ["after"];
            };
            readonly debit_day: {
                readonly title: "debit_day";
                readonly "x-stoplight": {
                    readonly id: "ppp2ede7qx3fc";
                };
                readonly type: "string";
                readonly description: "Required only where payment_method_type = upi. Default value \"1\" to be passed\n";
                readonly pattern: "^\\\\d{1,2}$";
                readonly enum: readonly ["1"];
                readonly examples: readonly ["1"];
            };
            readonly customer: {
                readonly title: "customer";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly first_name: "John";
                        readonly last_name: "Doe";
                        readonly mobile: "9800000000";
                        readonly mobile_alt: "9800000000";
                        readonly email: "john.doe@somedomain.com";
                        readonly email_alt: "john.doe@somedomain.com";
                    };
                };
                readonly type: "object";
                readonly properties: {
                    readonly first_name: {
                        readonly type: "string";
                        readonly description: "Customer’s First Name";
                        readonly examples: readonly ["John"];
                    };
                    readonly last_name: {
                        readonly type: "string";
                        readonly description: "Customer’s Last Name";
                        readonly examples: readonly ["Doe"];
                    };
                    readonly mobile: {
                        readonly type: "string";
                        readonly description: "Customer’s Mobile number";
                        readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                        readonly examples: readonly ["9022979988"];
                    };
                    readonly mobile_alt: {
                        readonly type: "string";
                        readonly description: "Customer’s Alternate Mobile number";
                        readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                        readonly examples: readonly ["9022979982"];
                    };
                    readonly email: {
                        readonly type: "string";
                        readonly description: "Customer’s Email address";
                        readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                        readonly examples: readonly ["abc@xyz.com"];
                    };
                    readonly email_alt: {
                        readonly type: "string";
                        readonly description: "Customer’s alternate Email Address";
                        readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                        readonly examples: readonly ["abc@xyz.com"];
                    };
                };
                readonly required: readonly ["first_name", "last_name"];
            };
            readonly ru: {
                readonly title: "return URL";
                readonly "x-stoplight": {
                    readonly id: "2nnmkccdq26ck";
                };
                readonly type: "string";
                readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                readonly examples: readonly ["https://www.merchant.com"];
            };
            readonly device: {
                readonly type: "object";
                readonly "x-stoplight": {
                    readonly id: "bu2ij616i2uce";
                };
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly device: {
                            readonly init_channel: "internet";
                            readonly ip: "124.124.1.1";
                            readonly mac: "11-AC-58-21-1B-AA";
                            readonly imei: "990000112233445";
                            readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                            readonly accept_header: "text/html";
                            readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                            readonly browser_tz: "-330";
                            readonly browser_color_depth: "32";
                            readonly browser_java_enabled: "false";
                            readonly browser_screen_height: "601";
                            readonly browser_screen_width: "657";
                            readonly browser_language: "en-US";
                            readonly browser_javascript_enabled: "true";
                        };
                    };
                };
                readonly title: "Device";
                readonly description: "Device";
                readonly properties: {
                    readonly init_channel: {
                        readonly type: "string";
                        readonly description: "Initiating channel,accepted values are internet,app or kiosk";
                        readonly enum: readonly ["internet", "app", "kiosk"];
                        readonly examples: readonly ["internet"];
                    };
                    readonly ip: {
                        readonly type: "string";
                        readonly description: "Actual end customer IP address is required to be passed";
                        readonly maxLength: 15;
                        readonly examples: readonly ["192.168.1.1"];
                    };
                    readonly user_agent: {
                        readonly type: "string";
                        readonly description: "Exact content of the HTTP user-agent header\n\nNote: If the total length of the User-Agent sent by the browser exceeds 2048 characters, truncate the excess portion";
                        readonly pattern: "=^[A-Za-z0-9\\\\_\\\\:\\\\-\\\\,\\\\;\\\\/\\\\)\\\\(\\\\.\\\\s\\\\+\\\\[\\\\]\\\\=@]{10,255}$";
                        readonly examples: readonly ["Mozilla/5.0(WindowsNT10.0;WOW64;rv: 51.0)Gecko/20100101Firefox/51.0"];
                    };
                    readonly accept_header: {
                        readonly type: "string";
                        readonly description: "Customer browser accept header values";
                        readonly maxLength: 255;
                        readonly pattern: "^[0-9A-Za-z\\\\.\\\\+\\\\-\\\\/\\\\=\\\\*\\\\,\\\\;]{10,255}$";
                        readonly examples: readonly ["application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"];
                    };
                };
                readonly required: readonly ["init_channel", "ip", "user_agent", "accept_header"];
            };
            readonly additional_info: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly additional_info: {
                            readonly additional_info1: "Details1";
                            readonly additional_info2: "Details2";
                            readonly additional_info3: "Details3";
                            readonly additional_info4: "Details4";
                            readonly additional_info5: "Details5";
                            readonly additional_info6: "Details6";
                            readonly additional_info7: "Details7";
                            readonly additional_info8: "Details8";
                            readonly additional_info9: "Details9";
                            readonly additional_info10: "Details10";
                        };
                    };
                };
                readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                readonly properties: {
                    readonly additional_info1: {
                        readonly type: "string";
                        readonly examples: readonly ["Details1"];
                    };
                    readonly additional_info2: {
                        readonly type: "string";
                        readonly examples: readonly ["Details2"];
                    };
                    readonly additional_info3: {
                        readonly type: "string";
                        readonly examples: readonly ["Details3"];
                    };
                    readonly additional_info4: {
                        readonly type: "string";
                        readonly examples: readonly ["Details4"];
                    };
                    readonly additional_info5: {
                        readonly type: "string";
                        readonly examples: readonly ["Details5"];
                    };
                    readonly additional_info6: {
                        readonly type: "string";
                        readonly examples: readonly ["Details6"];
                    };
                    readonly additional_info7: {
                        readonly type: "string";
                        readonly examples: readonly ["Details7"];
                    };
                };
            };
        };
        readonly required: readonly ["mercid", "customer_refid", "subscription_refid", "subscription_desc", "currency", "frequency", "amount_type", "amount", "start_date", "end_date", "customer", "ru", "device"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "mandate_token";
                    readonly mandate_tokenid: "NA12BF00383201";
                    readonly mercid: "BDMONITOR";
                    readonly customer_refid: "cust980823jkdyr9d912";
                    readonly subscription_refid: "Sub98nmf0uh9f912";
                    readonly subscription_desc: "9800000d1112";
                    readonly start_date: "2023-12-29";
                    readonly end_date: "2029-12-04";
                    readonly amount: "2.00";
                    readonly amount_type: "max";
                    readonly currency: "356";
                    readonly frequency: "year";
                    readonly createdon: "2023-11-21T15:50:31+05:30";
                    readonly ru: "https://www.billdesk.com/web/";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "123456789";
                    };
                    readonly customer: {
                        readonly first_name: "John";
                        readonly last_name: "Doe";
                        readonly email: "john.doe@somedomain.com";
                        readonly email_alt: "john.doe@somedomain.com";
                        readonly mobile: "9800000000";
                        readonly mobile_alt: "9800000000";
                    };
                    readonly device: {
                        readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                        readonly init_channel: "internet";
                        readonly ip: "192.168.1.1";
                        readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                        readonly accept_header: "text/html";
                        readonly browser_javascript_enabled: "true";
                        readonly browser_java_enabled: "false";
                        readonly browser_language: "en-US";
                        readonly browser_color_depth: "32";
                        readonly browser_screen_height: "601";
                        readonly browser_screen_width: "657";
                        readonly browser_tz: "-330";
                    };
                    readonly status: "initiated";
                    readonly recurrence_rule: "after";
                    readonly debit_day: "6";
                    readonly next_step: "redirect";
                    readonly links: readonly [{
                        readonly href: "https://pguat.billdesk.io/pgsi/v1_2/mandates/token/initiate";
                        readonly rel: "self";
                        readonly method: "POST";
                        readonly parameters: any;
                        readonly valid_date: any;
                        readonly headers: any;
                    }, {
                        readonly href: "https://billdesk.techbulls.com/sdk/";
                        readonly rel: "redirect";
                        readonly method: "POST";
                        readonly parameters: {
                            readonly mercid: "BDMONITOR";
                            readonly mandate_tokenid: "NA12BF00383201";
                        };
                        readonly valid_date: "2023-11-21T16:20:31+05:30";
                        readonly headers: {
                            readonly authorization: "OToken 6E8DAD70FD30FCC30377B6AEECE1FFCF25C939D0F60AAC55ED7B35B3995DCE2EE3A042486E1C1C729F501700D9504634075EA302E08304D8ADFED115BD91AF2E205AAFF9AC7EBB1722C91CF7C6AA671AE0E564B631B2770EFB7389089C7888722A19FD302B8D288BD3A8F6739DB0D77720CCB52E3867A1B455D26B94AA1E57AE07DCA932F0FA6F0772DB56016A5FDDE5CFBF3C8E4113B4AFFF.4145535F55415431";
                        };
                    }];
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly mandate_tokenid: {
                    readonly title: "mandate_tokenid";
                    readonly "x-stoplight": {
                        readonly id: "169b004872de3";
                    };
                    readonly type: "string";
                    readonly description: "Unique value generated by BillDesk for each mandate_token created by the merchant";
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly customer_refid: {
                    readonly title: "customer_refid";
                    readonly "x-stoplight": {
                        readonly id: "mpmq18zbl4x12";
                    };
                    readonly type: "string";
                    readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer\nRequired for mandate and tokenization";
                    readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                    readonly examples: readonly ["CSREF00001"];
                };
                readonly subscription_refid: {
                    readonly title: "subscription_refid";
                    readonly "x-stoplight": {
                        readonly id: "0c9vc4zqx4a8c";
                    };
                    readonly type: "string";
                    readonly description: "Unique reference assigned by merchant for a subscription";
                    readonly examples: readonly ["SUBREF101"];
                };
                readonly subscription_desc: {
                    readonly title: "subscription_desc";
                    readonly "x-stoplight": {
                        readonly id: "lwkkeas7tgojy";
                    };
                    readonly type: "string";
                    readonly description: "Customer friendly description for the subscription, this narration is generally displayed to the customer at the issuer channel";
                    readonly examples: readonly ["Unlimited Plan"];
                };
                readonly start_date: {
                    readonly title: "start_date";
                    readonly "x-stoplight": {
                        readonly id: "v7tyy2tfnut1w";
                    };
                    readonly type: "string";
                    readonly description: "Subscription start date in yyyy-mm-dd format\nNote: Should be greater than or equal to current date (IST timezone). \nNote for UPI : Should be equal to mandate creation date for UPI. In UPI, an subsequent charge is created on a successful mandate. This includes the first charge as well along with mandate creation. Since first charge is done immediately, it is important that the mandate “start_date” should be today’s date \n";
                    readonly format: "date";
                    readonly examples: readonly ["2021-05-08"];
                };
                readonly end_date: {
                    readonly title: "end_date";
                    readonly "x-stoplight": {
                        readonly id: "uz968g6golwjt";
                    };
                    readonly type: "string";
                    readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                    readonly format: "date";
                    readonly examples: readonly ["2059-12-31"];
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly amount_type: {
                    readonly title: "amount_type";
                    readonly "x-stoplight": {
                        readonly id: "o7dqaslkupvxa";
                    };
                    readonly type: "string";
                    readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n\n\n`maximum` `fixed`";
                    readonly enum: readonly ["maximum", "fixed"];
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly frequency: {
                    readonly title: "frequency";
                    readonly "x-stoplight": {
                        readonly id: "xrmygt1ddb1b6";
                    };
                    readonly type: "string";
                    readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n•week - weekly \n•mnth - monthly\n•bimn – bi-monthly\n•qurt - quarterly\n•bian – bi-annually\n•year - yearly\n•adho – adhoc\n\n\n`week` `mnth` `bimn` `qurt` `bian` `year` `adho`";
                    readonly enum: readonly ["week", "mnth", "bimn", "qurt", "bian", "year", "adho"];
                };
                readonly createdon: {
                    readonly title: "createdon";
                    readonly "x-stoplight": {
                        readonly id: "k3ewegvbimz0g";
                    };
                    readonly type: "string";
                    readonly description: "object creation timestamp";
                    readonly format: "date-time";
                };
                readonly ru: {
                    readonly title: "return URL";
                    readonly "x-stoplight": {
                        readonly id: "2nnmkccdq26ck";
                    };
                    readonly type: "string";
                    readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                    readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                    readonly examples: readonly ["https://www.merchant.com"];
                };
                readonly customer: {
                    readonly title: "customer";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly first_name: "John";
                            readonly last_name: "Doe";
                            readonly mobile: "9800000000";
                            readonly mobile_alt: "9800000000";
                            readonly email: "john.doe@somedomain.com";
                            readonly email_alt: "john.doe@somedomain.com";
                        };
                    };
                    readonly type: "object";
                    readonly properties: {
                        readonly first_name: {
                            readonly type: "string";
                            readonly description: "Customer’s First Name";
                            readonly examples: readonly ["John"];
                        };
                        readonly last_name: {
                            readonly type: "string";
                            readonly description: "Customer’s Last Name";
                            readonly examples: readonly ["Doe"];
                        };
                        readonly mobile: {
                            readonly type: "string";
                            readonly description: "Customer’s Mobile number";
                            readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                            readonly examples: readonly ["9022979988"];
                        };
                        readonly mobile_alt: {
                            readonly type: "string";
                            readonly description: "Customer’s Alternate Mobile number";
                            readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                            readonly examples: readonly ["9022979982"];
                        };
                        readonly email: {
                            readonly type: "string";
                            readonly description: "Customer’s Email address";
                            readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                            readonly examples: readonly ["abc@xyz.com"];
                        };
                        readonly email_alt: {
                            readonly type: "string";
                            readonly description: "Customer’s alternate Email Address";
                            readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                            readonly examples: readonly ["abc@xyz.com"];
                        };
                    };
                    readonly required: readonly ["first_name", "last_name"];
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
                readonly status: {
                    readonly title: "auth_status";
                    readonly "x-stoplight": {
                        readonly id: "35i21snltcrdq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the authorization status of the transaction with the following possible values:\n•\t0300 - transaction is successful\n•\t0002 - transaction is pending for authorization\n•\t0399 - transaction failed\n\n`0300` `0002` `0399`";
                    readonly enum: readonly ["0300", "0002", "0399"];
                };
                readonly recurrence_rule: {
                    readonly title: "recurrence_rule";
                    readonly "x-stoplight": {
                        readonly id: "mzu48wk4tb3i8";
                    };
                    readonly type: "string";
                    readonly description: "Note: Required only where payment_method_type = upi. Default value : 'after'\n\n\n`after`";
                    readonly enum: readonly ["after"];
                };
                readonly debit_day: {
                    readonly title: "debit_day";
                    readonly "x-stoplight": {
                        readonly id: "ppp2ede7qx3fc";
                    };
                    readonly type: "string";
                    readonly description: "Required only where payment_method_type = upi. Default value \"1\" to be passed\n\n\n`1`";
                    readonly pattern: "^\\\\d{1,2}$";
                    readonly enum: readonly ["1"];
                    readonly examples: readonly ["1"];
                };
                readonly next_step: {
                    readonly title: "next_step";
                    readonly "x-stoplight": {
                        readonly id: "ayox9qr52qx6o";
                    };
                    readonly type: "string";
                    readonly description: "Refers to the action to be taken by the merchant, for eg. redirect or capture_otp\n\n`redirect` `capture_otp` `3ds2_challenge` `3ds2_frictionless`";
                    readonly enum: readonly ["redirect", "capture_otp", "3ds2_challenge", "3ds2_frictionless"];
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly method: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly headers: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly authorization: {
                                        readonly title: "authorization";
                                        readonly "x-stoplight": {
                                            readonly id: "7j04iqr3yp3z3";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique value generated by BillDesk for each request";
                                    };
                                };
                            };
                            readonly valid_date: {
                                readonly type: "string";
                            };
                            readonly parameters: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly mercid: {
                                        readonly title: "mercid";
                                        readonly "x-stoplight": {
                                            readonly id: "43ns25lu1fyuc";
                                        };
                                        readonly type: "string";
                                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                                        readonly description: "Unique identifier as defined by BillDesk for each merchant";
                                        readonly examples: readonly ["BDMERCID"];
                                    };
                                    readonly bdorderid: {
                                        readonly title: "bdorderid";
                                        readonly "x-stoplight": {
                                            readonly id: "m13q2fo7bn801";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique value generated by BillDesk for each order id generated using Create Order API";
                                    };
                                    readonly rdata: {
                                        readonly title: "rdata";
                                        readonly "x-stoplight": {
                                            readonly id: "lftrd03d82vvp";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique key generated by BillDesk for each request";
                                        readonly "x-examples": {};
                                    };
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateOrder: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly orderid: {
                readonly title: "orderid";
                readonly "x-stoplight": {
                    readonly id: "lmwrwf7xn6wq8";
                };
                readonly type: "string";
                readonly description: "Unique ID generated by the merchant for each request";
                readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                readonly examples: readonly ["TEST0000009005"];
            };
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly order_date: {
                readonly type: "string";
                readonly description: "Merchant order generation date and time in YYYY-MM-DDThh:mm:ssTZD format";
                readonly format: "date-time";
                readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
            };
            readonly amount: {
                readonly title: "amount";
                readonly "x-stoplight": {
                    readonly id: "s5xd8bwxp2orm";
                };
                readonly type: "string";
                readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                readonly description: "Transaction amount in two decimals, eg. 299.28";
                readonly examples: readonly ["299.28"];
            };
            readonly currency: {
                readonly title: "currency";
                readonly "x-stoplight": {
                    readonly id: "1ehjh4f7vidz7";
                };
                readonly type: "string";
                readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                readonly examples: readonly ["356"];
            };
            readonly ru: {
                readonly title: "return URL";
                readonly "x-stoplight": {
                    readonly id: "2nnmkccdq26ck";
                };
                readonly type: "string";
                readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                readonly examples: readonly ["https://www.merchant.com"];
            };
            readonly itemcode: {
                readonly title: "item code";
                readonly "x-stoplight": {
                    readonly id: "tz16mo44yvoae";
                };
                readonly type: "string";
                readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                readonly pattern: "^[A-Za-z0-9]{1,20}$";
                readonly examples: readonly ["DIRECT"];
            };
            readonly settlement_lob: {
                readonly type: "string";
                readonly description: "Settlement line of business preconfigured by BillDesk for funds settlement to merchant account";
            };
            readonly mandate_required: {
                readonly type: "string";
                readonly enum: readonly ["Y", "N"];
                readonly description: "Value which represents if the customer is to be givrn the option to not set a mandate on the BillDesk Hosted Payment Page or Web SDK. Applicable for the One time payment & Mandate workflow \n\nY- Represents that setting the Mandate is mandatory and the customer does not have an option to turn off the mandate\n\nN- Represents that setting the Mandate is optional and the customer has an option to turn off the mandate. In this case, a one time payment will be made without the mandate";
            };
            readonly customer: {
                readonly title: "customer";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly first_name: "John";
                        readonly last_name: "Doe";
                        readonly mobile: "9800000000";
                        readonly mobile_alt: "9800000000";
                        readonly email: "john.doe@somedomain.com";
                        readonly email_alt: "john.doe@somedomain.com";
                    };
                };
                readonly type: "object";
                readonly properties: {
                    readonly first_name: {
                        readonly type: "string";
                        readonly description: "Customer’s First Name";
                        readonly examples: readonly ["John"];
                    };
                    readonly last_name: {
                        readonly type: "string";
                        readonly description: "Customer’s Last Name";
                        readonly examples: readonly ["Doe"];
                    };
                    readonly mobile: {
                        readonly type: "string";
                        readonly description: "Customer’s Mobile number";
                        readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                        readonly examples: readonly ["9022979988"];
                    };
                    readonly mobile_alt: {
                        readonly type: "string";
                        readonly description: "Customer’s Alternate Mobile number";
                        readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                        readonly examples: readonly ["9022979982"];
                    };
                    readonly email: {
                        readonly type: "string";
                        readonly description: "Customer’s Email address";
                        readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                        readonly examples: readonly ["abc@xyz.com"];
                    };
                    readonly email_alt: {
                        readonly type: "string";
                        readonly description: "Customer’s alternate Email Address";
                        readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                        readonly examples: readonly ["abc@xyz.com"];
                    };
                };
                readonly required: readonly ["first_name", "last_name"];
            };
            readonly avs: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly bankaccount: readonly [{
                            readonly number: "12233445566";
                            readonly ifsc: "IDBK10000002";
                            readonly name: "John Doe";
                        }, {
                            readonly number: "12233445567";
                            readonly ifsc: "IDBK10000002";
                            readonly name: "John Doe";
                        }];
                    };
                };
                readonly description: "This API can be used to verify the bank account number by initiating a penny drop to the account. For upi, validation is done at acquiring bank end ";
                readonly title: "Account validation";
                readonly properties: {
                    readonly bankaccounts: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly number: {
                                    readonly description: "Customer's bank account number";
                                    readonly title: "bankacc_number";
                                    readonly "x-stoplight": {
                                        readonly id: "9nwo0pwlz0qos";
                                    };
                                    readonly type: "string";
                                    readonly pattern: "^\\\\d{9,18}$";
                                    readonly examples: readonly ["12233445566"];
                                };
                                readonly ifsc: {
                                    readonly description: "IFSC of the bank account number";
                                    readonly title: "IFSC";
                                    readonly "x-stoplight": {
                                        readonly id: "grn65kr3i0pk0";
                                    };
                                    readonly type: "string";
                                    readonly pattern: "^[A-Za-z]{4}[a-zA-Z0-9]{7}$";
                                    readonly examples: readonly ["IDBK10000002"];
                                };
                                readonly name: {
                                    readonly description: "Name of the bank account holder";
                                    readonly title: "bankaccount_holder_name";
                                    readonly "x-stoplight": {
                                        readonly id: "jedjceugzit8g";
                                    };
                                    readonly type: "string";
                                    readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                                    readonly examples: readonly ["John Doe"];
                                };
                            };
                            readonly required: readonly ["number", "ifsc"];
                        };
                    };
                };
            };
            readonly device: {
                readonly type: "object";
                readonly "x-stoplight": {
                    readonly id: "bu2ij616i2uce";
                };
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly device: {
                            readonly init_channel: "internet";
                            readonly ip: "124.124.1.1";
                            readonly mac: "11-AC-58-21-1B-AA";
                            readonly imei: "990000112233445";
                            readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                            readonly accept_header: "text/html";
                            readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                            readonly browser_tz: "-330";
                            readonly browser_color_depth: "32";
                            readonly browser_java_enabled: "false";
                            readonly browser_screen_height: "601";
                            readonly browser_screen_width: "657";
                            readonly browser_language: "en-US";
                            readonly browser_javascript_enabled: "true";
                        };
                    };
                };
                readonly title: "Device";
                readonly description: "Device";
                readonly properties: {
                    readonly init_channel: {
                        readonly type: "string";
                        readonly description: "Initiating channel,accepted values are internet,app or kiosk";
                        readonly enum: readonly ["internet", "app", "kiosk"];
                        readonly examples: readonly ["internet"];
                    };
                    readonly ip: {
                        readonly type: "string";
                        readonly description: "Actual end customer IP address is required to be passed";
                        readonly maxLength: 15;
                        readonly examples: readonly ["123.0.0.1"];
                    };
                    readonly user_agent: {
                        readonly type: "string";
                        readonly description: "Exact content of the HTTP user-agent header\n\nNote: If the total length of the User-Agent sent by the browser exceeds 2048 characters, truncate the excess portion";
                        readonly pattern: "=^[A-Za-z0-9\\\\_\\\\:\\\\-\\\\,\\\\;\\\\/\\\\)\\\\(\\\\.\\\\s\\\\+\\\\[\\\\]\\\\=@]{10,255}$";
                        readonly examples: readonly ["Mozilla/5.0(WindowsNT10.0;WOW64;rv: 51.0)Gecko/20100101Firefox/51.0"];
                    };
                    readonly accept_header: {
                        readonly type: "string";
                        readonly description: "Customer browser accept header values";
                        readonly maxLength: 255;
                        readonly pattern: "^[0-9A-Za-z\\\\.\\\\+\\\\-\\\\/\\\\=\\\\*\\\\,\\\\;]{10,255}$";
                        readonly examples: readonly ["application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"];
                    };
                };
                readonly required: readonly ["init_channel", "ip", "user_agent", "accept_header"];
            };
            readonly invoice: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly invoice_number: "MEINVU111111221133";
                        readonly invoice_display_number: "11221133";
                        readonly customer_name: "John Doe";
                        readonly invoice_date: "2021-09-03T13:21:50+05:30";
                        readonly gst_details: {
                            readonly cgst: "8.00";
                            readonly sgst: "8.00";
                            readonly igst: "0.00";
                            readonly gst: "16.00";
                            readonly cess: "0.00";
                            readonly gstincentive: "5.00";
                            readonly gstpct: "16.00";
                            readonly gstin: "12344567";
                        };
                    };
                };
                readonly properties: {
                    readonly invoice_number: {
                        readonly type: "string";
                        readonly description: "Unique number assigned by merchant for the invoice";
                        readonly pattern: "^[A-Za-z0-9]{1,100}$";
                        readonly examples: readonly ["MEINVU111111221133"];
                    };
                    readonly invoice_display_number: {
                        readonly type: "string";
                        readonly description: "Invoice number to be displayed to the customer";
                        readonly pattern: "^[A-Za-z0-9]{1,80}$";
                        readonly examples: readonly ["11221133"];
                    };
                    readonly customer_name: {
                        readonly type: "string";
                        readonly pattern: "^[A-Za-z0-9]{1,80}$";
                        readonly description: "Customer's name to be printed on invoice";
                        readonly examples: readonly ["John Doe"];
                    };
                    readonly invoice_date: {
                        readonly type: "string";
                        readonly description: "Invoice generation date in the YYYYMMDD format";
                        readonly format: "date";
                        readonly examples: readonly ["2021-09-03"];
                    };
                    readonly gst_details: {
                        readonly type: "object";
                        readonly properties: {
                            readonly cgst: {
                                readonly type: "string";
                                readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                readonly examples: readonly ["100.00"];
                            };
                            readonly sgst: {
                                readonly type: "string";
                                readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                readonly examples: readonly ["100.00"];
                            };
                            readonly igst: {
                                readonly type: "string";
                                readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                readonly examples: readonly ["200.00"];
                            };
                            readonly gst: {
                                readonly type: "string";
                            };
                            readonly cess: {
                                readonly type: "string";
                                readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                readonly examples: readonly ["50.00"];
                            };
                            readonly gstincentive: {
                                readonly type: "string";
                                readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                            };
                            readonly gstpct: {
                                readonly type: "string";
                                readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                            };
                            readonly gstin: {
                                readonly type: "string";
                                readonly pattern: "^[A-Za-z0-9]{1,80}$";
                                readonly examples: readonly ["29GGGGG1314R9Z6"];
                            };
                        };
                    };
                };
            };
            readonly split_payment: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly split_payment: readonly [{
                            readonly mercid: "BDMERCID1";
                            readonly amount: "3000.00";
                        }, {
                            readonly mercid: "BDMERCID2";
                            readonly amount: "1000.00";
                        }];
                    };
                };
                readonly properties: {
                    readonly mercid: {
                        readonly type: "string";
                        readonly description: "Merchant ID provided by BillDesk where split payment amount will be settled.";
                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                        readonly examples: readonly ["BDMERCID"];
                    };
                    readonly amount: {
                        readonly type: "string";
                        readonly description: "Split Amount which is settled in the respective Split Merchant ID.";
                        readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                        readonly examples: readonly ["299.28"];
                    };
                };
                readonly description: "This object is applicable in case a merchant has opted to receive the settlement in multiple settlement accounts";
                readonly title: "split_payment_request";
            };
            readonly mandate: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly mercid: "BDMERCID";
                        readonly customer_refid: "CUST614514520010012";
                        readonly subscription_refid: "SUB614514510012";
                        readonly subscription_desc: "Unlimited Plan";
                        readonly start_date: "2023-02-08";
                        readonly end_date: "2050-12-22";
                        readonly amount: "774.00";
                        readonly currency: "356";
                        readonly frequency: "adho";
                        readonly amount_type: "max";
                    };
                };
                readonly properties: {
                    readonly mercid: {
                        readonly type: "string";
                        readonly description: "Unique identifier as defined by BillDesk for each merchant";
                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                        readonly examples: readonly ["BDMERCID"];
                    };
                    readonly customer_refid: {
                        readonly type: "string";
                        readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer";
                        readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                        readonly examples: readonly ["CUSTREF00A00011"];
                    };
                    readonly subscription_refid: {
                        readonly type: "string";
                        readonly description: "Unique reference assigned by merchant for the subscription";
                        readonly pattern: "^[A-Za-z0-9_-]{1,128}$";
                        readonly examples: readonly ["SUBREF00A00011"];
                    };
                    readonly subscription_desc: {
                        readonly type: "string";
                        readonly description: "Customer friendly description for the subscription, this narration is generally displayed to the customer at the issuer channel";
                    };
                    readonly start_date: {
                        readonly title: "start_date";
                        readonly "x-stoplight": {
                            readonly id: "v7tyy2tfnut1w";
                        };
                        readonly type: "string";
                        readonly description: "Subscription start date in yyyy-mm-dd format\nNote: Should be greater than or equal to current date (IST timezone). \nNote for UPI : Should be equal to mandate creation date for UPI. In UPI, an subsequent charge is created on a successful mandate. This includes the first charge as well along with mandate creation. Since first charge is done immediately, it is important that the mandate “start_date” should be today’s date \n";
                        readonly format: "date";
                        readonly examples: readonly ["2021-05-08"];
                    };
                    readonly end_date: {
                        readonly title: "end_date";
                        readonly "x-stoplight": {
                            readonly id: "uz968g6golwjt";
                        };
                        readonly type: "string";
                        readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                        readonly format: "date";
                        readonly examples: readonly ["2059-12-31"];
                    };
                    readonly amount: {
                        readonly type: "string";
                        readonly description: "Subscription amount in two decimals, eg. 2400.00";
                        readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                        readonly examples: readonly ["200.28"];
                    };
                    readonly currency: {
                        readonly type: "string";
                        readonly description: "ISO currency code for the amount, with a value 356 for INR";
                        readonly examples: readonly ["356"];
                    };
                    readonly frequency: {
                        readonly type: "string";
                        readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n\n•\tweek - weekly\n•\tmnth - monthly\n•\tbimn – bi-monthly\n•\tqurt - quarterly\n•\tbian – bi-annually\n•\tyear - yearly\n•\tadho – adhoc\n\n";
                        readonly enum: readonly ["mnth", "week", "bimn", "qurt", "bian", "year", "adho"];
                        readonly examples: readonly ["adho"];
                    };
                    readonly amount_type: {
                        readonly title: "amount_type";
                        readonly "x-stoplight": {
                            readonly id: "o7dqaslkupvxa";
                        };
                        readonly type: "string";
                        readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n";
                        readonly enum: readonly ["maximum", "fixed"];
                    };
                    readonly recurrence_rule: {
                        readonly title: "recurrence_rule";
                        readonly "x-stoplight": {
                            readonly id: "mzu48wk4tb3i8";
                        };
                        readonly type: "string";
                        readonly description: "Note: Required only where payment_method_type = upi. Default value : 'after'\n";
                        readonly enum: readonly ["after"];
                    };
                    readonly debit_day: {
                        readonly title: "debit_day";
                        readonly "x-stoplight": {
                            readonly id: "ppp2ede7qx3fc";
                        };
                        readonly type: "string";
                        readonly description: "Required only where payment_method_type = upi. Default value \"1\" to be passed\n";
                        readonly pattern: "^\\\\d{1,2}$";
                        readonly enum: readonly ["1"];
                        readonly examples: readonly ["1"];
                    };
                };
                readonly required: readonly ["mercid", "customer_refid", "subscription_refid", "subscription_desc", "start_date", "end_date", "amount", "currency", "frequency", "amount_type"];
            };
            readonly additional_info: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly additional_info: {
                            readonly additional_info1: "Details1";
                            readonly additional_info2: "Details2";
                            readonly additional_info3: "Details3";
                            readonly additional_info4: "Details4";
                            readonly additional_info5: "Details5";
                            readonly additional_info6: "Details6";
                            readonly additional_info7: "Details7";
                            readonly additional_info8: "Details8";
                            readonly additional_info9: "Details9";
                            readonly additional_info10: "Details10";
                        };
                    };
                };
                readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                readonly properties: {
                    readonly additional_info1: {
                        readonly type: "string";
                        readonly examples: readonly ["Details1"];
                    };
                    readonly additional_info2: {
                        readonly type: "string";
                        readonly examples: readonly ["Details2"];
                    };
                    readonly additional_info3: {
                        readonly type: "string";
                        readonly examples: readonly ["Details3"];
                    };
                    readonly additional_info4: {
                        readonly type: "string";
                        readonly examples: readonly ["Details4"];
                    };
                    readonly additional_info5: {
                        readonly type: "string";
                        readonly examples: readonly ["Details5"];
                    };
                    readonly additional_info6: {
                        readonly type: "string";
                        readonly examples: readonly ["Details6"];
                    };
                    readonly additional_info7: {
                        readonly type: "string";
                        readonly examples: readonly ["Details7"];
                    };
                };
            };
        };
        readonly required: readonly ["orderid", "mercid", "order_date", "amount", "currency", "ru", "itemcode"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "order";
                    readonly mercid: "BDMERCID";
                    readonly amount: "300.00";
                    readonly ru: "https://www.demourlmerchant.com/response";
                    readonly orderid: "6yn4uhuz9e9bcw9qo6r6v4";
                    readonly order_date: "2020-08-17T15:19:00+0530";
                    readonly bdorderid: "OAFC19XTFD8TSP";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                    };
                    readonly next_step: "redirect";
                    readonly itemcode: "DIRECT";
                    readonly createdon: "2021-03-11T19:23:24+05:30";
                    readonly currency: "356";
                    readonly links: readonly [{
                        readonly method: "GET";
                        readonly rel: "self";
                        readonly href: "https://www.sampleurl.com/request";
                    }, {
                        readonly headers: {
                            readonly authorization: "OToken DEDC1071B77800A146B6E8D2530E0429E76520C151B40CC3325D8B6D9242CBA3A6BFA643E7E5596FBEBAE0F46A1FB1BCD099EBC1F59DCD82F390B6BC45FCE036F37F7F589BD687A691E1378F1FF432331C62E7E641E857C8F8A405A4BFE2F01B1EB8F3C69817D45F5DDE9DEE346ACABA1B7208DECA9E43CCE7AB3761553E23D9CB36A870C1819C15C7C4B1CFE2802DFD05F651AA537AB81787.4145535F55415431";
                        };
                        readonly valid_date: "2020-08-17T15:49:00+05:30";
                        readonly method: "POST";
                        readonly rel: "redirect";
                        readonly href: "https://www.billdesk.com/pgi/MerchantPayment/";
                        readonly parameters: {
                            readonly mercid: "BDMERCID";
                            readonly bdorderid: "OAFC19XTFD8TSP";
                        };
                    }];
                    readonly status: "ACTIVE";
                    readonly invoice: {
                        readonly invoice_number: "MEINVU111111221133";
                        readonly invoice_display_number: "11221133";
                        readonly customer_name: "John Doe";
                        readonly invoice_date: "2021-09-03T13:21:50+05:30";
                        readonly gst_details: {
                            readonly cgst: "8.00";
                            readonly sgst: "8.00";
                            readonly igst: "0.00";
                            readonly gst: "16.00";
                            readonly cess: "0.00";
                            readonly gstincentive: "5.00";
                            readonly gstpct: "16.00";
                            readonly gstin: "12344567";
                        };
                    };
                    readonly device: {
                        readonly accept_header: "text/html";
                        readonly ip: "202.149.208.92";
                        readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                        readonly imei: "990000112233445";
                        readonly init_channel: "internet";
                        readonly mac: "11-AC-58-21-1B-AA";
                        readonly user_agent: "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:51.0) Gecko/20100101 Firefox/51.0";
                    };
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly ru: {
                    readonly title: "return URL";
                    readonly "x-stoplight": {
                        readonly id: "2nnmkccdq26ck";
                    };
                    readonly type: "string";
                    readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                    readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                    readonly examples: readonly ["https://www.merchant.com"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly order_date: {
                    readonly type: "string";
                    readonly description: "Merchant order generation date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                    readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
                };
                readonly bdorderid: {
                    readonly title: "bdorderid";
                    readonly "x-stoplight": {
                        readonly id: "m13q2fo7bn801";
                    };
                    readonly type: "string";
                    readonly description: "Unique value generated by BillDesk for each order id generated using Create Order API";
                };
                readonly next_step: {
                    readonly title: "next_step";
                    readonly "x-stoplight": {
                        readonly id: "ayox9qr52qx6o";
                    };
                    readonly type: "string";
                    readonly description: "Refers to the action to be taken by the merchant, for eg. redirect or capture_otp\n\n`redirect` `capture_otp` `3ds2_challenge` `3ds2_frictionless`";
                    readonly enum: readonly ["redirect", "capture_otp", "3ds2_challenge", "3ds2_frictionless"];
                };
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly createdon: {
                    readonly title: "createdon";
                    readonly "x-stoplight": {
                        readonly id: "k3ewegvbimz0g";
                    };
                    readonly type: "string";
                    readonly description: "object creation timestamp";
                    readonly format: "date-time";
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly method: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly headers: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly authorization: {
                                        readonly title: "authorization";
                                        readonly "x-stoplight": {
                                            readonly id: "7j04iqr3yp3z3";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique value generated by BillDesk for each request";
                                    };
                                };
                            };
                            readonly valid_date: {
                                readonly type: "string";
                            };
                            readonly parameters: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly mercid: {
                                        readonly title: "mercid";
                                        readonly "x-stoplight": {
                                            readonly id: "43ns25lu1fyuc";
                                        };
                                        readonly type: "string";
                                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                                        readonly description: "Unique identifier as defined by BillDesk for each merchant";
                                        readonly examples: readonly ["BDMERCID"];
                                    };
                                    readonly bdorderid: {
                                        readonly title: "bdorderid";
                                        readonly "x-stoplight": {
                                            readonly id: "m13q2fo7bn801";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique value generated by BillDesk for each order id generated using Create Order API";
                                    };
                                    readonly rdata: {
                                        readonly title: "rdata";
                                        readonly "x-stoplight": {
                                            readonly id: "lftrd03d82vvp";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique key generated by BillDesk for each request";
                                        readonly "x-examples": {};
                                    };
                                };
                            };
                        };
                    };
                };
                readonly status: {
                    readonly type: "string";
                    readonly enum: readonly ["ACTIVE"];
                    readonly description: "Represents the status of the order, with the following possible values:\n•\tACTIVE\n\n`ACTIVE`";
                };
                readonly invoice: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly invoice_number: "MEINVU111111221133";
                            readonly invoice_display_number: "11221133";
                            readonly customer_name: "John Doe";
                            readonly invoice_date: "2021-09-03T13:21:50+05:30";
                            readonly gst_details: {
                                readonly cgst: "8.00";
                                readonly sgst: "8.00";
                                readonly igst: "0.00";
                                readonly gst: "16.00";
                                readonly cess: "0.00";
                                readonly gstincentive: "5.00";
                                readonly gstpct: "16.00";
                                readonly gstin: "12344567";
                            };
                        };
                    };
                    readonly properties: {
                        readonly invoice_number: {
                            readonly type: "string";
                            readonly description: "Unique number assigned by merchant for the invoice";
                            readonly pattern: "^[A-Za-z0-9]{1,100}$";
                            readonly examples: readonly ["MEINVU111111221133"];
                        };
                        readonly invoice_display_number: {
                            readonly type: "string";
                            readonly description: "Invoice number to be displayed to the customer";
                            readonly pattern: "^[A-Za-z0-9]{1,80}$";
                            readonly examples: readonly ["11221133"];
                        };
                        readonly customer_name: {
                            readonly type: "string";
                            readonly pattern: "^[A-Za-z0-9]{1,80}$";
                            readonly description: "Customer's name to be printed on invoice";
                            readonly examples: readonly ["John Doe"];
                        };
                        readonly invoice_date: {
                            readonly type: "string";
                            readonly description: "Invoice generation date in the YYYYMMDD format";
                            readonly format: "date";
                            readonly examples: readonly ["2021-09-03"];
                        };
                        readonly gst_details: {
                            readonly type: "object";
                            readonly properties: {
                                readonly cgst: {
                                    readonly type: "string";
                                    readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                    readonly examples: readonly ["100.00"];
                                };
                                readonly sgst: {
                                    readonly type: "string";
                                    readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                    readonly examples: readonly ["100.00"];
                                };
                                readonly igst: {
                                    readonly type: "string";
                                    readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                    readonly examples: readonly ["200.00"];
                                };
                                readonly gst: {
                                    readonly type: "string";
                                };
                                readonly cess: {
                                    readonly type: "string";
                                    readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                    readonly examples: readonly ["50.00"];
                                };
                                readonly gstincentive: {
                                    readonly type: "string";
                                    readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                };
                                readonly gstpct: {
                                    readonly type: "string";
                                    readonly pattern: "^([0-9]{1}[0-9]{0,7}(\\\\.[0-9]{1,2})?)$";
                                };
                                readonly gstin: {
                                    readonly type: "string";
                                    readonly pattern: "^[A-Za-z0-9]{1,80}$";
                                    readonly examples: readonly ["29GGGGG1314R9Z6"];
                                };
                            };
                        };
                    };
                };
                readonly split_payment: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly split_payment: readonly [{
                                readonly mercid: "BDMERCID1";
                                readonly amount: "3000.00";
                            }, {
                                readonly mercid: "BDMERCID2";
                                readonly amount: "1000.00";
                            }];
                        };
                    };
                    readonly properties: {
                        readonly mercid: {
                            readonly type: "string";
                            readonly description: "Merchant ID provided by BillDesk where split payment amount will be settled.";
                            readonly pattern: "^[A-Za-z0-9]{1,10}$";
                            readonly examples: readonly ["BDMERCID"];
                        };
                        readonly amount: {
                            readonly type: "string";
                            readonly description: "Split Amount which is settled in the respective Split Merchant ID.";
                            readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                            readonly examples: readonly ["299.28"];
                        };
                    };
                    readonly description: "This object is applicable in case a merchant has opted to receive the settlement in multiple settlement accounts";
                    readonly title: "split_payment_request";
                };
                readonly mandate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly objectid: {
                            readonly type: "string";
                        };
                        readonly mercid: {
                            readonly type: "string";
                        };
                        readonly customer_refid: {
                            readonly type: "string";
                        };
                        readonly subscription_refid: {
                            readonly type: "string";
                        };
                        readonly subscription_desc: {
                            readonly type: "string";
                        };
                        readonly amount: {
                            readonly type: "string";
                        };
                        readonly amount_type: {
                            readonly type: "string";
                        };
                        readonly start_date: {
                            readonly type: "string";
                        };
                        readonly end_date: {
                            readonly type: "string";
                        };
                        readonly frequency: {
                            readonly type: "string";
                        };
                        readonly payment_method_type: {
                            readonly type: "string";
                        };
                        readonly currency: {
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly type: "string";
                        };
                        readonly mandateid: {
                            readonly type: "string";
                        };
                        readonly createdon: {
                            readonly type: "string";
                        };
                        readonly verification_error_code: {
                            readonly type: "string";
                        };
                        readonly verification_error_type: {
                            readonly type: "string";
                        };
                        readonly verification_error_desc: {
                            readonly type: "string";
                        };
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly objectid: "mandate";
                            readonly mercid: "BDMERCID";
                            readonly customer_refid: "CUSTREF00A00011";
                            readonly subscription_refid: "SUBREF00A00011";
                            readonly subscription_desc: "Family Plan";
                            readonly amount: "1500.00";
                            readonly amount_type: "maximum";
                            readonly start_date: "2021-05-16";
                            readonly end_date: "2029-10-22";
                            readonly frequency: "adho";
                            readonly payment_method_type: "card";
                            readonly currency: "356";
                            readonly status: "pending";
                            readonly mandateid: "MA0DDD00050243";
                            readonly createdon: "2021-05-16T18:23:11+05:30";
                            readonly verification_error_code: "TRS0000";
                            readonly verification_error_type: "success";
                            readonly verification_error_desc: "Transaction Successful";
                        };
                    };
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateRefund: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly transactionid: "X4560477641875";
                readonly orderid: "ORDER202200000001";
                readonly mercid: "BDMERCID";
                readonly transaction_date: "2022-03-18T11:20:07+05:30";
                readonly txn_amount: "2.00";
                readonly refund_amount: "2.00";
                readonly currency: "356";
                readonly merc_refund_ref_no: "REFTS14RTEST001";
            };
        };
        readonly properties: {
            readonly transactionid: {
                readonly title: "transactionid";
                readonly "x-stoplight": {
                    readonly id: "uqizgn6tyoqhg";
                };
                readonly type: "string";
                readonly description: "Unique transactionid created by BillDesk ";
                readonly pattern: "^[A-Za-z0-9]{14,35}$";
                readonly examples: readonly ["U4560001099939"];
            };
            readonly orderid: {
                readonly title: "orderid";
                readonly "x-stoplight": {
                    readonly id: "lmwrwf7xn6wq8";
                };
                readonly type: "string";
                readonly description: "Unique ID generated by the merchant for each request";
                readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                readonly examples: readonly ["TEST0000009005"];
            };
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly transaction_date: {
                readonly title: "transaction_date";
                readonly "x-stoplight": {
                    readonly id: "d0ekw0quxfwwu";
                };
                readonly type: "string";
                readonly description: "BillDesk transaction date and time in YYYY-MM-DDThh:mm:ssTZD format";
                readonly format: "date-time";
                readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
            };
            readonly txn_amount: {
                readonly type: "string";
                readonly description: "Original transaction amount in two decimals";
                readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                readonly examples: readonly ["2400.00"];
            };
            readonly refund_amount: {
                readonly type: "string";
                readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                readonly description: "Refund amount in two decimals";
                readonly examples: readonly ["1100.00"];
            };
            readonly currency: {
                readonly title: "currency";
                readonly "x-stoplight": {
                    readonly id: "1ehjh4f7vidz7";
                };
                readonly type: "string";
                readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                readonly examples: readonly ["356"];
            };
            readonly merc_refund_ref_no: {
                readonly type: "string";
                readonly description: "Unique reference number created by the merchant for the refund request";
                readonly pattern: "^[A-Za-z0-9\\_\\:\\-]{1,100}$";
                readonly examples: readonly ["REFTS14RTEST001"];
            };
            readonly split_payment: {
                readonly type: "object";
                readonly "x-stoplight": {
                    readonly id: "715c0b8e1f0ab";
                };
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly split_refund: readonly [{
                            readonly mercid: "BDMERCID1";
                            readonly txn_amount: "75.00";
                            readonly refund_amount: "65.00";
                        }, {
                            readonly mercid: "BDMERCID2";
                            readonly txn_amount: "25.00";
                            readonly refund_amount: "25.00";
                        }];
                    };
                };
                readonly properties: {
                    readonly mercid: {
                        readonly type: "string";
                        readonly description: "Merchant ID provided by BillDesk where split refund amount will be adjusted";
                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                        readonly examples: readonly ["BDMERCID"];
                    };
                    readonly txn_amount: {
                        readonly type: "string";
                        readonly description: "Split Amount which was settled in the respective Split Merchant ID.";
                        readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                        readonly examples: readonly ["299.28"];
                    };
                    readonly refund_amount: {
                        readonly type: "string";
                        readonly description: "Refund Amount against txn_amount.";
                        readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                        readonly examples: readonly ["299.28"];
                    };
                };
                readonly title: "";
            };
        };
        readonly required: readonly ["transactionid", "orderid", "mercid", "transaction_date", "txn_amount", "refund_amount", "currency", "merc_refund_ref_no"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "refund";
                    readonly refundid: "X45604776418751";
                    readonly transactionid: "X4560477641875";
                    readonly orderid: "ORDER202200000001";
                    readonly mercid: "BDMERCID";
                    readonly transaction_date: "2022-03-18T11:20:07+05:30";
                    readonly txn_amount: "2.00";
                    readonly refund_amount: "2.00";
                    readonly currency: "356";
                    readonly refund_date: "2022-03-20T21:27:47+05:30";
                    readonly merc_refund_ref_no: "REFTS14RTEST001";
                    readonly refund_status: "0799";
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly refundid: {
                    readonly type: "string";
                    readonly description: "Unique refundid created by BillDesk for each refund request";
                    readonly pattern: "^[A-Za-z0-9]{1,15}$";
                    readonly examples: readonly ["X45604776418751"];
                };
                readonly transactionid: {
                    readonly title: "transactionid";
                    readonly "x-stoplight": {
                        readonly id: "uqizgn6tyoqhg";
                    };
                    readonly type: "string";
                    readonly description: "Unique transactionid created by BillDesk ";
                    readonly pattern: "^[A-Za-z0-9]{14,35}$";
                    readonly examples: readonly ["U4560001099939"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly transaction_date: {
                    readonly title: "transaction_date";
                    readonly "x-stoplight": {
                        readonly id: "d0ekw0quxfwwu";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk transaction date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                    readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
                };
                readonly txn_amount: {
                    readonly type: "string";
                    readonly description: "Original transaction amount in two decimals";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly examples: readonly ["2400.00"];
                };
                readonly refund_amount: {
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Refund amount in two decimals";
                    readonly examples: readonly ["1100.00"];
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly refund_date: {
                    readonly type: "string";
                    readonly description: "BillDesk refund date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                };
                readonly merc_refund_ref_no: {
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9\\_\\:\\-]{1,100}$";
                    readonly description: "Unique reference number created by the merchant for the refund request";
                    readonly examples: readonly ["REFTS14RTEST001"];
                };
                readonly split_payment: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly split_refund: readonly [{
                                readonly mercid: "BDMERCID1";
                                readonly txn_amount: "75.00";
                                readonly refund_amount: "65.00";
                                readonly refund_status: "0799";
                            }, {
                                readonly mercid: "BDMERCID2";
                                readonly txn_amount: "25.00";
                                readonly refund_amount: "25.00";
                                readonly refund_status: "0699";
                            }];
                        };
                    };
                    readonly properties: {
                        readonly mercid: {
                            readonly type: "string";
                            readonly description: "Merchant ID provided by BillDesk where split refund amount will be adjusted";
                        };
                        readonly txn_amount: {
                            readonly type: "string";
                            readonly description: "Split Amount which was settled in the respective Split Merchant ID.";
                        };
                        readonly refund_amount: {
                            readonly type: "string";
                            readonly description: "Refund Amount against txn_amount.";
                        };
                        readonly refund_status: {
                            readonly type: "string";
                            readonly description: "Represents the refund status of the transaction with the following possible values:\n•\t0799 - transaction is refunded\n•\t0699 - transaction is cancelled";
                        };
                    };
                    readonly description: "";
                };
                readonly refund_status: {
                    readonly type: "string";
                    readonly description: "Represents the refund status with the following values:\n•\t0799 – categorized as a refund, where the original transaction has been already settled \n•\t0699 – categorized as a cancellation, where the original transaction has not been settled\n\n`0699` `0799`";
                    readonly enum: readonly ["0699", "0799"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateTransaction: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMERCID";
                readonly orderid: "ORDERID14032023003";
                readonly amount: "2.00";
                readonly currency: "356";
                readonly ru: "https://www.merchanturl.com/response.jsp";
                readonly authentication_type: "3ds2";
                readonly "3ds_parameter": "merchant";
                readonly txn_process_type: "3ds";
                readonly additional_info: {
                    readonly additional_info1: "Details1";
                    readonly additional_info2: "Details2";
                    readonly additional_info3: "Details3";
                    readonly additional_info4: "Details4";
                    readonly additional_info5: "Details5";
                    readonly additional_info6: "Details6";
                    readonly additional_info7: "Details7";
                    readonly additional_info8: "Details8";
                    readonly additional_info9: "Details9";
                    readonly additional_info10: "Details10";
                };
                readonly itemcode: "DIRECT";
                readonly device: {
                    readonly init_channel: "internet";
                    readonly ip: "124.124.1.2";
                    readonly mac: "11-AC-58-21-1B-AA";
                    readonly imei: "990000112233445";
                    readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv: 51.0)Gecko/20100101Firefox/51.0";
                    readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                    readonly accept_header: "application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    readonly browser_tz: "-330";
                    readonly browser_color_depth: "32";
                    readonly browser_java_enabled: "false";
                    readonly browser_screen_height: "601";
                    readonly browser_screen_width: "657";
                    readonly browser_language: "en-US";
                    readonly browser_javascript_enabled: "true";
                };
                readonly payment_method_type: "card";
                readonly card: {
                    readonly number: "4000020000000000";
                    readonly expiry_month: "12";
                    readonly expiry_year: "2029";
                    readonly holder_name: "John Doe";
                    readonly cvv: "123";
                };
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly orderid: {
                readonly title: "orderid";
                readonly "x-stoplight": {
                    readonly id: "lmwrwf7xn6wq8";
                };
                readonly type: "string";
                readonly description: "Unique ID generated by the merchant for each request";
                readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                readonly examples: readonly ["TEST0000009005"];
            };
            readonly amount: {
                readonly title: "amount";
                readonly "x-stoplight": {
                    readonly id: "s5xd8bwxp2orm";
                };
                readonly type: "string";
                readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                readonly description: "Transaction amount in two decimals, eg. 299.28";
                readonly examples: readonly ["299.28"];
            };
            readonly bankid: {
                readonly title: "bankid";
                readonly "x-stoplight": {
                    readonly id: "gf7ntync4cj73";
                };
                readonly type: "string";
                readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly examples: readonly ["1HM"];
            };
            readonly currency: {
                readonly title: "currency";
                readonly "x-stoplight": {
                    readonly id: "1ehjh4f7vidz7";
                };
                readonly type: "string";
                readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                readonly examples: readonly ["356"];
            };
            readonly ru: {
                readonly title: "return URL";
                readonly "x-stoplight": {
                    readonly id: "2nnmkccdq26ck";
                };
                readonly type: "string";
                readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                readonly examples: readonly ["https://www.merchant.com"];
            };
            readonly authentication_type: {
                readonly title: "authentication_type";
                readonly "x-stoplight": {
                    readonly id: "c33ke2q5rl7ql";
                };
                readonly type: "string";
                readonly description: "Represents the type of authentication initiated in the request, will be fixed value - 3ds2";
                readonly enum: readonly ["3ds2"];
                readonly examples: readonly ["3ds2"];
            };
            readonly "3ds_parameter": {
                readonly title: "3ds_parameter";
                readonly "x-stoplight": {
                    readonly id: "9cf00xo1tntr9";
                };
                readonly type: "string";
                readonly enum: readonly ["merchant"];
                readonly description: "Value that determines which entity will capture the device attributes, possible values are merchant";
                readonly examples: readonly ["merchant"];
            };
            readonly txn_process_type: {
                readonly title: "txn_process_type";
                readonly "x-stoplight": {
                    readonly id: "lyz1n731cb596";
                };
                readonly type: "string";
                readonly description: "Indicates transaction processing type, will be the following values:\nAFA payment\n•\tcard - 3ds or y3ds or 3ds_redirect\n•\tupi – collect, qr or intent\n•\tnetbanking – nb\n•\teft - offline\nRecurring payment\n•\tcard, upi, bankaccount – si";
                readonly enum: readonly ["y3ds", "3ds", "collect", "intent", "qr", "nb", "eft", "si"];
                readonly examples: readonly ["y3ds"];
            };
            readonly itemcode: {
                readonly title: "item code";
                readonly "x-stoplight": {
                    readonly id: "tz16mo44yvoae";
                };
                readonly type: "string";
                readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                readonly pattern: "^[A-Za-z0-9]{1,20}$";
                readonly examples: readonly ["DIRECT"];
            };
            readonly device: {
                readonly type: "object";
                readonly "x-stoplight": {
                    readonly id: "1dup8vlut7f5l";
                };
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly device: {
                            readonly init_channel: "internet";
                            readonly ip: "124.124.1.1";
                            readonly mac: "11-AC-58-21-1B-AA";
                            readonly imei: "990000112233445";
                            readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                            readonly accept_header: "text/html";
                            readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                            readonly browser_tz: "-330";
                            readonly browser_color_depth: "32";
                            readonly browser_java_enabled: "false";
                            readonly browser_screen_height: "601";
                            readonly browser_screen_width: "657";
                            readonly browser_language: "en-US";
                            readonly browser_javascript_enabled: "true";
                        };
                    };
                };
                readonly title: "Device";
                readonly description: "";
                readonly properties: {
                    readonly init_channel: {
                        readonly type: "string";
                        readonly description: "Initiating channel,accepted values are internet,app or kiosk";
                        readonly enum: readonly ["internet", "app", "kiosk"];
                        readonly examples: readonly ["internet"];
                    };
                    readonly ip: {
                        readonly type: "string";
                        readonly description: "Actual end customer IP address is required to be passed";
                        readonly maxLength: 15;
                        readonly examples: readonly ["23.3.5.33"];
                    };
                    readonly user_agent: {
                        readonly type: "string";
                        readonly description: "Exact content of the HTTP user-agent header\n\nNote: If the total length of the User-Agent sent by the browser exceeds 2048 characters, truncate the excess portion";
                        readonly pattern: "=^[A-Za-z0-9\\\\_\\\\:\\\\-\\\\,\\\\;\\\\/\\\\)\\\\(\\\\.\\\\s\\\\+\\\\[\\\\]\\\\=@]{10,255}$";
                        readonly examples: readonly ["Mozilla/5.0(WindowsNT10.0;WOW64;rv: 51.0)Gecko/20100101Firefox/51.0"];
                    };
                    readonly accept_header: {
                        readonly type: "string";
                        readonly description: "Customer browser accept header values";
                        readonly maxLength: 255;
                        readonly pattern: "^[0-9A-Za-z\\\\.\\\\+\\\\-\\\\/\\\\=\\\\*\\\\,\\\\;]{10,255}$";
                        readonly examples: readonly ["application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"];
                    };
                    readonly browser_language: {
                        readonly type: "string";
                        readonly description: "Value representing the browser language, returned from navigator.language property, for eg. en-US";
                        readonly maxLength: 5;
                        readonly pattern: "^[A-Za-z\\\\-]{2,5}$";
                        readonly examples: readonly ["en-US"];
                    };
                    readonly browser_javascript_enabled: {
                        readonly type: "string";
                        readonly enum: readonly ["true", "false"];
                        readonly description: "Boolean (true or false) that represents the ability of the cardholder browser to execute JavaScript.\nNote – if true, additional attributes of browser_tz, browser_color_depth, browser_java_enabled, browser_screen_height, browser_screen_width are mandatory";
                        readonly examples: readonly ["true"];
                    };
                    readonly browser_tz: {
                        readonly type: "string";
                        readonly description: "Time-zone offset in minutes between UTC and the Cardholder browser local time.\n\nNote that the offset is positive if the local time zone is behind UTC and negative if it is ahead. For eg. if UTC -5 hours then browser_tz = 300 and if UTC +5 hours then browser_tz = -300’";
                        readonly pattern: "^[0-9\\\\+\\\\-]{2,6}$";
                        readonly maxLength: 6;
                        readonly examples: readonly ["-330"];
                    };
                    readonly browser_color_depth: {
                        readonly type: "string";
                        readonly description: "Value representing the bit depth of the colour palette for displaying images, in bits per pixel.\n\nObtained from Cardholder browser using the screen.Color.Depth property. In case the actual vaue does not exist in the allowed values, use the closest lower value,for eg. 32";
                        readonly maxLength: 5;
                        readonly pattern: "^[0-9]{2,5}$";
                        readonly examples: readonly ["652"];
                    };
                    readonly browser_java_enabled: {
                        readonly type: "string";
                        readonly description: "Boolean (true or false) that represents the ability of the cardholder browser to execute Java. Value is returned from the navigator.javaEnabled property";
                        readonly enum: readonly ["true", "false"];
                        readonly examples: readonly ["false"];
                    };
                    readonly browser_screen_height: {
                        readonly type: "string";
                        readonly description: "Total height of the Cardholder’s screen in pixels. Value is returned from the screen.height property for eg. 601";
                        readonly pattern: "^[0-9]{2,5}$";
                        readonly maxLength: 5;
                        readonly examples: readonly ["452"];
                    };
                    readonly browser_screen_width: {
                        readonly type: "string";
                        readonly description: "Total width of the cardholder’s screen in pixels. Value is returned from the screen.width property, for eg. 657";
                        readonly pattern: "^[0-9]{2,5}$";
                        readonly maxLength: 5;
                        readonly examples: readonly ["702"];
                    };
                };
                readonly required: readonly ["init_channel", "ip", "user_agent", "accept_header", "browser_language", "browser_javascript_enabled"];
            };
            readonly payment_method_type: {
                readonly title: "payment_method_type";
                readonly "x-stoplight": {
                    readonly id: "kklghqguq1r3q";
                };
                readonly type: "string";
                readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.";
                readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                readonly examples: readonly ["card"];
            };
            readonly card: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "1xxgnveu0ix3k";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly number: "4242420000001234";
                                readonly expiry_month: "12";
                                readonly expiry_year: "2029";
                                readonly holder_name: "John Doe";
                                readonly cvv: "123";
                                readonly tokenize: "true";
                                readonly coft_consent: "true";
                            };
                        };
                    };
                    readonly title: "Pay using card number - pan";
                    readonly properties: {
                        readonly number: {
                            readonly type: "string";
                            readonly pattern: "^[0-9]{16}$";
                            readonly description: "Card number";
                            readonly examples: readonly ["4242420000001234"];
                        };
                        readonly expiry_month: {
                            readonly type: "string";
                            readonly description: "Card expiry month in MM format";
                            readonly examples: readonly ["02"];
                        };
                        readonly expiry_year: {
                            readonly type: "string";
                            readonly description: "Card expiry year in YYYY format";
                            readonly examples: readonly ["2029"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly tokenize: {
                            readonly type: "string";
                            readonly enum: readonly ["true"];
                            readonly description: "If the card is required to be tokenized then, the value is true";
                        };
                        readonly coft_consent: {
                            readonly type: "string";
                            readonly enum: readonly ["true"];
                            readonly description: "Fixed value as true, confirming the card holder consent to tokenize the card";
                        };
                    };
                    readonly required: readonly ["number", "expiry_month", "expiry_year", "cvv"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "ze1cvmk9lawl5";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly network_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using network token";
                    readonly properties: {
                        readonly network_token: {
                            readonly type: "object";
                            readonly required: readonly ["token_value", "token_cryptogram", "token_expiry_month", "token_expiry_year"];
                            readonly properties: {
                                readonly token_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly token_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\/\\\\!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)\\\\{\\\\}_\\\\+\\\\=\\\\|:”;’,\\\\.~`\\\\-\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly token_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly token_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["network_token", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "605rgi2ucynyf";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly issuer_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using issuer token";
                    readonly properties: {
                        readonly issuer_token: {
                            readonly type: "object";
                            readonly required: readonly ["token_value", "token_cryptogram", "token_expiry_month", "token_expiry_year"];
                            readonly properties: {
                                readonly token_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly token_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\\\\\/\\\\\\\\!@#\\\\\\\\$%\\\\\\\\^&\\\\\\\\*\\\\\\\\(\\\\\\\\)\\\\\\\\{\\\\\\\\}_\\\\\\\\+\\\\\\\\=\\\\\\\\|:”;’,\\\\\\\\.~`\\\\\\\\-\\\\\\\\\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly token_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly token_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value ";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["issuer_token", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "dbr5tekgwo4lq";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly cardaccountid: "CA0AAEF9000000000123";
                                readonly cvv: "123";
                                readonly card_end: "0055";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using card account id";
                    readonly properties: {
                        readonly cardaccountid: {
                            readonly type: "string";
                            readonly description: "Unique ID created by BillDesk for the combination of card number, mercid and customer_refid";
                            readonly examples: readonly ["CA0AAEF9000000000123"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value ";
                            readonly examples: readonly ["123"];
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                            readonly description: "Cardholder name";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["cardaccountid", "cvv", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "77jgo8f9g4srj";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly network_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using alt id token";
                    readonly properties: {
                        readonly altid_token: {
                            readonly type: "object";
                            readonly required: readonly ["altid_value", "altid_cryptogram", "altid_expiry_month", "altid_expiry_year"];
                            readonly properties: {
                                readonly altid_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly altid_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\/\\\\!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)\\\\{\\\\}_\\\\+\\\\=\\\\|:”;’,\\\\.~`\\\\-\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly altid_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly altid_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                                readonly altid_trid: {
                                    readonly type: "string";
                                    readonly description: "conditional: required only for AMEX - validate once";
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["altid_token", "cvv", "holder_name"];
                }];
            };
            readonly customer_refid: {
                readonly title: "customer_refid";
                readonly "x-stoplight": {
                    readonly id: "mpmq18zbl4x12";
                };
                readonly type: "string";
                readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer\nRequired for mandate and tokenization";
                readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                readonly examples: readonly ["CSREF00001"];
            };
            readonly avs: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly bankaccount: readonly [{
                            readonly number: "12233445566";
                            readonly ifsc: "IDBK10000002";
                            readonly name: "John Doe";
                        }, {
                            readonly number: "12233445567";
                            readonly ifsc: "IDBK10000002";
                            readonly name: "John Doe";
                        }];
                    };
                };
                readonly description: "This API can be used to verify the bank account number by initiating a penny drop to the account. For upi, validation is done at acquiring bank end ";
                readonly title: "Account validation";
                readonly properties: {
                    readonly bankaccounts: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly number: {
                                    readonly description: "Customer's bank account number";
                                    readonly title: "bankacc_number";
                                    readonly "x-stoplight": {
                                        readonly id: "9nwo0pwlz0qos";
                                    };
                                    readonly type: "string";
                                    readonly pattern: "^\\\\d{9,18}$";
                                    readonly examples: readonly ["12233445566"];
                                };
                                readonly ifsc: {
                                    readonly description: "IFSC of the bank account number";
                                    readonly title: "IFSC";
                                    readonly "x-stoplight": {
                                        readonly id: "grn65kr3i0pk0";
                                    };
                                    readonly type: "string";
                                    readonly pattern: "^[A-Za-z]{4}[a-zA-Z0-9]{7}$";
                                    readonly examples: readonly ["IDBK10000002"];
                                };
                                readonly name: {
                                    readonly description: "Name of the bank account holder";
                                    readonly title: "bankaccount_holder_name";
                                    readonly "x-stoplight": {
                                        readonly id: "jedjceugzit8g";
                                    };
                                    readonly type: "string";
                                    readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                                    readonly examples: readonly ["John Doe"];
                                };
                            };
                            readonly required: readonly ["number", "ifsc"];
                        };
                    };
                };
            };
            readonly mandate: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly mercid: "BDMERCID";
                        readonly customer_refid: "CUST614514520010012";
                        readonly subscription_refid: "SUB614514510012";
                        readonly subscription_desc: "Unlimited Plan";
                        readonly start_date: "2023-02-08";
                        readonly end_date: "2050-12-22";
                        readonly amount: "774.00";
                        readonly currency: "356";
                        readonly frequency: "adho";
                        readonly amount_type: "max";
                    };
                };
                readonly properties: {
                    readonly mercid: {
                        readonly type: "string";
                        readonly description: "Unique identifier as defined by BillDesk for each merchant";
                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                        readonly examples: readonly ["BDMERCID"];
                    };
                    readonly customer_refid: {
                        readonly type: "string";
                        readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer";
                        readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                        readonly examples: readonly ["CUSTREF00A00011"];
                    };
                    readonly subscription_refid: {
                        readonly type: "string";
                        readonly description: "Unique reference assigned by merchant for the subscription";
                        readonly pattern: "^[A-Za-z0-9_-]{1,128}$";
                        readonly examples: readonly ["SUBREF00A00011"];
                    };
                    readonly subscription_desc: {
                        readonly type: "string";
                        readonly description: "Customer friendly description for the subscription, this narration is generally displayed to the customer at the issuer channel";
                    };
                    readonly start_date: {
                        readonly title: "start_date";
                        readonly "x-stoplight": {
                            readonly id: "v7tyy2tfnut1w";
                        };
                        readonly type: "string";
                        readonly description: "Subscription start date in yyyy-mm-dd format\nNote: Should be greater than or equal to current date (IST timezone). \nNote for UPI : Should be equal to mandate creation date for UPI. In UPI, an subsequent charge is created on a successful mandate. This includes the first charge as well along with mandate creation. Since first charge is done immediately, it is important that the mandate “start_date” should be today’s date \n";
                        readonly format: "date";
                        readonly examples: readonly ["2021-05-08"];
                    };
                    readonly end_date: {
                        readonly title: "end_date";
                        readonly "x-stoplight": {
                            readonly id: "uz968g6golwjt";
                        };
                        readonly type: "string";
                        readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                        readonly format: "date";
                        readonly examples: readonly ["2059-12-31"];
                    };
                    readonly amount: {
                        readonly type: "string";
                        readonly description: "Subscription amount in two decimals, eg. 2400.00";
                        readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                        readonly examples: readonly ["200.28"];
                    };
                    readonly currency: {
                        readonly type: "string";
                        readonly description: "ISO currency code for the amount, with a value 356 for INR";
                        readonly examples: readonly ["356"];
                    };
                    readonly frequency: {
                        readonly type: "string";
                        readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n\n•\tweek - weekly\n•\tmnth - monthly\n•\tbimn – bi-monthly\n•\tqurt - quarterly\n•\tbian – bi-annually\n•\tyear - yearly\n•\tadho – adhoc\n\n";
                        readonly enum: readonly ["mnth", "week", "bimn", "qurt", "bian", "year", "adho"];
                        readonly examples: readonly ["adho"];
                    };
                    readonly amount_type: {
                        readonly title: "amount_type";
                        readonly "x-stoplight": {
                            readonly id: "o7dqaslkupvxa";
                        };
                        readonly type: "string";
                        readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n";
                        readonly enum: readonly ["maximum", "fixed"];
                    };
                    readonly recurrence_rule: {
                        readonly title: "recurrence_rule";
                        readonly "x-stoplight": {
                            readonly id: "mzu48wk4tb3i8";
                        };
                        readonly type: "string";
                        readonly description: "Note: Required only where payment_method_type = upi. Default value : 'after'\n";
                        readonly enum: readonly ["after"];
                    };
                    readonly debit_day: {
                        readonly title: "debit_day";
                        readonly "x-stoplight": {
                            readonly id: "ppp2ede7qx3fc";
                        };
                        readonly type: "string";
                        readonly description: "Required only where payment_method_type = upi. Default value \"1\" to be passed\n";
                        readonly pattern: "^\\\\d{1,2}$";
                        readonly enum: readonly ["1"];
                        readonly examples: readonly ["1"];
                    };
                };
                readonly required: readonly ["mercid", "customer_refid", "subscription_refid", "subscription_desc", "start_date", "end_date", "amount", "currency", "frequency", "amount_type"];
            };
            readonly upi: {
                readonly type: "object";
                readonly "x-stoplight": {
                    readonly id: "5964437f54f97";
                };
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly vpa: "testvpa@abc";
                    };
                };
                readonly properties: {
                    readonly vpa: {
                        readonly type: "string";
                        readonly description: "Virtual Payment Address";
                        readonly pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\\\.\\\\-\\\\_]{2,38}\\\\@[a-zA-Z0-9]{3,20}$";
                        readonly examples: readonly ["abc@okbank"];
                    };
                };
                readonly description: "Required when payment_method_type = upi and txn_process_type = collect";
            };
            readonly additional_info: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly additional_info: {
                            readonly additional_info1: "Details1";
                            readonly additional_info2: "Details2";
                            readonly additional_info3: "Details3";
                            readonly additional_info4: "Details4";
                            readonly additional_info5: "Details5";
                            readonly additional_info6: "Details6";
                            readonly additional_info7: "Details7";
                            readonly additional_info8: "Details8";
                            readonly additional_info9: "Details9";
                            readonly additional_info10: "Details10";
                        };
                    };
                };
                readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                readonly properties: {
                    readonly additional_info1: {
                        readonly type: "string";
                        readonly examples: readonly ["Details1"];
                    };
                    readonly additional_info2: {
                        readonly type: "string";
                        readonly examples: readonly ["Details2"];
                    };
                    readonly additional_info3: {
                        readonly type: "string";
                        readonly examples: readonly ["Details3"];
                    };
                    readonly additional_info4: {
                        readonly type: "string";
                        readonly examples: readonly ["Details4"];
                    };
                    readonly additional_info5: {
                        readonly type: "string";
                        readonly examples: readonly ["Details5"];
                    };
                    readonly additional_info6: {
                        readonly type: "string";
                        readonly examples: readonly ["Details6"];
                    };
                    readonly additional_info7: {
                        readonly type: "string";
                        readonly examples: readonly ["Details7"];
                    };
                };
            };
        };
        readonly required: readonly ["mercid", "orderid", "amount", "currency", "ru", "authentication_type", "3ds_parameter", "txn_process_type", "itemcode", "device", "payment_method_type", "card"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "transaction";
                    readonly transactionid: "U4560001099951";
                    readonly orderid: "ORDERID14032023003";
                    readonly mercid: "BDMERCID";
                    readonly transaction_date: "2023-03-14T15:17:30+05:30";
                    readonly amount: "2.00";
                    readonly surcharge: "0.00";
                    readonly discount: "0.00";
                    readonly charge_amount: "2.00";
                    readonly currency: "356";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "Details3";
                        readonly additional_info4: "Details4";
                        readonly additional_info5: "Details5";
                        readonly additional_info6: "Details6";
                        readonly additional_info7: "Details7";
                        readonly additional_info8: "Details8";
                        readonly additional_info9: "Details9";
                        readonly additional_info10: "Details10";
                    };
                    readonly ru: "https://www.merchanturl.com/response.jsp";
                    readonly txn_process_type: "3ds";
                    readonly bankid: "456";
                    readonly itemcode: "VDDIRECT";
                    readonly auth_status: "0002";
                    readonly transaction_error_code: "TRP0000";
                    readonly transaction_error_desc: "Transaction Pending";
                    readonly transaction_error_type: "pending";
                    readonly payment_method_type: "card";
                    readonly card: {
                        readonly masked_value: "xxxxxxxxxxxx0000";
                        readonly type: "DEBIT";
                        readonly card_end: "0000";
                        readonly network: "VISA";
                        readonly issuer: "SBI";
                    };
                    readonly next_step: "3ds2_challenge";
                    readonly links: readonly [{
                        readonly href: "https://www.issueurl.com/page.jsp";
                        readonly rel: "redirect";
                        readonly method: "post";
                        readonly parameters: {
                            readonly creq: "eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZWVEU1NlcnZlclRyYW5zSUQiOiJlZjU3OTMzYy04YmM4LTQ3YTEtYjFlNC04ZDE4NjM3ZTM2YzYiLCJhY3NUcmFuc0lEIjoiMDViYjAwZGItY2U0Ni00ODBiLWEyNWItZjJhNWU5YmMxOGJlIiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjA1In0=";
                        };
                    }];
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly transactionid: {
                    readonly title: "transactionid";
                    readonly "x-stoplight": {
                        readonly id: "uqizgn6tyoqhg";
                    };
                    readonly type: "string";
                    readonly description: "Unique transactionid created by BillDesk ";
                    readonly pattern: "^[A-Za-z0-9]{14,35}$";
                    readonly examples: readonly ["U4560001099939"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly transaction_date: {
                    readonly title: "transaction_date";
                    readonly "x-stoplight": {
                        readonly id: "d0ekw0quxfwwu";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk transaction date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                    readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly surcharge: {
                    readonly title: "surcharge";
                    readonly "x-stoplight": {
                        readonly id: "u8bi4pr2xista";
                    };
                    readonly type: "string";
                    readonly description: "Customer surcharge in two decimals applied to the transaction amount, if any";
                };
                readonly discount: {
                    readonly title: "discount";
                    readonly "x-stoplight": {
                        readonly id: "0dgp8etm5709j";
                    };
                    readonly type: "string";
                    readonly description: "Customer discount in two decimals applied to the transaction amount, if any";
                };
                readonly charge_amount: {
                    readonly title: "charge_amount";
                    readonly "x-stoplight": {
                        readonly id: "m2z4sf48a8a5w";
                    };
                    readonly type: "string";
                    readonly description: "Total charge to the customer";
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly ru: {
                    readonly title: "return URL";
                    readonly "x-stoplight": {
                        readonly id: "2nnmkccdq26ck";
                    };
                    readonly type: "string";
                    readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                    readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                    readonly examples: readonly ["https://www.merchant.com"];
                };
                readonly txn_process_type: {
                    readonly title: "txn_process_type";
                    readonly "x-stoplight": {
                        readonly id: "lyz1n731cb596";
                    };
                    readonly type: "string";
                    readonly description: "Indicates transaction processing type, will be the following values:\nAFA payment\n•\tcard - 3ds or y3ds or 3ds_redirect\n•\tupi – collect, qr or intent\n•\tnetbanking – nb\n•\teft - offline\nRecurring payment\n•\tcard, upi, bankaccount – si\n\n`y3ds` `3ds` `collect` `intent` `qr` `nb` `eft` `si`";
                    readonly enum: readonly ["y3ds", "3ds", "collect", "intent", "qr", "nb", "eft", "si"];
                    readonly examples: readonly ["y3ds"];
                };
                readonly bankid: {
                    readonly title: "bankid";
                    readonly "x-stoplight": {
                        readonly id: "gf7ntync4cj73";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly examples: readonly ["1HM"];
                };
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly auth_status: {
                    readonly title: "auth_status";
                    readonly "x-stoplight": {
                        readonly id: "35i21snltcrdq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the authorization status of the transaction with the following possible values:\n•\t0300 - transaction is successful\n•\t0002 - transaction is pending for authorization\n•\t0399 - transaction failed\n\n`0300` `0002` `0399`";
                    readonly enum: readonly ["0300", "0002", "0399"];
                };
                readonly transaction_error_code: {
                    readonly title: "error_code";
                    readonly "x-stoplight": {
                        readonly id: "2grhtze0qf6ob";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error code for the response";
                };
                readonly transaction_error_desc: {
                    readonly title: "error_desc";
                    readonly "x-stoplight": {
                        readonly id: "uyor3loffwtew";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error description for the response";
                };
                readonly transaction_error_type: {
                    readonly title: "error_type";
                    readonly "x-stoplight": {
                        readonly id: "snpogojwqc0aq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error type for the response";
                };
                readonly payment_method_type: {
                    readonly title: "payment_method_type";
                    readonly "x-stoplight": {
                        readonly id: "kklghqguq1r3q";
                    };
                    readonly type: "string";
                    readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.\n\n`card` `netbanking` `upi` `eft` `cardless` `bankaccount`";
                    readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                };
                readonly next_step: {
                    readonly title: "next_step";
                    readonly "x-stoplight": {
                        readonly id: "ayox9qr52qx6o";
                    };
                    readonly type: "string";
                    readonly description: "Refers to the action to be taken by the merchant, for eg. redirect or capture_otp\n\n`redirect` `capture_otp` `3ds2_challenge` `3ds2_frictionless`";
                    readonly enum: readonly ["redirect", "capture_otp", "3ds2_challenge", "3ds2_frictionless"];
                };
                readonly card: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly masked_value: "xxxxxxxxxxxx8556";
                            readonly type: "CREDIT";
                            readonly card_end: "8556";
                            readonly network: "VISA";
                            readonly issuer: "HDFC Bank";
                            readonly cardaccountid: "CA03E63F000027391234";
                            readonly coft_consent: "true";
                            readonly cardaccount: {
                                readonly objectid: "cardaccount";
                                readonly mercid: "BDMERCID";
                                readonly customer_refid: "TST1305202312260002";
                                readonly cardaccountid: "CA026D01000027391234";
                                readonly orderid: "TXN1305202312260002";
                                readonly masked_value: "xxxxxxxxxxxx8556";
                                readonly holder_name: "NA";
                                readonly issuer: "HDFC BANK";
                                readonly network: "VISA";
                                readonly status: "ACTIVE";
                                readonly coft_consent: "true";
                                readonly createdon: "2023-05-13T12:28:41+05:30";
                                readonly network_token: {
                                    readonly token_ref_no: "55933247caa42c4842c012bb81641234";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2025";
                                    readonly status: "ACTIVE";
                                    readonly createdon: "2023-05-13T12:28:41+05:30";
                                };
                            };
                        };
                    };
                    readonly properties: {
                        readonly masked_value: {
                            readonly title: "masked_value";
                            readonly "x-stoplight": {
                                readonly id: "r3wddilt5cyy4";
                            };
                            readonly type: "string";
                            readonly description: "Masked card number, with the last four digits";
                            readonly examples: readonly ["xxxxxxxxxxxx1001"];
                        };
                        readonly type: {
                            readonly title: "card_type";
                            readonly "x-stoplight": {
                                readonly id: "r4tyk0ee6k6u5";
                            };
                            readonly type: "string";
                            readonly description: "Card product type, takes the following values - debit, credit or prepaid";
                            readonly examples: readonly ["debit, credit, prepaid"];
                        };
                        readonly card_end: {
                            readonly type: "string";
                        };
                        readonly network: {
                            readonly title: "card_network";
                            readonly "x-stoplight": {
                                readonly id: "fmhnjhdrk4ngb";
                            };
                            readonly type: "string";
                            readonly description: "Card Network";
                            readonly examples: readonly ["VISA, MASTER"];
                        };
                        readonly issuer: {
                            readonly title: "card_issuer";
                            readonly "x-stoplight": {
                                readonly id: "tm5adiwnqv7q0";
                            };
                            readonly type: "string";
                            readonly description: "Card issuer";
                        };
                        readonly cardaccountid: {
                            readonly title: "cardaccountid";
                            readonly "x-stoplight": {
                                readonly id: "12f6yszzh3x5y";
                            };
                            readonly type: "string";
                            readonly description: "Unique ID created by BillDesk for the combination of card number, mercid and customer_refid";
                            readonly pattern: "^[A-Za-z0-9]{1,35}$";
                            readonly examples: readonly ["CA0AAEF9000000000123"];
                        };
                        readonly coft_consent: {
                            readonly type: "string";
                        };
                        readonly cardaccount: {
                            readonly type: "object";
                            readonly properties: {
                                readonly objectid: {
                                    readonly title: "objectid";
                                    readonly "x-stoplight": {
                                        readonly id: "bbwm8bhhbqd4r";
                                    };
                                    readonly type: "string";
                                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                                };
                                readonly mercid: {
                                    readonly title: "mercid";
                                    readonly "x-stoplight": {
                                        readonly id: "43ns25lu1fyuc";
                                    };
                                    readonly type: "string";
                                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                                    readonly examples: readonly ["BDMERCID"];
                                };
                                readonly customer_refid: {
                                    readonly title: "customer_refid";
                                    readonly "x-stoplight": {
                                        readonly id: "mpmq18zbl4x12";
                                    };
                                    readonly type: "string";
                                    readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer\nRequired for mandate and tokenization";
                                    readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                                    readonly examples: readonly ["CSREF00001"];
                                };
                                readonly cardaccountid: {
                                    readonly type: "string";
                                };
                                readonly orderid: {
                                    readonly title: "orderid";
                                    readonly "x-stoplight": {
                                        readonly id: "lmwrwf7xn6wq8";
                                    };
                                    readonly type: "string";
                                    readonly description: "Unique ID generated by the merchant for each request";
                                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                                    readonly examples: readonly ["TEST0000009005"];
                                };
                                readonly masked_value: {
                                    readonly type: "string";
                                };
                                readonly holder_name: {
                                    readonly title: "holder_name";
                                    readonly "x-stoplight": {
                                        readonly id: "azsrpizyvmymk";
                                    };
                                    readonly type: "string";
                                    readonly description: "Cardholder name";
                                };
                                readonly cardaccount_status: {
                                    readonly type: "string";
                                };
                                readonly createdon: {
                                    readonly type: "string";
                                };
                                readonly network_token: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly token_ref_no: {
                                            readonly type: "string";
                                        };
                                        readonly token_expiry_month: {
                                            readonly type: "string";
                                        };
                                        readonly token_expiry_year: {
                                            readonly type: "string";
                                        };
                                        readonly status: {
                                            readonly type: "string";
                                        };
                                        readonly createdon: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly cardaccount_error_code: {
                                    readonly title: "error_code";
                                    readonly "x-stoplight": {
                                        readonly id: "2grhtze0qf6ob";
                                    };
                                    readonly type: "string";
                                    readonly description: "Represents the error code for the response";
                                };
                                readonly cardaccount_error_type: {
                                    readonly title: "error_type";
                                    readonly "x-stoplight": {
                                        readonly id: "snpogojwqc0aq";
                                    };
                                    readonly type: "string";
                                    readonly description: "Represents the error type for the response";
                                };
                                readonly cardaccount_error_desc: {
                                    readonly title: "error_desc";
                                    readonly "x-stoplight": {
                                        readonly id: "uyor3loffwtew";
                                    };
                                    readonly type: "string";
                                    readonly description: "Represents the error description for the response";
                                };
                            };
                        };
                    };
                    readonly title: "";
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
                readonly links: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "7t5udyb6ilh37";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly links: readonly [{
                                readonly href: "https://wwww.issuerurl.com/somepage";
                                readonly rel: "redirect";
                                readonly method: "post";
                                readonly parameters: {
                                    readonly creq: "eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZWVEU1NlcnZlclRyYW5zSUQiOiIzYjFlYmQ5NC04NTZhLTRlYjEtYTJlMS00MWZkNTdjZGFkZjAiLCJhY3NUcmFuc0lEIjoiOGMzMzk3NTItMjNmMS00NmZlLThmNzEtMzAwZjAyMzY0NjcxIiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjA1In0=";
                                };
                            }];
                        };
                    };
                    readonly description: "Associated links with the object, and contains the issuer URL that will be provided in the redirect authentication workflow";
                    readonly title: "links";
                    readonly properties: {
                        readonly links: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly href: {
                                        readonly type: "string";
                                        readonly description: "Issuer response URL";
                                    };
                                    readonly rel: {
                                        readonly type: "string";
                                        readonly description: "Fixed value as redirect";
                                    };
                                    readonly method: {
                                        readonly type: "string";
                                        readonly enum: readonly ["POST"];
                                        readonly description: "`POST`";
                                    };
                                    readonly parameters: {
                                        readonly description: "Parameters that are used to redirect the customer to the issuer URL";
                                        readonly type: "object";
                                        readonly "x-examples": {
                                            readonly "Example 1": {
                                                readonly tranid: "973712065583009734440001099962";
                                                readonly AccuCardholderId: "90926094409";
                                                readonly AccuReturnURL: "https://www.merchanturl.com/response.jsp";
                                                readonly session: "U4440001099962";
                                                readonly AccuGuid: "15e66a3b-956e-42f8-84d4-859e3e8c9fed";
                                                readonly TermUrl: "https://www.merchanturl.com/response.jsp";
                                                readonly AccuRequestId: "YjIxM2ZiZGUyMGY2MmNjZWE5YWQ1NGE5OGNiZDUyZjkyYThlMDFiYjFkMTY1Yjc0ZTI4NTgxNDA1MGRiNzE0Ng==";
                                                readonly cardend: "4938";
                                            };
                                        };
                                        readonly title: "parameters";
                                        readonly properties: {
                                            readonly creq: {
                                                readonly type: "string";
                                                readonly description: "Challenge request message or payment message for 3ds2.0 protocol authentication";
                                            };
                                            readonly bdcreq: {
                                                readonly type: "string";
                                                readonly description: "Challenge request message or payment message for \n3ds2.0 protocol authentication (Threeds method url flow)";
                                            };
                                            readonly tranid: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuCardholderId: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuReturnURL: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly session: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuGuid: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly TermUrl: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly AccuRequestId: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                            readonly cardend: {
                                                readonly type: "string";
                                                readonly description: "Payment parameter for rupay redirect flow";
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                readonly avs: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly bankaccount: readonly [{
                                readonly number: "xxxxxxxxx5566";
                                readonly ifsc: "IDBK10000002";
                                readonly name: "John Doe";
                            }, {
                                readonly number: "xxxxxxxxx5567";
                                readonly ifsc: "IDBK10000002";
                                readonly name: "John Doe";
                            }];
                            readonly account_matched: "true";
                            readonly name_matched: "true";
                        };
                    };
                    readonly properties: {
                        readonly bankaccount: {
                            readonly type: "array";
                            readonly description: "Details of the bank account";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly number: {
                                        readonly title: "bankacc_number";
                                        readonly "x-stoplight": {
                                            readonly id: "9nwo0pwlz0qos";
                                        };
                                        readonly type: "string";
                                        readonly description: "Bank account number";
                                        readonly pattern: "^\\\\d{9,18}$";
                                        readonly examples: readonly ["12233445566"];
                                    };
                                    readonly ifsc: {
                                        readonly title: "IFSC";
                                        readonly "x-stoplight": {
                                            readonly id: "grn65kr3i0pk0";
                                        };
                                        readonly type: "string";
                                        readonly description: "IFSC of the bank account number";
                                        readonly pattern: "^[A-Za-z]{4}[a-zA-Z0-9]{7}$";
                                        readonly examples: readonly ["IDBK10000002"];
                                    };
                                    readonly name: {
                                        readonly title: "bankaccount_holder_name";
                                        readonly "x-stoplight": {
                                            readonly id: "jedjceugzit8g";
                                        };
                                        readonly type: "string";
                                        readonly description: "Name of the bank account holder";
                                        readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                                        readonly examples: readonly ["John Doe"];
                                    };
                                };
                            };
                        };
                        readonly account_matched: {
                            readonly type: "string";
                            readonly description: "Boolean value (true or false) that indicates the status of account matching\n\n`true` `false`";
                            readonly enum: readonly ["true", "false"];
                        };
                        readonly name_matched: {
                            readonly type: "string";
                            readonly description: "Boolean value (true or false) that indicates the status of name matching\n\n`true` `false`";
                            readonly enum: readonly ["true", "false"];
                        };
                    };
                    readonly description: "";
                };
                readonly mandate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly objectid: {
                            readonly type: "string";
                        };
                        readonly mercid: {
                            readonly type: "string";
                        };
                        readonly customer_refid: {
                            readonly type: "string";
                        };
                        readonly subscription_refid: {
                            readonly type: "string";
                        };
                        readonly subscription_desc: {
                            readonly type: "string";
                        };
                        readonly amount: {
                            readonly type: "string";
                        };
                        readonly amount_type: {
                            readonly type: "string";
                        };
                        readonly start_date: {
                            readonly type: "string";
                        };
                        readonly end_date: {
                            readonly type: "string";
                        };
                        readonly frequency: {
                            readonly type: "string";
                        };
                        readonly payment_method_type: {
                            readonly type: "string";
                        };
                        readonly currency: {
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly type: "string";
                        };
                        readonly mandateid: {
                            readonly type: "string";
                        };
                        readonly createdon: {
                            readonly type: "string";
                        };
                        readonly verification_error_code: {
                            readonly type: "string";
                        };
                        readonly verification_error_type: {
                            readonly type: "string";
                        };
                        readonly verification_error_desc: {
                            readonly type: "string";
                        };
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly objectid: "mandate";
                            readonly mercid: "BDMERCID";
                            readonly customer_refid: "CUSTREF00A00011";
                            readonly subscription_refid: "SUBREF00A00011";
                            readonly subscription_desc: "Family Plan";
                            readonly amount: "1500.00";
                            readonly amount_type: "maximum";
                            readonly start_date: "2021-05-16";
                            readonly end_date: "2029-10-22";
                            readonly frequency: "adho";
                            readonly payment_method_type: "card";
                            readonly currency: "356";
                            readonly status: "pending";
                            readonly mandateid: "MA0DDD00050243";
                            readonly createdon: "2021-05-16T18:23:11+05:30";
                            readonly verification_error_code: "TRS0000";
                            readonly verification_error_type: "success";
                            readonly verification_error_desc: "Transaction Successful";
                        };
                    };
                };
                readonly upi: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly upi: {
                                readonly vpa: "billdesk@upi";
                                readonly masked_vpa: "xxxxxx@upi";
                            };
                        };
                    };
                    readonly title: "upi-response";
                    readonly description: "Response of upi object in case of upi collect flow";
                    readonly properties: {
                        readonly upi: {
                            readonly type: "object";
                            readonly properties: {
                                readonly vpa: {
                                    readonly type: "string";
                                    readonly description: "unmasked value of vpa";
                                };
                                readonly masked_vpa: {
                                    readonly type: "string";
                                    readonly description: "masked value of vpa";
                                };
                            };
                        };
                    };
                };
                readonly payment_category: {
                    readonly title: "payment_category";
                    readonly "x-stoplight": {
                        readonly id: "epd66eokga23s";
                    };
                    readonly type: "string";
                    readonly description: "Payment Category Code, defines the transaction belonging to the payment mode.\n• 00 - Card Gateway\n• 01 - Netbanking\n• 02 - Credit card\n• 03 - Debit card\n• 04 - Cash card\n• 05 - Mobile wallet\n• 10 - UPI\n• 11 - Bharat QR\n• 12 - Loan EMI\n• 13 - NEFT\n• 18 - UPI Credit\n• 19 - ENACH\n• 20 - CBDC\n• 21 - UPI Prepaid Wallet\n• 22 - UPI Credit Line";
                    readonly examples: readonly ["18"];
                };
                readonly me_ref_id: {
                    readonly title: "me_ref_id";
                    readonly "x-stoplight": {
                        readonly id: "5gfw31bjgpf6x";
                    };
                    readonly type: "string";
                    readonly description: "Unique identifier for a merchant, defined by the acquiring bank as a 6 digit code";
                    readonly examples: readonly ["545963"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ModifyMandateToken: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMONITOR";
                readonly mandateid: "MA242A00269906";
                readonly action: "modify";
                readonly mandate_edit: {
                    readonly amount: "10.00";
                    readonly frequency: "mnth";
                    readonly amount_type: "fixed";
                    readonly end_date: "2023-12-28";
                };
                readonly ru: "https://merchant.com/web";
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly mandateid: {
                readonly title: "mandateid";
                readonly "x-stoplight": {
                    readonly id: "joq1b0hwy6hce";
                };
                readonly type: "string";
                readonly description: "Unique mandateid created by BillDesk";
                readonly pattern: "^[A-Za-z0-9]{1,20}$";
                readonly examples: readonly ["MA19E400049927"];
            };
            readonly action: {
                readonly type: "string";
                readonly description: "Attribute to specify if the mandate has to be edited or deleted";
                readonly enum: readonly ["modify", "delete"];
                readonly examples: readonly ["modify"];
            };
            readonly mandate_edit: {
                readonly type: "object";
                readonly description: "Required if action= modify";
                readonly properties: {
                    readonly amount: {
                        readonly title: "subscription_amount";
                        readonly "x-stoplight": {
                            readonly id: "7j61bmv2v1u41";
                        };
                        readonly type: "string";
                        readonly description: "Subscription amount in two decimals, eg. 2400.00";
                        readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                        readonly examples: readonly ["2400.00"];
                    };
                    readonly frequency: {
                        readonly title: "frequency";
                        readonly "x-stoplight": {
                            readonly id: "xrmygt1ddb1b6";
                        };
                        readonly type: "string";
                        readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n•week - weekly \n•mnth - monthly\n•bimn – bi-monthly\n•qurt - quarterly\n•bian – bi-annually\n•year - yearly\n•adho – adhoc\n";
                        readonly enum: readonly ["week", "mnth", "bimn", "qurt", "bian", "year", "adho"];
                        readonly examples: readonly ["mnth"];
                    };
                    readonly amount_type: {
                        readonly title: "amount_type";
                        readonly "x-stoplight": {
                            readonly id: "o7dqaslkupvxa";
                        };
                        readonly type: "string";
                        readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n";
                        readonly enum: readonly ["maximum", "fixed"];
                        readonly examples: readonly ["fixed"];
                    };
                    readonly end_date: {
                        readonly title: "end_date";
                        readonly "x-stoplight": {
                            readonly id: "uz968g6golwjt";
                        };
                        readonly type: "string";
                        readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                        readonly format: "date";
                        readonly examples: readonly ["2059-12-31"];
                    };
                };
            };
            readonly ru: {
                readonly title: "return URL";
                readonly "x-stoplight": {
                    readonly id: "2nnmkccdq26ck";
                };
                readonly type: "string";
                readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                readonly examples: readonly ["https://www.merchant.com"];
            };
        };
        readonly required: readonly ["mercid", "mandateid", "action", "ru"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "mandate_token";
                    readonly mandate_tokenid: "NA106900386835";
                    readonly mandateid: "MA242A00269906";
                    readonly mercid: "BDMONITOR";
                    readonly customer_refid: "cusntrfdm";
                    readonly subscription_refid: "Sub9rttfhj78t";
                    readonly subscription_desc: "UAT Tefsting";
                    readonly start_date: "2023-11-27";
                    readonly end_date: "2026-12-04";
                    readonly amount: "50.00";
                    readonly amount_type: "maximum";
                    readonly currency: "356";
                    readonly frequency: "year";
                    readonly createdon: "2023-11-28T11:33:08+05:30";
                    readonly ru: "https://merchant.com/web";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "NA";
                        readonly additional_info4: "NA";
                        readonly additional_info5: "NA";
                        readonly additional_info6: "NA";
                        readonly additional_info7: "NA";
                        readonly additional_info8: "NA";
                        readonly additional_info9: "NA";
                        readonly additional_info10: "NA";
                    };
                    readonly customer: {};
                    readonly device: {
                        readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                        readonly init_channel: "internet";
                        readonly ip: "17.233.107.92";
                        readonly user_agent: "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:51.0) Gecko/20100101Firefox/51.0";
                        readonly accept_header: "text/html";
                    };
                    readonly status: "initiated";
                    readonly recurrence_rule: "on";
                    readonly debit_day: "6";
                    readonly action: "modify";
                    readonly payment_method_type: "upi";
                    readonly mandate_edit: {
                        readonly end_date: "2023-12-28";
                        readonly frequency: "mnth";
                        readonly amount: "10.00";
                        readonly amount_type: "fixed";
                    };
                    readonly next_step: "redirect";
                    readonly links: readonly [{
                        readonly href: "https://pguat.billdesk.io/pgsi/v1_2/mandates/token/initiate";
                        readonly rel: "self";
                        readonly method: "POST";
                        readonly parameters: any;
                        readonly valid_date: any;
                        readonly headers: any;
                    }, {
                        readonly href: "https://pguatweb.billdesk.io/pgtxnsimulator/v1_2/embeddedsdk";
                        readonly rel: "redirect";
                        readonly method: "POST";
                        readonly parameters: {
                            readonly mercid: "BDMONITOR";
                            readonly mandate_tokenid: "NA106900386835";
                            readonly rdata: "{hsm:QUVTX1VBVDE=}1810E301DC2226B7F9BA7306DDBB836CEC6C7965AE7EB64FAE98BB73CAB238EB19FA6C6BB5705B059204E69994A60A2A699AF95";
                        };
                        readonly valid_date: "2023-11-28T12:03:08+05:30";
                        readonly headers: {
                            readonly authorization: "OToken 3E6DCE2B15AC2ED1CFBFCAFA43600A084678AB3593E267E6831EF77D9E595377E8AF9E48BCD36AD32DEF7D44DA16085CB98E2C9CD797C8F00C496077F159E3457F8AC2AFEBA53D9AAE0DD1E04A9EA21F26325DC17384086F7AA79F17EFE7DFC4A4EECD9CAA44345F791D6BBC58BF03B5B8A7F9E806392AD02BC38C06BA4CFC479A6FD9E83918F71162FD8D7A06A317B3419B6EEC8253D4064.4145535F55415431";
                        };
                    }];
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly mandate_tokenid: {
                    readonly title: "mandate_tokenid";
                    readonly "x-stoplight": {
                        readonly id: "169b004872de3";
                    };
                    readonly type: "string";
                    readonly description: "Unique value generated by BillDesk for each mandate_token created by the merchant";
                };
                readonly mandateid: {
                    readonly title: "mandateid";
                    readonly "x-stoplight": {
                        readonly id: "joq1b0hwy6hce";
                    };
                    readonly type: "string";
                    readonly description: "Unique mandateid created by BillDesk";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["MA19E400049927"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly customer_refid: {
                    readonly title: "customer_refid";
                    readonly "x-stoplight": {
                        readonly id: "mpmq18zbl4x12";
                    };
                    readonly type: "string";
                    readonly description: "Unique reference of the customer in the merchant system, and can be linked to different subscriptions of the same customer\nRequired for mandate and tokenization";
                    readonly pattern: "^[A-Za-z0-9\\\\_\\\\:\\\\-]{1,80}$";
                    readonly examples: readonly ["CSREF00001"];
                };
                readonly subscription_refid: {
                    readonly title: "subscription_refid";
                    readonly "x-stoplight": {
                        readonly id: "0c9vc4zqx4a8c";
                    };
                    readonly type: "string";
                    readonly description: "Unique reference assigned by merchant for a subscription";
                    readonly examples: readonly ["SUBREF101"];
                };
                readonly subscription_desc: {
                    readonly title: "subscription_desc";
                    readonly "x-stoplight": {
                        readonly id: "lwkkeas7tgojy";
                    };
                    readonly type: "string";
                    readonly description: "Customer friendly description for the subscription, this narration is generally displayed to the customer at the issuer channel";
                    readonly examples: readonly ["Unlimited Plan"];
                };
                readonly start_date: {
                    readonly title: "start_date";
                    readonly "x-stoplight": {
                        readonly id: "v7tyy2tfnut1w";
                    };
                    readonly type: "string";
                    readonly description: "Subscription start date in yyyy-mm-dd format\nNote: Should be greater than or equal to current date (IST timezone). \nNote for UPI : Should be equal to mandate creation date for UPI. In UPI, an subsequent charge is created on a successful mandate. This includes the first charge as well along with mandate creation. Since first charge is done immediately, it is important that the mandate “start_date” should be today’s date \n";
                    readonly format: "date";
                    readonly examples: readonly ["2021-05-08"];
                };
                readonly end_date: {
                    readonly title: "end_date";
                    readonly "x-stoplight": {
                        readonly id: "uz968g6golwjt";
                    };
                    readonly type: "string";
                    readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                    readonly format: "date";
                    readonly examples: readonly ["2059-12-31"];
                };
                readonly amount: {
                    readonly title: "subscription_amount";
                    readonly "x-stoplight": {
                        readonly id: "7j61bmv2v1u41";
                    };
                    readonly type: "string";
                    readonly description: "Subscription amount in two decimals, eg. 2400.00";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly examples: readonly ["2400.00"];
                };
                readonly amount_type: {
                    readonly title: "amount_type";
                    readonly "x-stoplight": {
                        readonly id: "o7dqaslkupvxa";
                    };
                    readonly type: "string";
                    readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n\n\n`maximum` `fixed`";
                    readonly enum: readonly ["maximum", "fixed"];
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly frequency: {
                    readonly title: "frequency";
                    readonly "x-stoplight": {
                        readonly id: "xrmygt1ddb1b6";
                    };
                    readonly type: "string";
                    readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n•week - weekly \n•mnth - monthly\n•bimn – bi-monthly\n•qurt - quarterly\n•bian – bi-annually\n•year - yearly\n•adho – adhoc\n\n\n`week` `mnth` `bimn` `qurt` `bian` `year` `adho`";
                    readonly enum: readonly ["week", "mnth", "bimn", "qurt", "bian", "year", "adho"];
                };
                readonly createdon: {
                    readonly title: "createdon";
                    readonly "x-stoplight": {
                        readonly id: "k3ewegvbimz0g";
                    };
                    readonly type: "string";
                    readonly description: "object creation timestamp";
                    readonly format: "date-time";
                };
                readonly ru: {
                    readonly title: "return URL";
                    readonly "x-stoplight": {
                        readonly id: "2nnmkccdq26ck";
                    };
                    readonly type: "string";
                    readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                    readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                    readonly examples: readonly ["https://www.merchant.com"];
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
                readonly customer: {
                    readonly title: "customer";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly first_name: "John";
                            readonly last_name: "Doe";
                            readonly mobile: "9800000000";
                            readonly mobile_alt: "9800000000";
                            readonly email: "john.doe@somedomain.com";
                            readonly email_alt: "john.doe@somedomain.com";
                        };
                    };
                    readonly type: "object";
                    readonly properties: {
                        readonly first_name: {
                            readonly type: "string";
                            readonly description: "Customer’s First Name";
                            readonly examples: readonly ["John"];
                        };
                        readonly last_name: {
                            readonly type: "string";
                            readonly description: "Customer’s Last Name";
                            readonly examples: readonly ["Doe"];
                        };
                        readonly mobile: {
                            readonly type: "string";
                            readonly description: "Customer’s Mobile number";
                            readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                            readonly examples: readonly ["9022979988"];
                        };
                        readonly mobile_alt: {
                            readonly type: "string";
                            readonly description: "Customer’s Alternate Mobile number";
                            readonly pattern: "^[\\\\+]{0,1}[0-9]{5,15}$";
                            readonly examples: readonly ["9022979982"];
                        };
                        readonly email: {
                            readonly type: "string";
                            readonly description: "Customer’s Email address";
                            readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                            readonly examples: readonly ["abc@xyz.com"];
                        };
                        readonly email_alt: {
                            readonly type: "string";
                            readonly description: "Customer’s alternate Email Address";
                            readonly pattern: "^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9\\\\-]+)*(\\\\.[A-Za-z]{2,6})$";
                            readonly examples: readonly ["abc@xyz.com"];
                        };
                    };
                    readonly required: readonly ["first_name", "last_name"];
                };
                readonly device: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "bu2ij616i2uce";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly device: {
                                readonly init_channel: "internet";
                                readonly ip: "124.124.1.1";
                                readonly mac: "11-AC-58-21-1B-AA";
                                readonly imei: "990000112233445";
                                readonly user_agent: "Mozilla/5.0(WindowsNT10.0;WOW64;rv:51.0)Gecko/20100101Firefox/51.0";
                                readonly accept_header: "text/html";
                                readonly fingerprintid: "61b12c18b5d0cf901be34a23ca64bb19";
                                readonly browser_tz: "-330";
                                readonly browser_color_depth: "32";
                                readonly browser_java_enabled: "false";
                                readonly browser_screen_height: "601";
                                readonly browser_screen_width: "657";
                                readonly browser_language: "en-US";
                                readonly browser_javascript_enabled: "true";
                            };
                        };
                    };
                    readonly title: "Device";
                    readonly description: "Device";
                    readonly properties: {
                        readonly init_channel: {
                            readonly type: "string";
                            readonly description: "Initiating channel,accepted values are internet,app or kiosk\n\n`internet` `app` `kiosk`";
                            readonly enum: readonly ["internet", "app", "kiosk"];
                        };
                        readonly ip: {
                            readonly type: "string";
                            readonly description: "Actual end customer IP address is required to be passed";
                            readonly maxLength: 15;
                        };
                        readonly user_agent: {
                            readonly type: "string";
                            readonly description: "Exact content of the HTTP user-agent header\n\nNote: If the total length of the User-Agent sent by the browser exceeds 2048 characters, truncate the excess portion";
                            readonly pattern: "=^[A-Za-z0-9\\\\_\\\\:\\\\-\\\\,\\\\;\\\\/\\\\)\\\\(\\\\.\\\\s\\\\+\\\\[\\\\]\\\\=@]{10,255}$";
                            readonly examples: readonly ["Mozilla/5.0(WindowsNT10.0;WOW64;rv: 51.0)Gecko/20100101Firefox/51.0"];
                        };
                        readonly accept_header: {
                            readonly type: "string";
                            readonly description: "Customer browser accept header values";
                            readonly maxLength: 255;
                            readonly pattern: "^[0-9A-Za-z\\\\.\\\\+\\\\-\\\\/\\\\=\\\\*\\\\,\\\\;]{10,255}$";
                            readonly examples: readonly ["application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"];
                        };
                    };
                    readonly required: readonly ["init_channel", "ip", "user_agent", "accept_header"];
                };
                readonly status: {
                    readonly title: "subscription_status";
                    readonly "x-stoplight": {
                        readonly id: "y0fyz4zqhcknd";
                    };
                    readonly type: "string";
                    readonly description: "Represents the status of the mandate and depends upon the linked payment method. \n\nThe following values are possible:\ncard, upi\n•\tinitiated - mandate request has been initiated, and this status is applicable for the SDK based workflow\n•\tpending - mandate request has been initiated and the linked payment method is not yet validated\n•\tactive – linked payment method has been validated and recurring charges can be processed\n•\trejected - mandate has been rejected by the issuer or payment provider\n•\tdeleted - mandate has been deleted by the customer from the merchant channel\n•\tcancelled – mandate has been stopped by customer from the issuer channel\n•\tsuspended – mandate has been temporarily suspended by the issuer or payment provider\nbankaccount\n•\tpending – mandate request has been sent for account verification to NPCI\n•\tactive – mandate is active and recurring charges can be processed\n•\tdelete_initiated – mandate delete request is initiated by the customer or the merchant\n•\tdeleted – mandate is deleted after confirmation from NPCI\n•\trejected – mandate is rejected by NPCI\n";
                };
                readonly recurrence_rule: {
                    readonly title: "recurrence_rule";
                    readonly "x-stoplight": {
                        readonly id: "mzu48wk4tb3i8";
                    };
                    readonly type: "string";
                    readonly description: "Note: Required only where payment_method_type = upi. Default value : 'after'\n\n\n`after`";
                    readonly enum: readonly ["after"];
                };
                readonly debit_day: {
                    readonly title: "debit_day";
                    readonly "x-stoplight": {
                        readonly id: "ppp2ede7qx3fc";
                    };
                    readonly type: "string";
                    readonly description: "Required only where payment_method_type = upi. Default value \"1\" to be passed\n\n\n`1`";
                    readonly pattern: "^\\\\d{1,2}$";
                    readonly enum: readonly ["1"];
                    readonly examples: readonly ["1"];
                };
                readonly action: {
                    readonly type: "string";
                    readonly enum: readonly ["modify", "delete"];
                    readonly description: "`modify` `delete`";
                };
                readonly payment_method_type: {
                    readonly type: "string";
                };
                readonly mandate_edit: {
                    readonly type: "object";
                    readonly properties: {
                        readonly end_date: {
                            readonly title: "end_date";
                            readonly "x-stoplight": {
                                readonly id: "uz968g6golwjt";
                            };
                            readonly type: "string";
                            readonly description: "Subscription end date in yyyy-mm-dd format\nNote: Should be greater than current date (IST timezone). For mandates that are valid ‘until cancelled’ by the customer, end_date year could be 2099, and for upi, maximum duration allowed for a mandate is 30 years";
                            readonly format: "date";
                            readonly examples: readonly ["2059-12-31"];
                        };
                        readonly frequency: {
                            readonly title: "frequency";
                            readonly "x-stoplight": {
                                readonly id: "xrmygt1ddb1b6";
                            };
                            readonly type: "string";
                            readonly description: "Frequency at which the subscription debits will be processed, possible values are:\n•week - weekly \n•mnth - monthly\n•bimn – bi-monthly\n•qurt - quarterly\n•bian – bi-annually\n•year - yearly\n•adho – adhoc\n\n\n`week` `mnth` `bimn` `qurt` `bian` `year` `adho`";
                            readonly enum: readonly ["week", "mnth", "bimn", "qurt", "bian", "year", "adho"];
                        };
                        readonly amount: {
                            readonly title: "subscription_amount";
                            readonly "x-stoplight": {
                                readonly id: "7j61bmv2v1u41";
                            };
                            readonly type: "string";
                            readonly description: "Subscription amount in two decimals, eg. 2400.00";
                            readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                            readonly examples: readonly ["2400.00"];
                        };
                        readonly amount_type: {
                            readonly title: "amount_type";
                            readonly "x-stoplight": {
                                readonly id: "o7dqaslkupvxa";
                            };
                            readonly type: "string";
                            readonly description: "Indicates whether subscription amount is fixed or has a maximum limit. The following values are possible\n•\tmaximum - indicates the maximum amount that can be charged for the subscription\n•\tfixed – indicates the fixed amount to be charged for the subscription\nPlease note: For upi, only \"maximum\" is allowed. This is required to allow for token debit (small value transaction)\n\n\n`maximum` `fixed`";
                            readonly enum: readonly ["maximum", "fixed"];
                        };
                    };
                };
                readonly next_step: {
                    readonly title: "next_step";
                    readonly "x-stoplight": {
                        readonly id: "ayox9qr52qx6o";
                    };
                    readonly type: "string";
                    readonly description: "Refers to the action to be taken by the merchant, for eg. redirect or capture_otp\n\n`redirect` `capture_otp` `3ds2_challenge` `3ds2_frictionless`";
                    readonly enum: readonly ["redirect", "capture_otp", "3ds2_challenge", "3ds2_frictionless"];
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly method: {
                                readonly type: "string";
                            };
                            readonly parameters: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly mercid: {
                                        readonly title: "mercid";
                                        readonly "x-stoplight": {
                                            readonly id: "43ns25lu1fyuc";
                                        };
                                        readonly type: "string";
                                        readonly pattern: "^[A-Za-z0-9]{1,10}$";
                                        readonly description: "Unique identifier as defined by BillDesk for each merchant";
                                        readonly examples: readonly ["BDMERCID"];
                                    };
                                    readonly mandate_token_id: {
                                        readonly title: "mandate_tokenid";
                                        readonly "x-stoplight": {
                                            readonly id: "169b004872de3";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique value generated by BillDesk for each mandate_token created by the merchant";
                                    };
                                    readonly rdata: {
                                        readonly title: "rdata";
                                        readonly "x-stoplight": {
                                            readonly id: "lftrd03d82vvp";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique key generated by BillDesk for each request";
                                        readonly "x-examples": {};
                                    };
                                };
                            };
                            readonly valid_date: {
                                readonly type: "string";
                            };
                            readonly headers: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly authorization: {
                                        readonly title: "authorization";
                                        readonly "x-stoplight": {
                                            readonly id: "7j04iqr3yp3z3";
                                        };
                                        readonly type: "string";
                                        readonly description: "Unique value generated by BillDesk for each request";
                                    };
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PostPaymentsV12TransactionsGet: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMERCID";
                readonly orderid: "TST01092022004";
                readonly transactionid: "X4560477641875";
                readonly refund_details: "true";
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly orderid: {
                readonly title: "orderid";
                readonly "x-stoplight": {
                    readonly id: "lmwrwf7xn6wq8";
                };
                readonly type: "string";
                readonly description: "Unique ID generated by the merchant for each request";
                readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                readonly examples: readonly ["TEST0000009005"];
            };
            readonly transactionid: {
                readonly title: "transactionid";
                readonly "x-stoplight": {
                    readonly id: "uqizgn6tyoqhg";
                };
                readonly type: "string";
                readonly description: "Unique transactionid created by BillDesk ";
                readonly pattern: "^[A-Za-z0-9]{14,35}$";
                readonly examples: readonly ["U4560001099939"];
            };
            readonly refund_details: {
                readonly description: "Boolean value that should be provided as true to retrieve the refund information associated with transaction";
                readonly type: "string";
                readonly enum: readonly ["true"];
            };
        };
        readonly required: readonly ["mercid"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "transaction";
                    readonly transactionid: "X7890733918355";
                    readonly orderid: "TST01092022004";
                    readonly mercid: "BDMERCID";
                    readonly transaction_date: "2022-09-01T00:38:25+05:30";
                    readonly amount: "5.00";
                    readonly surcharge: "0.00";
                    readonly discount: "0.00";
                    readonly charge_amount: "5.00";
                    readonly currency: "356";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "Details3";
                        readonly additional_info4: "Details4";
                        readonly additional_info5: "Details5";
                        readonly additional_info6: "Details6";
                        readonly additional_info7: "Details7";
                        readonly additional_info8: "Details8";
                        readonly additional_info9: "Details9";
                        readonly additional_info10: "Details10";
                    };
                    readonly txn_process_type: "collect";
                    readonly bankid: "789";
                    readonly itemcode: "DIRECT";
                    readonly bank_ref_no: "224457208022";
                    readonly auth_status: "0300";
                    readonly transaction_error_code: "TRS0000";
                    readonly transaction_error_desc: "Transaction Successful";
                    readonly transaction_error_type: "success";
                    readonly payment_method_type: "upi";
                    readonly refundInfo: readonly [{
                        readonly refundid: "X78907339183552";
                        readonly refund_amount: "3.00";
                        readonly currency: "356";
                        readonly refund_date: "2022-09-01T00:40:06+05:30";
                        readonly merc_refund_ref_no: "REFUNDREF0003";
                        readonly refund_status: "0799";
                    }, {
                        readonly refundid: "X78907339183551";
                        readonly refund_amount: "2.00";
                        readonly currency: "356";
                        readonly refund_date: "2022-09-01T00:40:00+05:30";
                        readonly merc_refund_ref_no: "REFUNDREF0002";
                        readonly refund_status: "0799";
                    }];
                };
            };
            readonly properties: {
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly transactionid: {
                    readonly title: "transactionid";
                    readonly "x-stoplight": {
                        readonly id: "uqizgn6tyoqhg";
                    };
                    readonly type: "string";
                    readonly description: "Unique transactionid created by BillDesk ";
                    readonly pattern: "^[A-Za-z0-9]{14,35}$";
                    readonly examples: readonly ["U4560001099939"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly transaction_date: {
                    readonly title: "transaction_date";
                    readonly "x-stoplight": {
                        readonly id: "d0ekw0quxfwwu";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk transaction date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                    readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly surcharge: {
                    readonly title: "surcharge";
                    readonly "x-stoplight": {
                        readonly id: "u8bi4pr2xista";
                    };
                    readonly type: "string";
                    readonly description: "Customer surcharge in two decimals applied to the transaction amount, if any";
                };
                readonly discount: {
                    readonly title: "discount";
                    readonly "x-stoplight": {
                        readonly id: "0dgp8etm5709j";
                    };
                    readonly type: "string";
                    readonly description: "Customer discount in two decimals applied to the transaction amount, if any";
                };
                readonly charge_amount: {
                    readonly title: "charge_amount";
                    readonly "x-stoplight": {
                        readonly id: "m2z4sf48a8a5w";
                    };
                    readonly type: "string";
                    readonly description: "Total charge to the customer";
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly txn_process_type: {
                    readonly title: "txn_process_type";
                    readonly "x-stoplight": {
                        readonly id: "lyz1n731cb596";
                    };
                    readonly type: "string";
                    readonly description: "Indicates transaction processing type, will be the following values:\nAFA payment\n•\tcard - 3ds or y3ds or 3ds_redirect\n•\tupi – collect, qr or intent\n•\tnetbanking – nb\n•\teft - offline\nRecurring payment\n•\tcard, upi, bankaccount – si\n\n`y3ds` `3ds` `collect` `intent` `qr` `nb` `eft` `si`";
                    readonly enum: readonly ["y3ds", "3ds", "collect", "intent", "qr", "nb", "eft", "si"];
                    readonly examples: readonly ["y3ds"];
                };
                readonly bankid: {
                    readonly title: "bankid";
                    readonly "x-stoplight": {
                        readonly id: "gf7ntync4cj73";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly examples: readonly ["1HM"];
                };
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly bank_ref_no: {
                    readonly title: "bank_ref_no";
                    readonly "x-stoplight": {
                        readonly id: "tls0w5ung6eha";
                    };
                    readonly type: "string";
                    readonly description: "Transaction reference number generated by bank or acquirer ";
                };
                readonly auth_status: {
                    readonly title: "auth_status";
                    readonly "x-stoplight": {
                        readonly id: "35i21snltcrdq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the authorization status of the transaction with the following possible values:\n•\t0300 - transaction is successful\n•\t0002 - transaction is pending for authorization\n•\t0399 - transaction failed\n\n`0300` `0002` `0399`";
                    readonly enum: readonly ["0300", "0002", "0399"];
                };
                readonly transaction_error_code: {
                    readonly title: "error_code";
                    readonly "x-stoplight": {
                        readonly id: "2grhtze0qf6ob";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error code for the response";
                };
                readonly transaction_error_type: {
                    readonly title: "error_type";
                    readonly "x-stoplight": {
                        readonly id: "snpogojwqc0aq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error type for the response";
                };
                readonly transaction_error_desc: {
                    readonly title: "error_desc";
                    readonly "x-stoplight": {
                        readonly id: "uyor3loffwtew";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error description for the response";
                };
                readonly payment_method_type: {
                    readonly title: "payment_method_type";
                    readonly "x-stoplight": {
                        readonly id: "kklghqguq1r3q";
                    };
                    readonly type: "string";
                    readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.\n\n`card` `netbanking` `upi` `eft` `cardless` `bankaccount`";
                    readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                };
                readonly refundInfo: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "0a9154jkzqr2x";
                    };
                    readonly properties: {
                        readonly refundInfo: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly refundid: {
                                        readonly type: "string";
                                        readonly description: "Unique id generated by BillDesk for the refund";
                                    };
                                    readonly refund_amount: {
                                        readonly type: "string";
                                        readonly description: "Refund amount in two decimals";
                                    };
                                    readonly currency: {
                                        readonly title: "currency";
                                        readonly "x-stoplight": {
                                            readonly id: "1ehjh4f7vidz7";
                                        };
                                        readonly type: "string";
                                        readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                                    };
                                    readonly refund_date: {
                                        readonly type: "string";
                                        readonly description: "BillDesk refund date and time in YYYY-MM-DDThh:mm:ssTZD format";
                                    };
                                    readonly merc_refund_ref_no: {
                                        readonly type: "string";
                                        readonly description: "Unique reference number generated by the merchant for the refund request";
                                    };
                                    readonly refund_status: {
                                        readonly type: "string";
                                        readonly description: "Represents the refund status with the following values:\n•\t0799 – categorized as a refund, where the original transaction has been already settled \n•\t0699 – categorized as a cancellation, where the original transaction has not been settled\n";
                                    };
                                };
                            };
                        };
                    };
                    readonly description: "";
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
                readonly split_payment: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly split_payment: readonly [{
                                readonly mercid: "BDMERCID1";
                                readonly amount: "3000.00";
                            }, {
                                readonly mercid: "BDMERCID2";
                                readonly amount: "1000.00";
                            }];
                        };
                    };
                    readonly properties: {
                        readonly mercid: {
                            readonly type: "string";
                            readonly description: "Merchant ID provided by BillDesk where split payment amount will be settled.";
                            readonly pattern: "^[A-Za-z0-9]{1,10}$";
                            readonly examples: readonly ["BDMERCID"];
                        };
                        readonly amount: {
                            readonly type: "string";
                            readonly description: "Split Amount which is settled in the respective Split Merchant ID.";
                            readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                            readonly examples: readonly ["299.28"];
                        };
                    };
                    readonly description: "This object is applicable in case a merchant has opted to receive the settlement in multiple settlement accounts";
                    readonly title: "split_payment_request";
                };
                readonly payment_category: {
                    readonly title: "payment_category";
                    readonly "x-stoplight": {
                        readonly id: "epd66eokga23s";
                    };
                    readonly type: "string";
                    readonly description: "Payment Category Code, defines the transaction belonging to the payment mode.\n• 00 - Card Gateway\n• 01 - Netbanking\n• 02 - Credit card\n• 03 - Debit card\n• 04 - Cash card\n• 05 - Mobile wallet\n• 10 - UPI\n• 11 - Bharat QR\n• 12 - Loan EMI\n• 13 - NEFT\n• 18 - UPI Credit\n• 19 - ENACH\n• 20 - CBDC\n• 21 - UPI Prepaid Wallet\n• 22 - UPI Credit Line";
                    readonly examples: readonly ["18"];
                };
                readonly me_ref_id: {
                    readonly title: "me_ref_id";
                    readonly "x-stoplight": {
                        readonly id: "5gfw31bjgpf6x";
                    };
                    readonly type: "string";
                    readonly description: "Unique identifier for a merchant, defined by the acquiring bank as a 6 digit code";
                    readonly examples: readonly ["545963"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const RetrieveAuthentication: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMERCID";
                readonly authenticationid: "A4560000345048";
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly authenticationid: {
                readonly title: "authenticationid";
                readonly "x-stoplight": {
                    readonly id: "c1hskskz8e2iq";
                };
                readonly type: "string";
                readonly description: "Unique authenticationid created by BillDesk";
                readonly pattern: "^[a-zA-Z0-9]{14,35}$";
                readonly examples: readonly ["A1HM0000389872"];
            };
            readonly orderid: {
                readonly title: "orderid";
                readonly "x-stoplight": {
                    readonly id: "lmwrwf7xn6wq8";
                };
                readonly type: "string";
                readonly description: "Unique ID generated by the merchant for each request";
                readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                readonly examples: readonly ["TEST0000009005"];
            };
        };
        readonly required: readonly ["mercid"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly itemcode: "VDDIRECT";
                    readonly objectid: "authentication";
                    readonly authenticationid: "A4560000345048";
                    readonly authentication_date: "2022-03-27T10:33:01+05:30";
                    readonly amount: "2.00";
                    readonly currency: "356";
                    readonly mercid: "BDMERCID";
                    readonly bankid: "456";
                    readonly payment_method_type: "card";
                    readonly authentication_type: "redirect";
                    readonly authentication_status: "success";
                    readonly orderid: "27000000001";
                    readonly enrolled: "Y";
                    readonly eci: "05";
                    readonly eci_status: "Y";
                    readonly authentication_error_code: "AUS0000";
                    readonly authentication_error_type: "success";
                    readonly authentication_error_desc: "Authentication Successful";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "Details3";
                        readonly additional_info4: "Details4";
                        readonly additional_info5: "Details5";
                        readonly additional_info6: "Details6";
                        readonly additional_info7: "Details7";
                        readonly additional_info8: "Details8";
                        readonly additional_info9: "Details9";
                        readonly additional_info10: "Details10";
                    };
                    readonly card: {
                        readonly type: "DEBIT";
                        readonly card_end: "1234";
                        readonly network: "VISA";
                        readonly issuer: "ABC Bank";
                    };
                    readonly cavv: "MjcwMzIyQTQcfrtyMDAzNDUwNDg=";
                    readonly xid: "MjIwMzIxdtuhjAwMDAzNDUwNDg=";
                    readonly cavvAlgorithm: "2";
                };
            };
            readonly properties: {
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly authenticationid: {
                    readonly title: "authenticationid";
                    readonly "x-stoplight": {
                        readonly id: "c1hskskz8e2iq";
                    };
                    readonly type: "string";
                    readonly description: "Unique authenticationid created by BillDesk";
                    readonly pattern: "^[a-zA-Z0-9]{14,35}$";
                    readonly examples: readonly ["A1HM0000389872"];
                };
                readonly authentication_date: {
                    readonly title: "authentication_date";
                    readonly "x-stoplight": {
                        readonly id: "uz8duh7gras5w";
                    };
                    readonly type: "string";
                    readonly description: "Authentication date and time in YYYY-MM-DDThh:mm:ssTZD format";
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly bankid: {
                    readonly title: "bankid";
                    readonly "x-stoplight": {
                        readonly id: "gf7ntync4cj73";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly examples: readonly ["1HM"];
                };
                readonly payment_method_type: {
                    readonly title: "payment_method_type";
                    readonly "x-stoplight": {
                        readonly id: "kklghqguq1r3q";
                    };
                    readonly type: "string";
                    readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.\n\n`card` `netbanking` `upi` `eft` `cardless` `bankaccount`";
                    readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                };
                readonly authentication_type: {
                    readonly title: "authentication_type";
                    readonly "x-stoplight": {
                        readonly id: "c33ke2q5rl7ql";
                    };
                    readonly type: "string";
                    readonly description: "Represents the type of authentication initiated in the request, will be fixed value - 3ds2\n\n`3ds2`";
                    readonly enum: readonly ["3ds2"];
                    readonly examples: readonly ["3ds2"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly authentication_status: {
                    readonly title: "authentication_status";
                    readonly "x-stoplight": {
                        readonly id: "h2j1d7gkgfr54";
                    };
                    readonly type: "string";
                    readonly description: "Represents the status of the request – with possible values as \n•\tpending\n•\tsuccess\n•\tfailure\n\n`pending` `success` `failure`";
                    readonly enum: readonly ["pending", "success", "failure"];
                };
                readonly authentication_error_code: {
                    readonly title: "error_code";
                    readonly "x-stoplight": {
                        readonly id: "2grhtze0qf6ob";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error code for the response";
                };
                readonly authentication_error_type: {
                    readonly title: "error_type";
                    readonly "x-stoplight": {
                        readonly id: "snpogojwqc0aq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error type for the response";
                };
                readonly authentication_error_desc: {
                    readonly title: "error_desc";
                    readonly "x-stoplight": {
                        readonly id: "uyor3loffwtew";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error description for the response";
                };
                readonly card: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "n1nmwdiqy5hrc";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly type: "DEBIT";
                                readonly card_end: "1234";
                                readonly network: "VISA";
                                readonly issuer: "ABC Bank";
                            };
                        };
                    };
                    readonly properties: {
                        readonly type: {
                            readonly title: "card_type";
                            readonly "x-stoplight": {
                                readonly id: "r4tyk0ee6k6u5";
                            };
                            readonly type: "string";
                            readonly description: "Card product type, takes the following values - debit, credit or prepaid";
                            readonly examples: readonly ["debit, credit, prepaid"];
                        };
                        readonly masked_value: {
                            readonly title: "masked_value";
                            readonly "x-stoplight": {
                                readonly id: "r3wddilt5cyy4";
                            };
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \nNote: For an EMI transaction via network token, this attribute value is required for loan booking";
                            readonly examples: readonly ["xxxxxxxxxxxx1001"];
                        };
                        readonly network: {
                            readonly title: "card_network";
                            readonly "x-stoplight": {
                                readonly id: "fmhnjhdrk4ngb";
                            };
                            readonly type: "string";
                            readonly description: "Card network, for eg. visa";
                            readonly examples: readonly ["VISA, MASTER"];
                        };
                        readonly issuer: {
                            readonly title: "card_issuer";
                            readonly "x-stoplight": {
                                readonly id: "tm5adiwnqv7q0";
                            };
                            readonly type: "string";
                            readonly description: "Card issuer";
                        };
                    };
                };
                readonly eci: {
                    readonly title: "eci";
                    readonly "x-stoplight": {
                        readonly id: "jq2g7i098vu5j";
                    };
                    readonly type: "string";
                    readonly description: "Authentication ECI indicator, as per the 3ds protocol (for V, M, D, A cards)";
                };
                readonly cavv: {
                    readonly title: "cavv";
                    readonly "x-stoplight": {
                        readonly id: "72ehfi721p2mm";
                    };
                    readonly type: "string";
                    readonly description: "CAVV value generated by issuer (for V, M, D, A cards)";
                };
                readonly rupay_auth_ref_no: {
                    readonly title: "rupay_auth_ref_no";
                    readonly "x-stoplight": {
                        readonly id: "p2pdfeb2zd0g6";
                    };
                    readonly type: "string";
                    readonly description: "Refers to the specific transaction reference provided by NPCI (for R cards)";
                };
                readonly threeds_version: {
                    readonly title: "threeds_version";
                    readonly "x-stoplight": {
                        readonly id: "o8scvjfj8moas";
                    };
                    readonly type: "string";
                    readonly description: "Protocol of the 3ds2.0 version used for authentication\n\n\n`2.1.0` `2.2.0`";
                    readonly enum: readonly ["2.1.0", "2.2.0"];
                };
                readonly ds_transaction_id: {
                    readonly title: "ds_transaction_id";
                    readonly "x-stoplight": {
                        readonly id: "wceohqaji2zvf";
                    };
                    readonly type: "string";
                    readonly description: "Directory server transaction id for 3ds2.0";
                    readonly pattern: "^[0-9a-f]{8}[1-5][0-9a-f]{3}[0-9a-f]{12}$";
                    readonly examples: readonly ["9ae6259e-08b8-42bb97a2-48d8a1d2a690"];
                };
                readonly threeds_transaction_id: {
                    readonly title: "threeds_transaction_id";
                    readonly "x-stoplight": {
                        readonly id: "c54txyf8e8aqp";
                    };
                    readonly type: "string";
                    readonly description: "Threeds server transaction id";
                    readonly format: "uuid";
                    readonly examples: readonly ["4184a9f8-b0f3-47d2-91ec-bc9939080e32"];
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
            };
            readonly required: readonly ["mercid"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const RetrieveOrder: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly orderid: "TST01092022004";
                readonly mercid: "BDMERCID";
                readonly refund_details: "true";
            };
        };
        readonly properties: {
            readonly orderid: {
                readonly title: "orderid";
                readonly "x-stoplight": {
                    readonly id: "lmwrwf7xn6wq8";
                };
                readonly type: "string";
                readonly description: "Unique ID generated by the merchant for each request";
                readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                readonly examples: readonly ["TEST0000009005"];
            };
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly transactionid: {
                readonly title: "transactionid";
                readonly "x-stoplight": {
                    readonly id: "uqizgn6tyoqhg";
                };
                readonly type: "string";
                readonly description: "Unique transactionid created by BillDesk ";
                readonly pattern: "^[A-Za-z0-9]{14,35}$";
                readonly examples: readonly ["U4560001099939"];
            };
            readonly refund_details: {
                readonly type: "string";
                readonly description: "Refund information associated with the payment transaction. Merchants should pass this attribute in the request to ensure that the refund details [an array is returned if multiple partial refunds exist] are received in the response.\n\n⦁\ttrue for getting the refund details associated with the payment transaction.\n⦁\tfalse if refund details associated with the payment transaction is not required in the response.";
                readonly enum: readonly ["true", "false"];
                readonly examples: readonly ["true"];
            };
        };
        readonly required: readonly ["mercid"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "transaction";
                    readonly transactionid: "X7890733918355";
                    readonly orderid: "TST01092022004";
                    readonly mercid: "BDMERCID";
                    readonly transaction_date: "2022-09-01T00:38:25+05:30";
                    readonly amount: "5.00";
                    readonly surcharge: "0.00";
                    readonly discount: "0.00";
                    readonly charge_amount: "5.00";
                    readonly currency: "356";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "Details3";
                        readonly additional_info4: "Details4";
                        readonly additional_info5: "Details5";
                        readonly additional_info6: "Details6";
                        readonly additional_info7: "Details7";
                        readonly additional_info8: "Details8";
                        readonly additional_info9: "Details9";
                        readonly additional_info10: "Details10";
                    };
                    readonly txn_process_type: "collect";
                    readonly bankid: "789";
                    readonly itemcode: "DIRECT";
                    readonly bank_ref_no: "224457208022";
                    readonly auth_status: "0300";
                    readonly transaction_error_code: "TRS0000";
                    readonly transaction_error_desc: "Transaction Successful";
                    readonly transaction_error_type: "success";
                    readonly payment_method_type: "upi";
                    readonly refundInfo: readonly [{
                        readonly refundid: "X78907339183552";
                        readonly refund_amount: "3.00";
                        readonly currency: "356";
                        readonly refund_date: "2022-09-01T00:40:06+05:30";
                        readonly merc_refund_ref_no: "REFUNDREF0003";
                        readonly refund_status: "0799";
                    }, {
                        readonly refundid: "X78907339183551";
                        readonly refund_amount: "2.00";
                        readonly currency: "356";
                        readonly refund_date: "2022-09-01T00:40:00+05:30";
                        readonly merc_refund_ref_no: "REFUNDREF0002";
                        readonly refund_status: "0799";
                    }];
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly transactionid: {
                    readonly title: "transactionid";
                    readonly "x-stoplight": {
                        readonly id: "uqizgn6tyoqhg";
                    };
                    readonly type: "string";
                    readonly description: "Unique transactionid created by BillDesk ";
                    readonly pattern: "^[A-Za-z0-9]{14,35}$";
                    readonly examples: readonly ["U4560001099939"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly transaction_date: {
                    readonly title: "transaction_date";
                    readonly "x-stoplight": {
                        readonly id: "d0ekw0quxfwwu";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk transaction date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                    readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly surcharge: {
                    readonly title: "surcharge";
                    readonly "x-stoplight": {
                        readonly id: "u8bi4pr2xista";
                    };
                    readonly type: "string";
                    readonly description: "Customer surcharge in two decimals applied to the transaction amount, if any";
                };
                readonly discount: {
                    readonly title: "discount";
                    readonly "x-stoplight": {
                        readonly id: "0dgp8etm5709j";
                    };
                    readonly type: "string";
                    readonly description: "Customer discount in two decimals applied to the transaction amount, if any";
                };
                readonly charge_amount: {
                    readonly title: "charge_amount";
                    readonly "x-stoplight": {
                        readonly id: "m2z4sf48a8a5w";
                    };
                    readonly type: "string";
                    readonly description: "Total charge to the customer";
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly txn_process_type: {
                    readonly title: "txn_process_type";
                    readonly "x-stoplight": {
                        readonly id: "lyz1n731cb596";
                    };
                    readonly type: "string";
                    readonly description: "Indicates transaction processing type, will be the following values:\nAFA payment\n•\tcard - 3ds or y3ds or 3ds_redirect\n•\tupi – collect, qr or intent\n•\tnetbanking – nb\n•\teft - offline\nRecurring payment\n•\tcard, upi, bankaccount – si\n\n`y3ds` `3ds` `collect` `intent` `qr` `nb` `eft` `si`";
                    readonly enum: readonly ["y3ds", "3ds", "collect", "intent", "qr", "nb", "eft", "si"];
                    readonly examples: readonly ["y3ds"];
                };
                readonly bankid: {
                    readonly title: "bankid";
                    readonly "x-stoplight": {
                        readonly id: "gf7ntync4cj73";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly examples: readonly ["1HM"];
                };
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly bank_ref_no: {
                    readonly title: "bank_ref_no";
                    readonly "x-stoplight": {
                        readonly id: "tls0w5ung6eha";
                    };
                    readonly type: "string";
                    readonly description: "Transaction reference number generated by bank or acquirer ";
                };
                readonly auth_status: {
                    readonly title: "auth_status";
                    readonly "x-stoplight": {
                        readonly id: "35i21snltcrdq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the authorization status of the transaction with the following possible values:\n•\t0300 - transaction is successful\n•\t0002 - transaction is pending for authorization\n•\t0399 - transaction failed\n\n`0300` `0002` `0399`";
                    readonly enum: readonly ["0300", "0002", "0399"];
                };
                readonly transaction_error_code: {
                    readonly title: "error_code";
                    readonly "x-stoplight": {
                        readonly id: "2grhtze0qf6ob";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error code for the response";
                };
                readonly transaction_error_desc: {
                    readonly title: "error_desc";
                    readonly "x-stoplight": {
                        readonly id: "uyor3loffwtew";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error description for the response";
                };
                readonly transaction_error_type: {
                    readonly title: "error_type";
                    readonly "x-stoplight": {
                        readonly id: "snpogojwqc0aq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error type for the response";
                };
                readonly payment_method_type: {
                    readonly title: "payment_method_type";
                    readonly "x-stoplight": {
                        readonly id: "kklghqguq1r3q";
                    };
                    readonly type: "string";
                    readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.\n\n`card` `netbanking` `upi` `eft` `cardless` `bankaccount`";
                    readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                };
                readonly refundInfo: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "0a9154jkzqr2x";
                    };
                    readonly properties: {
                        readonly refundInfo: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly refundid: {
                                        readonly type: "string";
                                        readonly description: "Unique id generated by BillDesk for the refund";
                                    };
                                    readonly refund_amount: {
                                        readonly type: "string";
                                        readonly description: "Refund amount in two decimals";
                                    };
                                    readonly currency: {
                                        readonly title: "currency";
                                        readonly "x-stoplight": {
                                            readonly id: "1ehjh4f7vidz7";
                                        };
                                        readonly type: "string";
                                        readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                                    };
                                    readonly refund_date: {
                                        readonly type: "string";
                                        readonly description: "BillDesk refund date and time in YYYY-MM-DDThh:mm:ssTZD format";
                                    };
                                    readonly merc_refund_ref_no: {
                                        readonly type: "string";
                                        readonly description: "Unique reference number generated by the merchant for the refund request";
                                    };
                                    readonly refund_status: {
                                        readonly type: "string";
                                        readonly description: "Represents the refund status with the following values:\n•\t0799 – categorized as a refund, where the original transaction has been already settled \n•\t0699 – categorized as a cancellation, where the original transaction has not been settled\n";
                                    };
                                };
                            };
                        };
                    };
                    readonly description: "";
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const RetrieveRefund: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMERCID";
                readonly refundid: "X45604776418751";
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly refundid: {
                readonly type: "string";
                readonly description: "Unique refundid created by BillDesk for each refund request";
                readonly pattern: "^[A-Za-z0-9]{1,15}$";
                readonly examples: readonly ["X45604776418751"];
            };
            readonly merc_refund_ref_no: {
                readonly type: "string";
                readonly description: "Unique reference number created by the merchant for the refund request";
                readonly pattern: "^[A-Za-z0-9\\_\\:\\-]{1,100}$";
                readonly examples: readonly ["REFTS14RTEST001"];
            };
        };
        readonly required: readonly ["mercid"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "refund";
                    readonly refundid: "X45604776418751";
                    readonly transactionid: "X4560477641875";
                    readonly orderid: "ORDER202200000001";
                    readonly mercid: "BDMERCID";
                    readonly transaction_date: "2022-03-18T11:20:07+05:30";
                    readonly txn_amount: "2.00";
                    readonly refund_amount: "2.00";
                    readonly currency: "356";
                    readonly refund_date: "2022-03-20T21:27:47+05:30";
                    readonly merc_refund_ref_no: "REFTS1000004RTEST001";
                    readonly refund_status: "0799";
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly refundid: {
                    readonly type: "string";
                    readonly description: "Unique refundid created by BillDesk for each refund request";
                    readonly pattern: "^[A-Za-z0-9]{1,15}$";
                    readonly examples: readonly ["X45604776418751"];
                };
                readonly transactionid: {
                    readonly title: "transactionid";
                    readonly "x-stoplight": {
                        readonly id: "uqizgn6tyoqhg";
                    };
                    readonly type: "string";
                    readonly description: "Unique transactionid created by BillDesk ";
                    readonly pattern: "^[A-Za-z0-9]{14,35}$";
                    readonly examples: readonly ["U4560001099939"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly transaction_date: {
                    readonly title: "transaction_date";
                    readonly "x-stoplight": {
                        readonly id: "d0ekw0quxfwwu";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk transaction date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                    readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
                };
                readonly txn_amount: {
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Original transaction amount in two decimals";
                    readonly examples: readonly ["2400.00"];
                };
                readonly refund_amount: {
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Refund amount in two decimals";
                    readonly examples: readonly ["1100.00"];
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly refund_date: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly description: "BillDesk refund date and time in YYYY-MMDDThh:mm:ssTZD format";
                };
                readonly merc_refund_ref_no: {
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9\\_\\:\\-]{1,100}$";
                    readonly description: "Unique reference number created by the merchant for the refund request";
                    readonly examples: readonly ["REFTS14RTEST001"];
                };
                readonly refund_status: {
                    readonly type: "string";
                    readonly description: "Represents the refund status with the following values:\n•\t0799 – categorized as a refund, where the original transaction has been already settled \n•\t0699 – categorized as a cancellation, where the original transaction has not been settled\n\n`0699` `0799`";
                    readonly enum: readonly ["0699", "0799"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateTransaction: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly mercid: "BDMERCID";
                readonly transactionid: "X4560477641875";
                readonly response_parameters: {
                    readonly AccuResponseCode: "ACCU000";
                    readonly session: "X4440639244491";
                    readonly AccuGuid: "a13df076-5c82-4fbf-aa5c-be11e9847e9a";
                    readonly AccuRequestId: "MGI2ZTE2M2RjYzJjNTBhMDlkMzA1OTc2NmU3OTBjOTdjNjk3NjA5MDdmY2RlMDI1MTA1MDBjOTYyMzMyODNjNg==";
                };
                readonly payment_method_type: "card";
                readonly card: {
                    readonly number: "4242420000001234";
                    readonly expiry_month: "12";
                    readonly expiry_year: "2029";
                    readonly cvv: "123";
                    readonly holder_name: "John Doe";
                };
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly transactionid: {
                readonly title: "transactionid";
                readonly "x-stoplight": {
                    readonly id: "uqizgn6tyoqhg";
                };
                readonly type: "string";
                readonly description: "Unique transactionid created by BillDesk ";
                readonly pattern: "^[A-Za-z0-9]{14,35}$";
                readonly examples: readonly ["U4560001099939"];
            };
            readonly response_parameters: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly cres: "eJytmFmvo8iSgN/5Fa26j 1Y3qxdariMlO9hgsy8vIwyYfTGLWX7 94HP6VFXX1Ghujy7S0UmCzMiIzIgv0 nk0kjaKGD0KhjZ6O8pR1XyXA364Xvl 88vF+ivl/jvm6mfrze/W+TZS3g";
                        readonly AccuResponseCode: "ACCU000";
                        readonly session: "X4440639244491";
                        readonly AccuGuid: "a13df076-5c82-4fbf-aa5c-be11e9847e9a";
                        readonly AccuRequestId: "MGI2ZTE2M2RjYzJjNTBhMDlkMzA1OTc2NmU3OTBjOTdjNjk3NjA5MDdmY2RlMDI1MTA1MDBjOTYyMzMyODNjNg==";
                        readonly MD: "";
                        readonly Pares: "";
                    };
                };
                readonly properties: {
                    readonly cres: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be cres for 3ds 2.0 flow";
                        readonly examples: readonly ["eJytmFmvo8iSgN/5Fa26j 1Y3qxdariMlO9hgsy8vIwyYfTGLWX7 94HP6VFXX1Ghujy7S0UmCzMiIzIgv0 nk0kjaKGD0KhjZ6O8pR1XyXA364Xvl 88vF+ivl/jvm6mfrze/W+TZS3g"];
                    };
                    readonly AccuResponseCode: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["ACCU000 "];
                    };
                    readonly session: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["X4440639244491"];
                    };
                    readonly AccuGuid: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["a13df076-5c82-4fbf-aa5c-be11e9847e9a"];
                    };
                    readonly AccuRequestId: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["MGI2ZTE2M2RjYzJjNTBhMDlkMzA1OTc2NmU3OTBjOTdjNjk3NjA5MDdmY2RlMDI1MTA1MDBjOTYyMzMyODNjNg==\""];
                    };
                    readonly otp: {
                        readonly type: "string";
                        readonly description: "for a native authentication where next_step = capture_otp";
                    };
                    readonly TermUrl: {
                        readonly type: "string";
                        readonly description: "Payment parameter for rupay redirect flow";
                    };
                    readonly cardend: {
                        readonly type: "string";
                        readonly description: "Payment parameter for rupay redirect flow";
                    };
                };
            };
            readonly payment_method_type: {
                readonly title: "payment_method_type";
                readonly "x-stoplight": {
                    readonly id: "kklghqguq1r3q";
                };
                readonly type: "string";
                readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.";
                readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                readonly examples: readonly ["card"];
            };
            readonly card: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "1xxgnveu0ix3k";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly number: "4242420000001234";
                                readonly expiry_month: "12";
                                readonly expiry_year: "2029";
                                readonly holder_name: "John Doe";
                                readonly cvv: "123";
                                readonly tokenize: "true";
                                readonly coft_consent: "true";
                            };
                        };
                    };
                    readonly title: "Pay using card number - pan";
                    readonly properties: {
                        readonly number: {
                            readonly type: "string";
                            readonly pattern: "^[0-9]{16}$";
                            readonly description: "Card number";
                            readonly examples: readonly ["4242420000001234"];
                        };
                        readonly expiry_month: {
                            readonly type: "string";
                            readonly description: "Card expiry month in MM format";
                            readonly examples: readonly ["02"];
                        };
                        readonly expiry_year: {
                            readonly type: "string";
                            readonly description: "Card expiry year in YYYY format";
                            readonly examples: readonly ["2029"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly tokenize: {
                            readonly type: "string";
                            readonly enum: readonly ["true"];
                            readonly description: "If the card is required to be tokenized then, the value is true";
                        };
                        readonly coft_consent: {
                            readonly type: "string";
                            readonly enum: readonly ["true"];
                            readonly description: "Fixed value as true, confirming the card holder consent to tokenize the card";
                        };
                    };
                    readonly required: readonly ["number", "expiry_month", "expiry_year", "cvv"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "ze1cvmk9lawl5";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly network_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using network token";
                    readonly properties: {
                        readonly network_token: {
                            readonly type: "object";
                            readonly required: readonly ["token_value", "token_cryptogram", "token_expiry_month", "token_expiry_year"];
                            readonly properties: {
                                readonly token_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly token_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\/\\\\!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)\\\\{\\\\}_\\\\+\\\\=\\\\|:”;’,\\\\.~`\\\\-\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly token_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly token_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["network_token", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "605rgi2ucynyf";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly issuer_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using issuer token";
                    readonly properties: {
                        readonly issuer_token: {
                            readonly type: "object";
                            readonly required: readonly ["token_value", "token_cryptogram", "token_expiry_month", "token_expiry_year"];
                            readonly properties: {
                                readonly token_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly token_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\\\\\/\\\\\\\\!@#\\\\\\\\$%\\\\\\\\^&\\\\\\\\*\\\\\\\\(\\\\\\\\)\\\\\\\\{\\\\\\\\}_\\\\\\\\+\\\\\\\\=\\\\\\\\|:”;’,\\\\\\\\.~`\\\\\\\\-\\\\\\\\\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly token_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly token_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value ";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["issuer_token", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "dbr5tekgwo4lq";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly cardaccountid: "CA0AAEF9000000000123";
                                readonly cvv: "123";
                                readonly card_end: "0055";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using card account id";
                    readonly properties: {
                        readonly cardaccountid: {
                            readonly type: "string";
                            readonly description: "Unique ID created by BillDesk for the combination of card number, mercid and customer_refid";
                            readonly examples: readonly ["CA0AAEF9000000000123"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value ";
                            readonly examples: readonly ["123"];
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly pattern: "^[A-Za-z0-9\\\\s\\\\.'\\\\-\\\\~\\\\@\\\\_]{1,120}$";
                            readonly description: "Cardholder name";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["cardaccountid", "cvv", "card_end"];
                }, {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "77jgo8f9g4srj";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly network_token: {
                                    readonly token_value: "1234383920541234";
                                    readonly token_cryptogram: "/1234AAASMuXoH8AmYMoglY1234=";
                                    readonly token_expiry_month: "12";
                                    readonly token_expiry_year: "2029";
                                };
                                readonly card_end: "0004";
                                readonly cvv: "123";
                                readonly holder_name: "John Doe";
                            };
                        };
                    };
                    readonly title: "Pay using alt id token";
                    readonly properties: {
                        readonly altid_token: {
                            readonly type: "object";
                            readonly required: readonly ["altid_value", "altid_cryptogram", "altid_expiry_month", "altid_expiry_year"];
                            readonly properties: {
                                readonly altid_value: {
                                    readonly type: "string";
                                    readonly description: "Token Value – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[A-Za-z0-9]{1,35}$";
                                    readonly examples: readonly ["1234383920541234"];
                                };
                                readonly altid_cryptogram: {
                                    readonly type: "string";
                                    readonly description: "Token Cryptogram – as received from TSP, provided in the ‘Detokenize’ response";
                                    readonly pattern: "^[a-zA-Z0-9\\\\/\\\\!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)\\\\{\\\\}_\\\\+\\\\=\\\\|:”;’,\\\\.~`\\\\-\\\\\\\\]{1,256}$";
                                    readonly examples: readonly ["/1234AAASMuXoH8AmYMoglY1234="];
                                };
                                readonly altid_expiry_month: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Month – as received from TSP in the MM format";
                                    readonly examples: readonly ["02"];
                                };
                                readonly altid_expiry_year: {
                                    readonly type: "integer";
                                    readonly description: "Token Expiry Year – as received from TSP in the YYYY format";
                                    readonly examples: readonly [2029];
                                };
                                readonly altid_trid: {
                                    readonly type: "string";
                                    readonly description: "conditional: required only for AMEX - validate once";
                                };
                            };
                        };
                        readonly card_end: {
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \n\nNote: For an EMI transaction via network token,this attribute value is required for loan booking";
                            readonly examples: readonly ["0045"];
                        };
                        readonly cvv: {
                            readonly type: "string";
                            readonly description: "Card cvv value";
                            readonly examples: readonly ["123"];
                        };
                        readonly holder_name: {
                            readonly type: "string";
                            readonly description: "Cardholder name";
                            readonly pattern: "^[A-Za-z0-9\\\\\\\\s\\\\\\\\.'\\\\\\\\-\\\\\\\\~\\\\\\\\@\\\\\\\\_]{1,120}$";
                            readonly examples: readonly ["John Doe"];
                        };
                    };
                    readonly required: readonly ["altid_token", "cvv", "holder_name"];
                }];
            };
            readonly mandateid: {
                readonly title: "mandateid";
                readonly "x-stoplight": {
                    readonly id: "joq1b0hwy6hce";
                };
                readonly type: "string";
                readonly description: "Unique mandateid created by BillDesk";
                readonly pattern: "^[A-Za-z0-9]{1,20}$";
                readonly examples: readonly ["MA19E400049927"];
            };
        };
        readonly required: readonly ["mercid", "transactionid", "response_parameters", "payment_method_type", "card"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["BD-Traceid", "BD-Timestamp", "Content-Type", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly objectid: "transaction";
                    readonly transactionid: "X4560477641875";
                    readonly orderid: "ORDER202200000001";
                    readonly mercid: "BDMERCID";
                    readonly transaction_date: "2022-03-18T11:20:07+05:30";
                    readonly amount: "2.00";
                    readonly surcharge: "0.00";
                    readonly discount: "0.00";
                    readonly charge_amount: "2.00";
                    readonly currency: "356";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "Details3";
                        readonly additional_info4: "Details4";
                        readonly additional_info5: "Details5";
                        readonly additional_info6: "Details6";
                        readonly additional_info7: "Details7";
                        readonly additional_info8: "Details8";
                        readonly additional_info9: "Details9";
                        readonly additional_info10: "Details10";
                    };
                    readonly ru: "https://www.merchanturl.com/response.jsp";
                    readonly txn_process_type: "3ds";
                    readonly bankid: "456";
                    readonly itemcode: "DIRECT";
                    readonly bank_ref_no: "517606";
                    readonly auth_status: "0300";
                    readonly transaction_error_code: "TRS0000";
                    readonly transaction_error_desc: "Transaction Successful";
                    readonly transaction_error_type: "success";
                    readonly authcode: "517606";
                    readonly eci: "05";
                    readonly payment_method_type: "card";
                    readonly card: {
                        readonly type: "CREDIT";
                        readonly card_end: "123";
                        readonly network: "VISA";
                        readonly issuer: "ABC Bank";
                    };
                };
            };
            readonly properties: {
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly transactionid: {
                    readonly title: "transactionid";
                    readonly "x-stoplight": {
                        readonly id: "uqizgn6tyoqhg";
                    };
                    readonly type: "string";
                    readonly description: "Unique transactionid created by BillDesk ";
                    readonly pattern: "^[A-Za-z0-9]{14,35}$";
                    readonly examples: readonly ["U4560001099939"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly transaction_date: {
                    readonly title: "transaction_date";
                    readonly "x-stoplight": {
                        readonly id: "d0ekw0quxfwwu";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk transaction date and time in YYYY-MM-DDThh:mm:ssTZD format";
                    readonly format: "date-time";
                    readonly examples: readonly ["2023-03-14T15:14:39+05:30"];
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly surcharge: {
                    readonly title: "surcharge";
                    readonly "x-stoplight": {
                        readonly id: "u8bi4pr2xista";
                    };
                    readonly type: "string";
                    readonly description: "Customer surcharge in two decimals applied to the transaction amount, if any";
                };
                readonly discount: {
                    readonly title: "discount";
                    readonly "x-stoplight": {
                        readonly id: "0dgp8etm5709j";
                    };
                    readonly type: "string";
                    readonly description: "Customer discount in two decimals applied to the transaction amount, if any";
                };
                readonly charge_amount: {
                    readonly title: "charge_amount";
                    readonly "x-stoplight": {
                        readonly id: "m2z4sf48a8a5w";
                    };
                    readonly type: "string";
                    readonly description: "Total charge to the customer";
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly ru: {
                    readonly title: "return URL";
                    readonly "x-stoplight": {
                        readonly id: "2nnmkccdq26ck";
                    };
                    readonly type: "string";
                    readonly pattern: "=^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;{]*[-a-zA-Z0-9+&@#/%=~_|} ]{1,2000}$";
                    readonly description: "Merchants URL where the customer will be redirected after a transaction is completed";
                    readonly examples: readonly ["https://www.merchant.com"];
                };
                readonly txn_process_type: {
                    readonly title: "txn_process_type";
                    readonly "x-stoplight": {
                        readonly id: "lyz1n731cb596";
                    };
                    readonly type: "string";
                    readonly description: "Indicates transaction processing type, will be the following values:\nAFA payment\n•\tcard - 3ds or y3ds or 3ds_redirect\n•\tupi – collect, qr or intent\n•\tnetbanking – nb\n•\teft - offline\nRecurring payment\n•\tcard, upi, bankaccount – si\n\n`y3ds` `3ds` `collect` `intent` `qr` `nb` `eft` `si`";
                    readonly enum: readonly ["y3ds", "3ds", "collect", "intent", "qr", "nb", "eft", "si"];
                    readonly examples: readonly ["y3ds"];
                };
                readonly bankid: {
                    readonly title: "bankid";
                    readonly "x-stoplight": {
                        readonly id: "gf7ntync4cj73";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly examples: readonly ["1HM"];
                };
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly payment_method_type: {
                    readonly title: "payment_method_type";
                    readonly "x-stoplight": {
                        readonly id: "kklghqguq1r3q";
                    };
                    readonly type: "string";
                    readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.\n\n`card` `netbanking` `upi` `eft` `cardless` `bankaccount`";
                    readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                };
                readonly auth_status: {
                    readonly title: "auth_status";
                    readonly "x-stoplight": {
                        readonly id: "35i21snltcrdq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the authorization status of the transaction with the following possible values:\n•\t0300 - transaction is successful\n•\t0002 - transaction is pending for authorization\n•\t0399 - transaction failed\n\n`0300` `0002` `0399`";
                    readonly enum: readonly ["0300", "0002", "0399"];
                };
                readonly transaction_error_code: {
                    readonly title: "error_code";
                    readonly "x-stoplight": {
                        readonly id: "2grhtze0qf6ob";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error code for the response";
                };
                readonly transaction_error_desc: {
                    readonly title: "error_desc";
                    readonly "x-stoplight": {
                        readonly id: "uyor3loffwtew";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error description for the response";
                };
                readonly transaction_error_type: {
                    readonly title: "error_type";
                    readonly "x-stoplight": {
                        readonly id: "snpogojwqc0aq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error type for the response";
                };
                readonly eci: {
                    readonly title: "eci";
                    readonly "x-stoplight": {
                        readonly id: "jq2g7i098vu5j";
                    };
                    readonly type: "string";
                    readonly description: "Authentication ECI indicator, as per the 3ds protocol (for V, M, D, A cards)";
                };
                readonly authcode: {
                    readonly title: "authcode";
                    readonly "x-stoplight": {
                        readonly id: "a760wo51p1b9k";
                    };
                    readonly type: "string";
                    readonly description: "Authorization code received from the acquirer for a successfully authorized card transaction";
                };
                readonly bank_ref_no: {
                    readonly title: "bank_ref_no";
                    readonly "x-stoplight": {
                        readonly id: "tls0w5ung6eha";
                    };
                    readonly type: "string";
                    readonly description: "Transaction reference number generated by bank or acquirer ";
                };
                readonly card: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "n1nmwdiqy5hrc";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly type: "DEBIT";
                                readonly card_end: "1234";
                                readonly network: "VISA";
                                readonly issuer: "ABC Bank";
                            };
                        };
                    };
                    readonly properties: {
                        readonly type: {
                            readonly title: "card_type";
                            readonly "x-stoplight": {
                                readonly id: "r4tyk0ee6k6u5";
                            };
                            readonly type: "string";
                            readonly description: "Card product type, takes the following values - debit, credit or prepaid";
                            readonly examples: readonly ["debit, credit, prepaid"];
                        };
                        readonly masked_value: {
                            readonly title: "masked_value";
                            readonly "x-stoplight": {
                                readonly id: "r3wddilt5cyy4";
                            };
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \nNote: For an EMI transaction via network token, this attribute value is required for loan booking";
                            readonly examples: readonly ["xxxxxxxxxxxx1001"];
                        };
                        readonly network: {
                            readonly title: "card_network";
                            readonly "x-stoplight": {
                                readonly id: "fmhnjhdrk4ngb";
                            };
                            readonly type: "string";
                            readonly description: "Card network, for eg. visa";
                            readonly examples: readonly ["VISA, MASTER"];
                        };
                        readonly issuer: {
                            readonly title: "card_issuer";
                            readonly "x-stoplight": {
                                readonly id: "tm5adiwnqv7q0";
                            };
                            readonly type: "string";
                            readonly description: "Card issuer";
                        };
                    };
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
                readonly mandate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly objectid: {
                            readonly type: "string";
                        };
                        readonly mercid: {
                            readonly type: "string";
                        };
                        readonly customer_refid: {
                            readonly type: "string";
                        };
                        readonly subscription_refid: {
                            readonly type: "string";
                        };
                        readonly subscription_desc: {
                            readonly type: "string";
                        };
                        readonly amount: {
                            readonly type: "string";
                        };
                        readonly amount_type: {
                            readonly type: "string";
                        };
                        readonly start_date: {
                            readonly type: "string";
                        };
                        readonly end_date: {
                            readonly type: "string";
                        };
                        readonly frequency: {
                            readonly type: "string";
                        };
                        readonly payment_method_type: {
                            readonly type: "string";
                        };
                        readonly currency: {
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly type: "string";
                        };
                        readonly mandateid: {
                            readonly type: "string";
                        };
                        readonly createdon: {
                            readonly type: "string";
                        };
                        readonly verification_error_code: {
                            readonly type: "string";
                        };
                        readonly verification_error_type: {
                            readonly type: "string";
                        };
                        readonly verification_error_desc: {
                            readonly type: "string";
                        };
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly objectid: "mandate";
                            readonly mercid: "BDMERCID";
                            readonly customer_refid: "CUSTREF00A00011";
                            readonly subscription_refid: "SUBREF00A00011";
                            readonly subscription_desc: "Family Plan";
                            readonly amount: "1500.00";
                            readonly amount_type: "maximum";
                            readonly start_date: "2021-05-16";
                            readonly end_date: "2029-10-22";
                            readonly frequency: "adho";
                            readonly payment_method_type: "card";
                            readonly currency: "356";
                            readonly status: "pending";
                            readonly mandateid: "MA0DDD00050243";
                            readonly createdon: "2021-05-16T18:23:11+05:30";
                            readonly verification_error_code: "TRS0000";
                            readonly verification_error_type: "success";
                            readonly verification_error_desc: "Transaction Successful";
                        };
                    };
                };
                readonly payment_category: {
                    readonly title: "payment_category";
                    readonly "x-stoplight": {
                        readonly id: "epd66eokga23s";
                    };
                    readonly type: "string";
                    readonly description: "Payment Category Code, defines the transaction belonging to the payment mode.\n• 00 - Card Gateway\n• 01 - Netbanking\n• 02 - Credit card\n• 03 - Debit card\n• 04 - Cash card\n• 05 - Mobile wallet\n• 10 - UPI\n• 11 - Bharat QR\n• 12 - Loan EMI\n• 13 - NEFT\n• 18 - UPI Credit\n• 19 - ENACH\n• 20 - CBDC\n• 21 - UPI Prepaid Wallet\n• 22 - UPI Credit Line";
                    readonly examples: readonly ["18"];
                };
                readonly me_ref_id: {
                    readonly title: "me_ref_id";
                    readonly "x-stoplight": {
                        readonly id: "5gfw31bjgpf6x";
                    };
                    readonly type: "string";
                    readonly description: "Unique identifier for a merchant, defined by the acquiring bank as a 6 digit code";
                    readonly examples: readonly ["545963"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ValidateAuthentication: {
    readonly body: {
        readonly type: "object";
        readonly "x-examples": {
            readonly "Example 1": {
                readonly authenticationid: "A4560000345048";
                readonly payment_method_type: "card";
                readonly card: {
                    readonly number: "4242420000001234";
                    readonly expiry_month: "12";
                    readonly expiry_year: "2029";
                    readonly cvv: "123";
                    readonly holder_name: "John Doe";
                };
                readonly response_parameters: {
                    readonly cres: "eJytmFmvo8iSgN/5Fa26j1Y3qxdariMlO9hgsy8vIwyYfTGLWX794HP6VFXX1Ghujy7S0UmCzMiIzIgv0nk0kjaKGD0KhjZ6O8pR1XyXA364Xvl88vF+ivl/jvm6mfrze/W+TZS3g";
                };
            };
        };
        readonly properties: {
            readonly mercid: {
                readonly title: "mercid";
                readonly "x-stoplight": {
                    readonly id: "43ns25lu1fyuc";
                };
                readonly type: "string";
                readonly pattern: "^[A-Za-z0-9]{1,10}$";
                readonly description: "Unique identifier as defined by BillDesk for each merchant";
                readonly examples: readonly ["BDMERCID"];
            };
            readonly authenticationid: {
                readonly title: "authenticationid";
                readonly "x-stoplight": {
                    readonly id: "c1hskskz8e2iq";
                };
                readonly type: "string";
                readonly description: "Unique authenticationid created by BillDesk";
                readonly pattern: "^[a-zA-Z0-9]{14,35}$";
                readonly examples: readonly ["A1HM0000389872"];
            };
            readonly payment_method_type: {
                readonly title: "payment_method_type";
                readonly "x-stoplight": {
                    readonly id: "kklghqguq1r3q";
                };
                readonly type: "string";
                readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.";
                readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                readonly examples: readonly ["card"];
            };
            readonly response_parameters: {
                readonly type: "object";
                readonly "x-examples": {
                    readonly "Example 1": {
                        readonly cres: "eJytmFmvo8iSgN/5Fa26j 1Y3qxdariMlO9hgsy8vIwyYfTGLWX7 94HP6VFXX1Ghujy7S0UmCzMiIzIgv0 nk0kjaKGD0KhjZ6O8pR1XyXA364Xvl 88vF+ivl/jvm6mfrze/W+TZS3g";
                        readonly AccuResponseCode: "ACCU000";
                        readonly session: "X4440639244491";
                        readonly AccuGuid: "a13df076-5c82-4fbf-aa5c-be11e9847e9a";
                        readonly AccuRequestId: "MGI2ZTE2M2RjYzJjNTBhMDlkMzA1OTc2NmU3OTBjOTdjNjk3NjA5MDdmY2RlMDI1MTA1MDBjOTYyMzMyODNjNg==";
                        readonly MD: "";
                        readonly Pares: "";
                    };
                };
                readonly properties: {
                    readonly cres: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be cres for 3ds 2.0 flow";
                        readonly examples: readonly ["eJytmFmvo8iSgN/5Fa26j 1Y3qxdariMlO9hgsy8vIwyYfTGLWX7 94HP6VFXX1Ghujy7S0UmCzMiIzIgv0 nk0kjaKGD0KhjZ6O8pR1XyXA364Xvl 88vF+ivl/jvm6mfrze/W+TZS3g"];
                    };
                    readonly AccuResponseCode: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["ACCU000 "];
                    };
                    readonly session: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["X4440639244491"];
                    };
                    readonly AccuGuid: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["a13df076-5c82-4fbf-aa5c-be11e9847e9a"];
                    };
                    readonly AccuRequestId: {
                        readonly type: "string";
                        readonly description: "Response parameters as received from the issuer, and will be received for Rupay cards";
                        readonly examples: readonly ["MGI2ZTE2M2RjYzJjNTBhMDlkMzA1OTc2NmU3OTBjOTdjNjk3NjA5MDdmY2RlMDI1MTA1MDBjOTYyMzMyODNjNg==\""];
                    };
                    readonly otp: {
                        readonly type: "string";
                        readonly description: "for a native authentication where next_step = capture_otp";
                    };
                    readonly TermUrl: {
                        readonly type: "string";
                        readonly description: "Payment parameter for rupay redirect flow";
                    };
                    readonly cardend: {
                        readonly type: "string";
                        readonly description: "Payment parameter for rupay redirect flow";
                    };
                };
            };
        };
        readonly required: readonly ["mercid", "authenticationid", "payment_method_type", "response_parameters"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Content-Type": {
                    readonly type: "string";
                    readonly examples: readonly ["application/json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request Content-Type to take the values application/jose";
                };
                readonly "BD-Traceid": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "BD-TraceID is a unique identifier passed by the merchant to ensure request idempotency. Requests with identical BD-TraceID within a 24 hour window would fail.";
                };
                readonly "BD-Timestamp": {
                    readonly type: "string";
                    readonly examples: readonly ["20201203182838"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Request timestamp to identify date and time of origin of request. Example, a value of BD-Timestamp 20210113180403 identifies the request to have originated on 13th January 2021 at 06:04:03 PM.";
                };
                readonly Accept: {
                    readonly type: "string";
                    readonly examples: readonly ["application/jose"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Accept Response Content-Type to take the values application/jose";
                };
            };
            readonly required: readonly ["Content-Type", "BD-Traceid", "BD-Timestamp", "Accept"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly "x-examples": {
                readonly "Example 1": {
                    readonly itemcode: "VDDIRECT";
                    readonly objectid: "authentication";
                    readonly authenticationid: "A4560000345048";
                    readonly authentication_date: "2022-03-27T10:33:01+05:30";
                    readonly amount: "2.00";
                    readonly currency: "356";
                    readonly mercid: "BDMERCID";
                    readonly bankid: "456";
                    readonly payment_method_type: "card";
                    readonly authentication_type: "redirect";
                    readonly authentication_status: "success";
                    readonly orderid: "27000000001";
                    readonly authentication_error_code: "AUS0000";
                    readonly authentication_error_type: "success";
                    readonly authentication_error_desc: "Authentication Successful";
                    readonly additional_info: {
                        readonly additional_info1: "Details1";
                        readonly additional_info2: "Details2";
                        readonly additional_info3: "Details3";
                        readonly additional_info4: "Details4";
                        readonly additional_info5: "Details5";
                        readonly additional_info6: "Details6";
                        readonly additional_info7: "Details7";
                        readonly additional_info8: "Details8";
                        readonly additional_info9: "Details9";
                        readonly additional_info10: "Details10";
                    };
                    readonly card: {
                        readonly type: "DEBIT";
                        readonly card_end: "1234";
                        readonly network: "VISA";
                        readonly issuer: "ABC Bank";
                    };
                    readonly enrolled: "Y";
                    readonly eci: "05";
                    readonly eci_status: "Y";
                    readonly cavv: "MjcwMzIyQTQcfrtyMDAzNDUwNDg=";
                    readonly xid: "MjIwMzIxdtuhjAwMDAzNDUwNDg=";
                    readonly cavvAlgorithm: "2";
                };
            };
            readonly properties: {
                readonly itemcode: {
                    readonly title: "item code";
                    readonly "x-stoplight": {
                        readonly id: "tz16mo44yvoae";
                    };
                    readonly type: "string";
                    readonly description: "Itemcode value as provided by BillDesk, with a default value DIRECT";
                    readonly pattern: "^[A-Za-z0-9]{1,20}$";
                    readonly examples: readonly ["DIRECT"];
                };
                readonly objectid: {
                    readonly title: "objectid";
                    readonly "x-stoplight": {
                        readonly id: "bbwm8bhhbqd4r";
                    };
                    readonly type: "string";
                    readonly description: "String representing the object's type. Objects of the same type share the same value. \n\n`transaction` `authentication` `mandate` `invoice` `cardaccount` `validatevpa` `dispute` `settlement` `altid` `mandate_token` `accountvalidation` `refund`";
                    readonly enum: readonly ["transaction", "authentication", "mandate", "invoice", "cardaccount", "validatevpa", "dispute", "settlement", "altid", "mandate_token", "accountvalidation", "refund"];
                };
                readonly authenticationid: {
                    readonly title: "authenticationid";
                    readonly "x-stoplight": {
                        readonly id: "c1hskskz8e2iq";
                    };
                    readonly type: "string";
                    readonly description: "Unique authenticationid created by BillDesk";
                    readonly pattern: "^[a-zA-Z0-9]{14,35}$";
                    readonly examples: readonly ["A1HM0000389872"];
                };
                readonly authentication_date: {
                    readonly title: "authentication_date";
                    readonly "x-stoplight": {
                        readonly id: "uz8duh7gras5w";
                    };
                    readonly type: "string";
                    readonly description: "Authentication date and time in YYYY-MM-DDThh:mm:ssTZD format";
                };
                readonly amount: {
                    readonly title: "amount";
                    readonly "x-stoplight": {
                        readonly id: "s5xd8bwxp2orm";
                    };
                    readonly type: "string";
                    readonly pattern: "^([1-9]{1}[0-9]{0,7}(\\.[0-9]{1,2})?)$";
                    readonly description: "Transaction amount in two decimals, eg. 299.28";
                    readonly examples: readonly ["299.28"];
                };
                readonly currency: {
                    readonly title: "currency";
                    readonly "x-stoplight": {
                        readonly id: "1ehjh4f7vidz7";
                    };
                    readonly type: "string";
                    readonly description: "ISO currency code of the transaction amount, for INR this value will be 356";
                };
                readonly mercid: {
                    readonly title: "mercid";
                    readonly "x-stoplight": {
                        readonly id: "43ns25lu1fyuc";
                    };
                    readonly type: "string";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly description: "Unique identifier as defined by BillDesk for each merchant";
                    readonly examples: readonly ["BDMERCID"];
                };
                readonly bankid: {
                    readonly title: "bankid";
                    readonly "x-stoplight": {
                        readonly id: "gf7ntync4cj73";
                    };
                    readonly type: "string";
                    readonly description: "BillDesk defined unique identifier for acquirer\nMandatory for Upi and Netbanking flows";
                    readonly pattern: "^[A-Za-z0-9]{1,10}$";
                    readonly examples: readonly ["1HM"];
                };
                readonly payment_method_type: {
                    readonly title: "payment_method_type";
                    readonly "x-stoplight": {
                        readonly id: "kklghqguq1r3q";
                    };
                    readonly type: "string";
                    readonly description: "Represents the method of payment, and can take the following values - card, netbanking, wallet, upi, eft, bankaccount, cashcard, cardless (non-card emi option)\nThe associated object will also be provided in the request.\n\n`card` `netbanking` `upi` `eft` `cardless` `bankaccount`";
                    readonly enum: readonly ["card", "netbanking", "upi", "eft", "cardless", "bankaccount"];
                };
                readonly authentication_type: {
                    readonly title: "authentication_type";
                    readonly "x-stoplight": {
                        readonly id: "c33ke2q5rl7ql";
                    };
                    readonly type: "string";
                    readonly description: "Represents the type of authentication initiated in the request, will be fixed value - 3ds2\n\n`3ds2`";
                    readonly enum: readonly ["3ds2"];
                    readonly examples: readonly ["3ds2"];
                };
                readonly orderid: {
                    readonly title: "orderid";
                    readonly "x-stoplight": {
                        readonly id: "lmwrwf7xn6wq8";
                    };
                    readonly type: "string";
                    readonly description: "Unique ID generated by the merchant for each request";
                    readonly pattern: "^[-/~A-Za-z0-9\\_ \\:.,#@!\\\\*\\\\+]{1,120}$";
                    readonly examples: readonly ["TEST0000009005"];
                };
                readonly authentication_status: {
                    readonly title: "authentication_status";
                    readonly "x-stoplight": {
                        readonly id: "h2j1d7gkgfr54";
                    };
                    readonly type: "string";
                    readonly description: "Represents the status of the request – with possible values as \n•\tpending\n•\tsuccess\n•\tfailure\n\n`pending` `success` `failure`";
                    readonly enum: readonly ["pending", "success", "failure"];
                };
                readonly authentication_error_code: {
                    readonly title: "error_code";
                    readonly "x-stoplight": {
                        readonly id: "2grhtze0qf6ob";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error code for the response";
                };
                readonly authentication_error_type: {
                    readonly title: "error_type";
                    readonly "x-stoplight": {
                        readonly id: "snpogojwqc0aq";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error type for the response";
                };
                readonly authentication_error_desc: {
                    readonly title: "error_desc";
                    readonly "x-stoplight": {
                        readonly id: "uyor3loffwtew";
                    };
                    readonly type: "string";
                    readonly description: "Represents the error description for the response";
                };
                readonly eci: {
                    readonly title: "eci";
                    readonly "x-stoplight": {
                        readonly id: "jq2g7i098vu5j";
                    };
                    readonly type: "string";
                    readonly description: "Authentication ECI indicator, as per the 3ds protocol (for V, M, D, A cards)";
                };
                readonly cavv: {
                    readonly title: "cavv";
                    readonly "x-stoplight": {
                        readonly id: "72ehfi721p2mm";
                    };
                    readonly type: "string";
                    readonly description: "CAVV value generated by issuer (for V, M, D, A cards)";
                };
                readonly tranId: {
                    readonly type: "string";
                };
                readonly rupay_auth_ref_no: {
                    readonly title: "rupay_auth_ref_no";
                    readonly "x-stoplight": {
                        readonly id: "p2pdfeb2zd0g6";
                    };
                    readonly type: "string";
                    readonly description: "Refers to the specific transaction reference provided by NPCI (for R cards)";
                };
                readonly authenticationValue: {
                    readonly type: "string";
                };
                readonly tranCtx_id: {
                    readonly type: "string";
                };
                readonly card: {
                    readonly type: "object";
                    readonly "x-stoplight": {
                        readonly id: "n1nmwdiqy5hrc";
                    };
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly card: {
                                readonly type: "DEBIT";
                                readonly card_end: "1234";
                                readonly network: "VISA";
                                readonly issuer: "ABC Bank";
                            };
                        };
                    };
                    readonly properties: {
                        readonly type: {
                            readonly title: "card_type";
                            readonly "x-stoplight": {
                                readonly id: "r4tyk0ee6k6u5";
                            };
                            readonly type: "string";
                            readonly description: "Card product type, takes the following values - debit, credit or prepaid";
                            readonly examples: readonly ["debit, credit, prepaid"];
                        };
                        readonly masked_value: {
                            readonly title: "masked_value";
                            readonly "x-stoplight": {
                                readonly id: "r3wddilt5cyy4";
                            };
                            readonly type: "string";
                            readonly description: "Last 4 digits of the card number \nNote: For an EMI transaction via network token, this attribute value is required for loan booking";
                            readonly examples: readonly ["xxxxxxxxxxxx1001"];
                        };
                        readonly network: {
                            readonly title: "card_network";
                            readonly "x-stoplight": {
                                readonly id: "fmhnjhdrk4ngb";
                            };
                            readonly type: "string";
                            readonly description: "Card network, for eg. visa";
                            readonly examples: readonly ["VISA, MASTER"];
                        };
                        readonly issuer: {
                            readonly title: "card_issuer";
                            readonly "x-stoplight": {
                                readonly id: "tm5adiwnqv7q0";
                            };
                            readonly type: "string";
                            readonly description: "Card issuer";
                        };
                    };
                };
                readonly threeds_version: {
                    readonly title: "threeds_version";
                    readonly "x-stoplight": {
                        readonly id: "o8scvjfj8moas";
                    };
                    readonly type: "string";
                    readonly description: "Protocol of the 3ds2.0 version used for authentication\n\n\n`2.1.0` `2.2.0`";
                    readonly enum: readonly ["2.1.0", "2.2.0"];
                };
                readonly ds_transaction_id: {
                    readonly title: "ds_transaction_id";
                    readonly "x-stoplight": {
                        readonly id: "wceohqaji2zvf";
                    };
                    readonly type: "string";
                    readonly description: "Directory server transaction id for 3ds2.0";
                    readonly pattern: "^[0-9a-f]{8}[1-5][0-9a-f]{3}[0-9a-f]{12}$";
                    readonly examples: readonly ["9ae6259e-08b8-42bb97a2-48d8a1d2a690"];
                };
                readonly threeds_transaction_id: {
                    readonly title: "threeds_transaction_id";
                    readonly "x-stoplight": {
                        readonly id: "c54txyf8e8aqp";
                    };
                    readonly type: "string";
                    readonly description: "Threeds server transaction id";
                    readonly format: "uuid";
                    readonly examples: readonly ["4184a9f8-b0f3-47d2-91ec-bc9939080e32"];
                };
                readonly additional_info: {
                    readonly type: "object";
                    readonly "x-examples": {
                        readonly "Example 1": {
                            readonly additional_info: {
                                readonly additional_info1: "Details1";
                                readonly additional_info2: "Details2";
                                readonly additional_info3: "Details3";
                                readonly additional_info4: "Details4";
                                readonly additional_info5: "Details5";
                                readonly additional_info6: "Details6";
                                readonly additional_info7: "Details7";
                                readonly additional_info8: "Details8";
                                readonly additional_info9: "Details9";
                                readonly additional_info10: "Details10";
                            };
                        };
                    };
                    readonly description: "Array of 7 additional_info values that can be attached to\nthe transaction.\nNote: Merchant is advised to not pass customer PII\ninformation in additional info fields.";
                    readonly properties: {
                        readonly additional_info1: {
                            readonly type: "string";
                            readonly examples: readonly ["Details1"];
                        };
                        readonly additional_info2: {
                            readonly type: "string";
                            readonly examples: readonly ["Details2"];
                        };
                        readonly additional_info3: {
                            readonly type: "string";
                            readonly examples: readonly ["Details3"];
                        };
                        readonly additional_info4: {
                            readonly type: "string";
                            readonly examples: readonly ["Details4"];
                        };
                        readonly additional_info5: {
                            readonly type: "string";
                            readonly examples: readonly ["Details5"];
                        };
                        readonly additional_info6: {
                            readonly type: "string";
                            readonly examples: readonly ["Details6"];
                        };
                        readonly additional_info7: {
                            readonly type: "string";
                            readonly examples: readonly ["Details7"];
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly default: {
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "integer";
                    readonly description: "This will be same as HTTP response code";
                };
                readonly error_type: {
                    readonly type: "string";
                    readonly description: "This indicates of the category of errors that could be encountered, for e.g. validation_error, api_connection_error, etc.";
                };
                readonly error_code: {
                    readonly type: "string";
                    readonly description: "Under the error_type, there could be different error_codes that could be returned depending upon the API and the underlying interaction";
                };
                readonly message: {
                    readonly type: "string";
                    readonly description: "More details as a description for the error_code";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
export { CreateAuthentication, CreateMandateToken, CreateOrder, CreateRefund, CreateTransaction, ModifyMandateToken, PostPaymentsV12TransactionsGet, RetrieveAuthentication, RetrieveOrder, RetrieveRefund, UpdateTransaction, ValidateAuthentication };
